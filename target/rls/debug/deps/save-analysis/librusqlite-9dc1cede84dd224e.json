{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2","program":"/Users/oishikdas/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","rusqlite","--edition=2018","/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=9dc1cede84dd224e","-C","extra-filename=-9dc1cede84dd224e","--out-dir","/Users/oishikdas/projects/rust/password_manager_rust/target/rls/debug/deps","-L","dependency=/Users/oishikdas/projects/rust/password_manager_rust/target/rls/debug/deps","--extern","bitflags=/Users/oishikdas/projects/rust/password_manager_rust/target/rls/debug/deps/libbitflags-1502ba184b1becb5.rmeta","--extern","fallible_iterator=/Users/oishikdas/projects/rust/password_manager_rust/target/rls/debug/deps/libfallible_iterator-a83113b6fc6a2df6.rmeta","--extern","fallible_streaming_iterator=/Users/oishikdas/projects/rust/password_manager_rust/target/rls/debug/deps/libfallible_streaming_iterator-a6eea49792bcf1ec.rmeta","--extern","hashlink=/Users/oishikdas/projects/rust/password_manager_rust/target/rls/debug/deps/libhashlink-e367ae01c1da8f28.rmeta","--extern","libsqlite3_sys=/Users/oishikdas/projects/rust/password_manager_rust/target/rls/debug/deps/liblibsqlite3_sys-420f4f2414532b4d.rmeta","--extern","memchr=/Users/oishikdas/projects/rust/password_manager_rust/target/rls/debug/deps/libmemchr-4d6bf5f637d0c8f5.rmeta","--extern","smallvec=/Users/oishikdas/projects/rust/password_manager_rust/target/rls/debug/deps/libsmallvec-34a47a30d3f48204.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/oishikdas/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/oishikdas/projects/rust/password_manager_rust/target/rls/debug/deps/librusqlite-9dc1cede84dd224e.rmeta"},"prelude":{"crate_id":{"name":"rusqlite","disambiguator":[2800287818074170109,5310884561573934469]},"crate_root":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src","external_crates":[{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[9021465345373980394,3124973195650668090]}},{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[9602256960182177626,6090626646909615487]}},{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[7262137911650218293,7653052996173785719]}},{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[779572931692069488,12103900165225902944]}},{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[14824622025657768391,11084704428800266340]}},{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[13927858221183108308,2936751290383562167]}},{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[5887051544123270319,11267639612245428731]}},{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[17538919964300869834,13280875134487798303]}},{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[3857365019506907746,1978006889988524963]}},{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[6420578954683938766,12386751207156539571]}},{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[12077145375566927939,15528323503669178]}},{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[15870750671565619089,8732159814179211948]}},{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[4047794608019940794,5355446413855566983]}},{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[6496543397262938517,7778595101833052780]}},{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","num":15,"id":{"name":"panic_unwind","disambiguator":[4847089225717416183,18113406167765430021]}},{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","num":16,"id":{"name":"libsqlite3_sys","disambiguator":[7299559653697496471,14683245639331012083]}},{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/cache.rs","num":17,"id":{"name":"hashlink","disambiguator":[3434294061206702021,1809201942320629612]}},{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/cache.rs","num":18,"id":{"name":"hashbrown","disambiguator":[18082768038515933228,8835821564356036296]}},{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/cache.rs","num":19,"id":{"name":"ahash","disambiguator":[8187233699390192684,1510723108132636720]}},{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/row.rs","num":20,"id":{"name":"fallible_iterator","disambiguator":[2566854053108413330,1289822009544174793]}},{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/row.rs","num":21,"id":{"name":"fallible_streaming_iterator","disambiguator":[895416078909718136,5817941751382756240]}},{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/util/small_cstr.rs","num":22,"id":{"name":"smallvec","disambiguator":[7162363312586091645,3607220681373196879]}},{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","num":23,"id":{"name":"bitflags","disambiguator":[10418272330893493645,4222385632089921673]}}],"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":0,"byte_end":60655,"line_start":1,"line_end":1811,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":16,"index":0},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":1442,"byte_end":1456,"line_start":52,"line_end":52,"column_start":9,"column_end":23},"alias_span":null,"name":"ffi","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":119},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":1935,"byte_end":1950,"line_start":72,"line_end":72,"column_start":23,"column_end":38},"alias_span":null,"name":"CachedStatement","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":971},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":1975,"byte_end":1981,"line_start":73,"line_end":73,"column_start":24,"column_end":30},"alias_span":null,"name":"Column","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":912},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":2005,"byte_end":2010,"line_start":74,"line_end":74,"column_start":23,"column_end":28},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":16,"index":119},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":2032,"byte_end":2041,"line_start":75,"line_end":75,"column_start":21,"column_end":30},"alias_span":null,"name":"ErrorCode","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":412},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":2212,"byte_end":2223,"line_start":80,"line_end":80,"column_start":22,"column_end":33},"alias_span":null,"name":"AndThenRows","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":384},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":2225,"byte_end":2228,"line_start":80,"line_end":80,"column_start":35,"column_end":38},"alias_span":null,"name":"Map","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":395},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":2230,"byte_end":2240,"line_start":80,"line_end":80,"column_start":40,"column_end":50},"alias_span":null,"name":"MappedRows","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":437},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":2242,"byte_end":2245,"line_start":80,"line_end":80,"column_start":52,"column_end":55},"alias_span":null,"name":"Row","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":453},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":2247,"byte_end":2255,"line_start":80,"line_end":80,"column_start":57,"column_end":65},"alias_span":null,"name":"RowIndex","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":360},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":2257,"byte_end":2261,"line_start":80,"line_end":80,"column_start":67,"column_end":71},"alias_span":null,"name":"Rows","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":490},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":2291,"byte_end":2300,"line_start":81,"line_end":81,"column_start":28,"column_end":37},"alias_span":null,"name":"Statement","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1189},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":2302,"byte_end":2317,"line_start":81,"line_end":81,"column_start":39,"column_end":54},"alias_span":null,"name":"StatementStatus","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1230},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":2349,"byte_end":2361,"line_start":82,"line_end":82,"column_start":30,"column_end":42},"alias_span":null,"name":"DropBehavior","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":563},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":2363,"byte_end":2372,"line_start":82,"line_end":82,"column_start":44,"column_end":53},"alias_span":null,"name":"Savepoint","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1250},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":2374,"byte_end":2385,"line_start":82,"line_end":82,"column_start":55,"column_end":66},"alias_span":null,"name":"Transaction","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1220},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":2387,"byte_end":2406,"line_start":82,"line_end":82,"column_start":68,"column_end":87},"alias_span":null,"name":"TransactionBehavior","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":690},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":2431,"byte_end":2436,"line_start":83,"line_end":83,"column_start":23,"column_end":28},"alias_span":null,"name":"ToSql","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":2462,"byte_end":2463,"line_start":84,"line_end":84,"column_start":25,"column_end":26},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":647},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/mod.rs","byte_start":222307,"byte_end":222314,"line_start":53,"line_end":53,"column_start":26,"column_end":33},"alias_span":null,"name":"FromSql","value":"","parent":{"krate":0,"index":622}},{"kind":"Use","ref_id":{"krate":0,"index":1257},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/mod.rs","byte_start":222316,"byte_end":222328,"line_start":53,"line_end":53,"column_start":35,"column_end":47},"alias_span":null,"name":"FromSqlError","value":"","parent":{"krate":0,"index":622}},{"kind":"Use","ref_id":{"krate":0,"index":645},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/mod.rs","byte_start":222330,"byte_end":222343,"line_start":53,"line_end":53,"column_start":49,"column_end":62},"alias_span":null,"name":"FromSqlResult","value":"","parent":{"krate":0,"index":622}},{"kind":"Use","ref_id":{"krate":0,"index":690},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/mod.rs","byte_start":222369,"byte_end":222374,"line_start":54,"line_end":54,"column_start":24,"column_end":29},"alias_span":null,"name":"ToSql","value":"","parent":{"krate":0,"index":622}},{"kind":"Use","ref_id":{"krate":0,"index":1286},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/mod.rs","byte_start":222376,"byte_end":222387,"line_start":54,"line_end":54,"column_start":31,"column_end":42},"alias_span":null,"name":"ToSqlOutput","value":"","parent":{"krate":0,"index":622}},{"kind":"Use","ref_id":{"krate":0,"index":1354},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/mod.rs","byte_start":222411,"byte_end":222416,"line_start":55,"line_end":55,"column_start":22,"column_end":27},"alias_span":null,"name":"Value","value":"","parent":{"krate":0,"index":622}},{"kind":"Use","ref_id":{"krate":0,"index":1389},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/mod.rs","byte_start":222443,"byte_end":222451,"line_start":56,"line_end":56,"column_start":26,"column_end":34},"alias_span":null,"name":"ValueRef","value":"","parent":{"krate":0,"index":622}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":0,"byte_end":60655,"line_start":1,"line_end":1811,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":1624},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":23},{"krate":0,"index":24},{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":30},{"krate":0,"index":31},{"krate":0,"index":32},{"krate":0,"index":33},{"krate":0,"index":34},{"krate":0,"index":35},{"krate":0,"index":36},{"krate":0,"index":37},{"krate":0,"index":38},{"krate":0,"index":39},{"krate":0,"index":40},{"krate":0,"index":41},{"krate":0,"index":42},{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":46},{"krate":0,"index":47},{"krate":0,"index":48},{"krate":0,"index":49},{"krate":0,"index":50},{"krate":0,"index":77},{"krate":0,"index":100},{"krate":0,"index":144},{"krate":0,"index":176},{"krate":0,"index":207},{"krate":0,"index":266},{"krate":0,"index":317},{"krate":0,"index":348},{"krate":0,"index":461},{"krate":0,"index":558},{"krate":0,"index":622},{"krate":0,"index":778},{"krate":0,"index":783},{"krate":0,"index":788},{"krate":0,"index":829},{"krate":0,"index":830},{"krate":0,"index":831},{"krate":0,"index":834},{"krate":0,"index":837},{"krate":0,"index":840},{"krate":0,"index":843},{"krate":0,"index":844},{"krate":0,"index":845},{"krate":0,"index":846},{"krate":0,"index":847},{"krate":0,"index":1473},{"krate":0,"index":1485},{"krate":0,"index":1482},{"krate":0,"index":849},{"krate":0,"index":853},{"krate":0,"index":854},{"krate":0,"index":856},{"krate":0,"index":899},{"krate":0,"index":1487},{"krate":0,"index":1509},{"krate":0,"index":1505},{"krate":0,"index":1506},{"krate":0,"index":1502},{"krate":0,"index":1503},{"krate":0,"index":1500},{"krate":0,"index":1494},{"krate":0,"index":1492},{"krate":0,"index":1489},{"krate":0,"index":1510},{"krate":0,"index":1524},{"krate":0,"index":1526},{"krate":0,"index":1528},{"krate":0,"index":1530},{"krate":0,"index":1532},{"krate":0,"index":1548},{"krate":0,"index":1551},{"krate":0,"index":1553},{"krate":0,"index":1556},{"krate":0,"index":1558},{"krate":0,"index":1561},{"krate":0,"index":1563},{"krate":0,"index":1566},{"krate":0,"index":1568},{"krate":0,"index":1571},{"krate":0,"index":1574},{"krate":0,"index":901},{"krate":0,"index":903},{"krate":0,"index":904},{"krate":0,"index":905},{"krate":0,"index":907},{"krate":0,"index":908},{"krate":0,"index":909},{"krate":0,"index":911}],"decl_id":null,"docs":" Rusqlite is an ergonomic wrapper for using SQLite from Rust. It attempts to\n expose an interface similar to [rust-postgres](https://github.com/sfackler/rust-postgres).","sig":null,"attributes":[{"value":"/ Rusqlite is an ergonomic wrapper for using SQLite from Rust. It attempts to","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":0,"byte_end":79,"line_start":1,"line_end":1,"column_start":1,"column_end":80}},{"value":"/ expose an interface similar to [rust-postgres](https://github.com/sfackler/rust-postgres).","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":80,"byte_end":174,"line_start":2,"line_end":2,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":175,"byte_end":178,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":179,"byte_end":190,"line_start":4,"line_end":4,"column_start":1,"column_end":12}},{"value":"/ use rusqlite::{params, Connection, Result};","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":191,"byte_end":238,"line_start":5,"line_end":5,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":239,"byte_end":242,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ #[derive(Debug)]","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":243,"byte_end":263,"line_start":7,"line_end":7,"column_start":1,"column_end":21}},{"value":"/ struct Person {","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":264,"byte_end":283,"line_start":8,"line_end":8,"column_start":1,"column_end":20}},{"value":"/     id: i32,","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":284,"byte_end":300,"line_start":9,"line_end":9,"column_start":1,"column_end":17}},{"value":"/     name: String,","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":301,"byte_end":322,"line_start":10,"line_end":10,"column_start":1,"column_end":22}},{"value":"/     data: Option<Vec<u8>>,","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":323,"byte_end":353,"line_start":11,"line_end":11,"column_start":1,"column_end":31}},{"value":"/ }","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":354,"byte_end":359,"line_start":12,"line_end":12,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":360,"byte_end":363,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ fn main() -> Result<()> {","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":364,"byte_end":393,"line_start":14,"line_end":14,"column_start":1,"column_end":30}},{"value":"/     let conn = Connection::open_in_memory()?;","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":394,"byte_end":443,"line_start":15,"line_end":15,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":444,"byte_end":447,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/     conn.execute(","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":448,"byte_end":469,"line_start":17,"line_end":17,"column_start":1,"column_end":22}},{"value":"/         \"CREATE TABLE person (","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":470,"byte_end":504,"line_start":18,"line_end":18,"column_start":1,"column_end":35}},{"value":"/                   id              INTEGER PRIMARY KEY,","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":505,"byte_end":563,"line_start":19,"line_end":19,"column_start":1,"column_end":59}},{"value":"/                   name            TEXT NOT NULL,","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":564,"byte_end":616,"line_start":20,"line_end":20,"column_start":1,"column_end":53}},{"value":"/                   data            BLOB","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":617,"byte_end":659,"line_start":21,"line_end":21,"column_start":1,"column_end":43}},{"value":"/                   )\",","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":660,"byte_end":685,"line_start":22,"line_end":22,"column_start":1,"column_end":26}},{"value":"/         params![],","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":686,"byte_end":708,"line_start":23,"line_end":23,"column_start":1,"column_end":23}},{"value":"/     )?;","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":709,"byte_end":720,"line_start":24,"line_end":24,"column_start":1,"column_end":12}},{"value":"/     let me = Person {","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":721,"byte_end":746,"line_start":25,"line_end":25,"column_start":1,"column_end":26}},{"value":"/         id: 0,","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":747,"byte_end":765,"line_start":26,"line_end":26,"column_start":1,"column_end":19}},{"value":"/         name: \"Steven\".to_string(),","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":766,"byte_end":805,"line_start":27,"line_end":27,"column_start":1,"column_end":40}},{"value":"/         data: None,","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":806,"byte_end":829,"line_start":28,"line_end":28,"column_start":1,"column_end":24}},{"value":"/     };","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":830,"byte_end":840,"line_start":29,"line_end":29,"column_start":1,"column_end":11}},{"value":"/     conn.execute(","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":841,"byte_end":862,"line_start":30,"line_end":30,"column_start":1,"column_end":22}},{"value":"/         \"INSERT INTO person (name, data) VALUES (?1, ?2)\",","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":863,"byte_end":925,"line_start":31,"line_end":31,"column_start":1,"column_end":63}},{"value":"/         params![me.name, me.data],","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":926,"byte_end":964,"line_start":32,"line_end":32,"column_start":1,"column_end":39}},{"value":"/     )?;","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":965,"byte_end":976,"line_start":33,"line_end":33,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":977,"byte_end":980,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/     let mut stmt = conn.prepare(\"SELECT id, name, data FROM person\")?;","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":981,"byte_end":1055,"line_start":35,"line_end":35,"column_start":1,"column_end":75}},{"value":"/     let person_iter = stmt.query_map(params![], |row| {","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":1056,"byte_end":1115,"line_start":36,"line_end":36,"column_start":1,"column_end":60}},{"value":"/         Ok(Person {","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":1116,"byte_end":1139,"line_start":37,"line_end":37,"column_start":1,"column_end":24}},{"value":"/             id: row.get(0)?,","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":1140,"byte_end":1172,"line_start":38,"line_end":38,"column_start":1,"column_end":33}},{"value":"/             name: row.get(1)?,","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":1173,"byte_end":1207,"line_start":39,"line_end":39,"column_start":1,"column_end":35}},{"value":"/             data: row.get(2)?,","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":1208,"byte_end":1242,"line_start":40,"line_end":40,"column_start":1,"column_end":35}},{"value":"/         })","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":1243,"byte_end":1257,"line_start":41,"line_end":41,"column_start":1,"column_end":15}},{"value":"/     })?;","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":1258,"byte_end":1270,"line_start":42,"line_end":42,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":1271,"byte_end":1274,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/     for person in person_iter {","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":1275,"byte_end":1310,"line_start":44,"line_end":44,"column_start":1,"column_end":36}},{"value":"/         println!(\"Found person {:?}\", person.unwrap());","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":1311,"byte_end":1370,"line_start":45,"line_end":45,"column_start":1,"column_end":60}},{"value":"/     }","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":1371,"byte_end":1380,"line_start":46,"line_end":46,"column_start":1,"column_end":10}},{"value":"/     Ok(())","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":1381,"byte_end":1395,"line_start":47,"line_end":47,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":1396,"byte_end":1401,"line_start":48,"line_end":48,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":1402,"byte_end":1409,"line_start":49,"line_end":49,"column_start":1,"column_end":8}},{"value":"warn(missing_docs)","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":1410,"byte_end":1432,"line_start":50,"line_end":50,"column_start":1,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":913},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/error.rs","byte_start":61033,"byte_end":61046,"line_start":16,"line_end":16,"column_start":5,"column_end":18},"name":"SqliteFailure","qualname":"::error::Error::SqliteFailure","value":"Error::SqliteFailure(ffi::Error, Option<String>)","parent":{"krate":0,"index":912},"children":[],"decl_id":null,"docs":" An error from an underlying SQLite call.\n","sig":null,"attributes":[{"value":"/ An error from an underlying SQLite call.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/error.rs","byte_start":60984,"byte_end":61028,"line_start":15,"line_end":15,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":917},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/error.rs","byte_start":61211,"byte_end":61235,"line_start":20,"line_end":20,"column_start":5,"column_end":29},"name":"SqliteSingleThreadedMode","qualname":"::error::Error::SqliteSingleThreadedMode","value":"Error::SqliteSingleThreadedMode","parent":{"krate":0,"index":912},"children":[],"decl_id":null,"docs":" Error reported when attempting to open a connection when SQLite was\n configured to allow single-threaded use only.\n","sig":null,"attributes":[{"value":"/ Error reported when attempting to open a connection when SQLite was","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/error.rs","byte_start":61081,"byte_end":61152,"line_start":18,"line_end":18,"column_start":5,"column_end":76}},{"value":"/ configured to allow single-threaded use only.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/error.rs","byte_start":61157,"byte_end":61206,"line_start":19,"line_end":19,"column_start":5,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":919},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/error.rs","byte_start":61371,"byte_end":61395,"line_start":24,"line_end":24,"column_start":5,"column_end":29},"name":"FromSqlConversionFailure","qualname":"::error::Error::FromSqlConversionFailure","value":"Error::FromSqlConversionFailure(usize, Type, Box<error::Error + Send + Sync + 'static>)","parent":{"krate":0,"index":912},"children":[],"decl_id":null,"docs":" Error when the value of a particular column is requested, but it cannot\n be converted to the requested Rust type.\n","sig":null,"attributes":[{"value":"/ Error when the value of a particular column is requested, but it cannot","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/error.rs","byte_start":61242,"byte_end":61317,"line_start":22,"line_end":22,"column_start":5,"column_end":80}},{"value":"/ be converted to the requested Rust type.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/error.rs","byte_start":61322,"byte_end":61366,"line_start":23,"line_end":23,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":924},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/error.rs","byte_start":61731,"byte_end":61754,"line_start":30,"line_end":30,"column_start":5,"column_end":28},"name":"IntegralValueOutOfRange","qualname":"::error::Error::IntegralValueOutOfRange","value":"Error::IntegralValueOutOfRange(usize, i64)","parent":{"krate":0,"index":912},"children":[],"decl_id":null,"docs":" Error when SQLite gives us an integral value outside the range of the\n requested type (e.g., trying to get the value 1000 into a `u8`).\n The associated `usize` is the column index,\n and the associated `i64` is the value returned by SQLite.\n","sig":null,"attributes":[{"value":"/ Error when SQLite gives us an integral value outside the range of the","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/error.rs","byte_start":61462,"byte_end":61535,"line_start":26,"line_end":26,"column_start":5,"column_end":78}},{"value":"/ requested type (e.g., trying to get the value 1000 into a `u8`).","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/error.rs","byte_start":61540,"byte_end":61608,"line_start":27,"line_end":27,"column_start":5,"column_end":73}},{"value":"/ The associated `usize` is the column index,","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/error.rs","byte_start":61613,"byte_end":61660,"line_start":28,"line_end":28,"column_start":5,"column_end":52}},{"value":"/ and the associated `i64` is the value returned by SQLite.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/error.rs","byte_start":61665,"byte_end":61726,"line_start":29,"line_end":29,"column_start":5,"column_end":66}}]},{"kind":"TupleVariant","id":{"krate":0,"index":928},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/error.rs","byte_start":61817,"byte_end":61826,"line_start":33,"line_end":33,"column_start":5,"column_end":14},"name":"Utf8Error","qualname":"::error::Error::Utf8Error","value":"Error::Utf8Error(str::Utf8Error)","parent":{"krate":0,"index":912},"children":[],"decl_id":null,"docs":" Error converting a string to UTF-8.\n","sig":null,"attributes":[{"value":"/ Error converting a string to UTF-8.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/error.rs","byte_start":61773,"byte_end":61812,"line_start":32,"line_end":32,"column_start":5,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":931},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/error.rs","byte_start":61954,"byte_end":61962,"line_start":37,"line_end":37,"column_start":5,"column_end":13},"name":"NulError","qualname":"::error::Error::NulError","value":"Error::NulError(::std::ffi::NulError)","parent":{"krate":0,"index":912},"children":[],"decl_id":null,"docs":" Error converting a string to a C-compatible string because it contained\n an embedded nul.\n","sig":null,"attributes":[{"value":"/ Error converting a string to a C-compatible string because it contained","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/error.rs","byte_start":61849,"byte_end":61924,"line_start":35,"line_end":35,"column_start":5,"column_end":80}},{"value":"/ an embedded nul.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/error.rs","byte_start":61929,"byte_end":61949,"line_start":36,"line_end":36,"column_start":5,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":934},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/error.rs","byte_start":62098,"byte_end":62118,"line_start":41,"line_end":41,"column_start":5,"column_end":25},"name":"InvalidParameterName","qualname":"::error::Error::InvalidParameterName","value":"Error::InvalidParameterName(String)","parent":{"krate":0,"index":912},"children":[],"decl_id":null,"docs":" Error when using SQL named parameters and passing a parameter name not\n present in the SQL.\n","sig":null,"attributes":[{"value":"/ Error when using SQL named parameters and passing a parameter name not","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/error.rs","byte_start":61991,"byte_end":62065,"line_start":39,"line_end":39,"column_start":5,"column_end":79}},{"value":"/ present in the SQL.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/error.rs","byte_start":62070,"byte_end":62093,"line_start":40,"line_end":40,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":937},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/error.rs","byte_start":62183,"byte_end":62194,"line_start":44,"line_end":44,"column_start":5,"column_end":16},"name":"InvalidPath","qualname":"::error::Error::InvalidPath","value":"Error::InvalidPath(PathBuf)","parent":{"krate":0,"index":912},"children":[],"decl_id":null,"docs":" Error converting a file path to a string.\n","sig":null,"attributes":[{"value":"/ Error converting a file path to a string.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/error.rs","byte_start":62133,"byte_end":62178,"line_start":43,"line_end":43,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":940},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/error.rs","byte_start":62270,"byte_end":62292,"line_start":47,"line_end":47,"column_start":5,"column_end":27},"name":"ExecuteReturnedResults","qualname":"::error::Error::ExecuteReturnedResults","value":"Error::ExecuteReturnedResults","parent":{"krate":0,"index":912},"children":[],"decl_id":null,"docs":" Error returned when an `execute` call returns rows.\n","sig":null,"attributes":[{"value":"/ Error returned when an `execute` call returns rows.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/error.rs","byte_start":62210,"byte_end":62265,"line_start":46,"line_end":46,"column_start":5,"column_end":60}}]},{"kind":"TupleVariant","id":{"krate":0,"index":942},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/error.rs","byte_start":62423,"byte_end":62442,"line_start":51,"line_end":51,"column_start":5,"column_end":24},"name":"QueryReturnedNoRows","qualname":"::error::Error::QueryReturnedNoRows","value":"Error::QueryReturnedNoRows","parent":{"krate":0,"index":912},"children":[],"decl_id":null,"docs":" Error when a query that was expected to return at least one row (e.g.,\n for `query_row`) did not return any.\n","sig":null,"attributes":[{"value":"/ Error when a query that was expected to return at least one row (e.g.,","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/error.rs","byte_start":62299,"byte_end":62373,"line_start":49,"line_end":49,"column_start":5,"column_end":79}},{"value":"/ for `query_row`) did not return any.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/error.rs","byte_start":62378,"byte_end":62418,"line_start":50,"line_end":50,"column_start":5,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":944},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/error.rs","byte_start":62572,"byte_end":62590,"line_start":55,"line_end":55,"column_start":5,"column_end":23},"name":"InvalidColumnIndex","qualname":"::error::Error::InvalidColumnIndex","value":"Error::InvalidColumnIndex(usize)","parent":{"krate":0,"index":912},"children":[],"decl_id":null,"docs":" Error when the value of a particular column is requested, but the index\n is out of range for the statement.\n","sig":null,"attributes":[{"value":"/ Error when the value of a particular column is requested, but the index","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/error.rs","byte_start":62449,"byte_end":62524,"line_start":53,"line_end":53,"column_start":5,"column_end":80}},{"value":"/ is out of range for the statement.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/error.rs","byte_start":62529,"byte_end":62567,"line_start":54,"line_end":54,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":947},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/error.rs","byte_start":62723,"byte_end":62740,"line_start":59,"line_end":59,"column_start":5,"column_end":22},"name":"InvalidColumnName","qualname":"::error::Error::InvalidColumnName","value":"Error::InvalidColumnName(String)","parent":{"krate":0,"index":912},"children":[],"decl_id":null,"docs":" Error when the value of a named column is requested, but no column\n matches the name for the statement.\n","sig":null,"attributes":[{"value":"/ Error when the value of a named column is requested, but no column","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/error.rs","byte_start":62604,"byte_end":62674,"line_start":57,"line_end":57,"column_start":5,"column_end":75}},{"value":"/ matches the name for the statement.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/error.rs","byte_start":62679,"byte_end":62718,"line_start":58,"line_end":58,"column_start":5,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":950},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/error.rs","byte_start":62927,"byte_end":62944,"line_start":64,"line_end":64,"column_start":5,"column_end":22},"name":"InvalidColumnType","qualname":"::error::Error::InvalidColumnType","value":"Error::InvalidColumnType(usize, String, Type)","parent":{"krate":0,"index":912},"children":[],"decl_id":null,"docs":" Error when the value of a particular column is requested, but the type\n of the result in that column cannot be converted to the requested\n Rust type.\n","sig":null,"attributes":[{"value":"/ Error when the value of a particular column is requested, but the type","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/error.rs","byte_start":62755,"byte_end":62829,"line_start":61,"line_end":61,"column_start":5,"column_end":79}},{"value":"/ of the result in that column cannot be converted to the requested","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/error.rs","byte_start":62834,"byte_end":62903,"line_start":62,"line_end":62,"column_start":5,"column_end":74}},{"value":"/ Rust type.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/error.rs","byte_start":62908,"byte_end":62922,"line_start":63,"line_end":63,"column_start":5,"column_end":19}}]},{"kind":"TupleVariant","id":{"krate":0,"index":955},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/error.rs","byte_start":63078,"byte_end":63098,"line_start":68,"line_end":68,"column_start":5,"column_end":25},"name":"StatementChangedRows","qualname":"::error::Error::StatementChangedRows","value":"Error::StatementChangedRows(usize)","parent":{"krate":0,"index":912},"children":[],"decl_id":null,"docs":" Error when a query that was expected to insert one row did not insert\n any or insert many.\n","sig":null,"attributes":[{"value":"/ Error when a query that was expected to insert one row did not insert","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/error.rs","byte_start":62972,"byte_end":63045,"line_start":66,"line_end":66,"column_start":5,"column_end":78}},{"value":"/ any or insert many.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/error.rs","byte_start":63050,"byte_end":63073,"line_start":67,"line_end":67,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":958},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/error.rs","byte_start":63832,"byte_end":63854,"line_start":86,"line_end":86,"column_start":5,"column_end":27},"name":"ToSqlConversionFailure","qualname":"::error::Error::ToSqlConversionFailure","value":"Error::ToSqlConversionFailure(Box<error::Error + Send + Sync + 'static>)","parent":{"krate":0,"index":912},"children":[],"decl_id":null,"docs":" Error available for the implementors of the `ToSql` trait.\n","sig":null,"attributes":[{"value":"/ Error available for the implementors of the `ToSql` trait.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/error.rs","byte_start":63765,"byte_end":63827,"line_start":85,"line_end":85,"column_start":5,"column_end":67}}]},{"kind":"TupleVariant","id":{"krate":0,"index":961},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/error.rs","byte_start":63972,"byte_end":63984,"line_start":89,"line_end":89,"column_start":5,"column_end":17},"name":"InvalidQuery","qualname":"::error::Error::InvalidQuery","value":"Error::InvalidQuery","parent":{"krate":0,"index":912},"children":[],"decl_id":null,"docs":" Error when the SQL is not a `SELECT`, is not read-only.\n","sig":null,"attributes":[{"value":"/ Error when the SQL is not a `SELECT`, is not read-only.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/error.rs","byte_start":63908,"byte_end":63967,"line_start":88,"line_end":88,"column_start":5,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":963},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/error.rs","byte_start":64563,"byte_end":64580,"line_start":107,"line_end":107,"column_start":5,"column_end":22},"name":"MultipleStatement","qualname":"::error::Error::MultipleStatement","value":"Error::MultipleStatement","parent":{"krate":0,"index":912},"children":[],"decl_id":null,"docs":" Error when the SQL contains multiple statements.\n","sig":null,"attributes":[{"value":"/ Error when the SQL contains multiple statements.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/error.rs","byte_start":64506,"byte_end":64558,"line_start":106,"line_end":106,"column_start":5,"column_end":57}}]},{"kind":"TupleVariant","id":{"krate":0,"index":965},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/error.rs","byte_start":64794,"byte_end":64815,"line_start":111,"line_end":111,"column_start":5,"column_end":26},"name":"InvalidParameterCount","qualname":"::error::Error::InvalidParameterCount","value":"Error::InvalidParameterCount(usize, usize)","parent":{"krate":0,"index":912},"children":[],"decl_id":null,"docs":" Error when the number of bound parameters does not match the number of\n parameters in the query. The first `usize` is how many parameters were\n given, the 2nd is how many were expected.\n","sig":null,"attributes":[{"value":"/ Error when the number of bound parameters does not match the number of","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/error.rs","byte_start":64586,"byte_end":64660,"line_start":108,"line_end":108,"column_start":5,"column_end":79}},{"value":"/ parameters in the query. The first `usize` is how many parameters were","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/error.rs","byte_start":64665,"byte_end":64739,"line_start":109,"line_end":109,"column_start":5,"column_end":79}},{"value":"/ given, the 2nd is how many were expected.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/error.rs","byte_start":64744,"byte_end":64789,"line_start":110,"line_end":110,"column_start":5,"column_end":50}}]},{"kind":"Enum","id":{"krate":0,"index":912},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/error.rs","byte_start":60972,"byte_end":60977,"line_start":14,"line_end":14,"column_start":10,"column_end":15},"name":"Error","qualname":"::error::Error","value":"pub enum Error {\n\n    /// An error from an underlying SQLite call.\n    SqliteFailure(ffi::Error, Option<String>),\n\n    /// Error reported when attempting to open a connection when SQLite was\n    /// configured to allow single-threaded use only.\n    SqliteSingleThreadedMode,\n\n    /// Error when the value of a particular column is requested, but it cannot\n    /// be converted to the requested Rust type.\n    FromSqlConversionFailure(usize, Type,\n                             Box<error::Error + Send + Sync + 'static>),\n\n    /// Error when SQLite gives us an integral value outside the range of the\n    /// requested type (e.g., trying to get the value 1000 into a `u8`).\n    /// The associated `usize` is the column index,\n    /// and the associated `i64` is the value returned by SQLite.\n    IntegralValueOutOfRange(usize, i64),\n\n    /// Error converting a string to UTF-8.\n    Utf8Error(str::Utf8Error),\n\n    /// Error converting a string to a C-compatible string because it contained\n    /// an embedded nul.\n    NulError(::std::ffi::NulError),\n\n    /// Error when using SQL named parameters and passing a parameter name not\n    /// present in the SQL.\n    InvalidParameterName(String),\n\n    /// Error converting a file path to a string.\n    InvalidPath(PathBuf),\n\n    /// Error returned when an `execute` call returns rows.\n    ExecuteReturnedResults,\n\n    /// Error when a query that was expected to return at least one row (e.g.,\n    /// for `query_row`) did not return any.\n    QueryReturnedNoRows,\n\n    /// Error when the value of a particular column is requested, but the index\n    /// is out of range for the statement.\n    InvalidColumnIndex(usize),\n\n    /// Error when the value of a named column is requested, but no column\n    /// matches the name for the statement.\n    InvalidColumnName(String),\n\n    /// Error when the value of a particular column is requested, but the type\n    /// of the result in that column cannot be converted to the requested\n    /// Rust type.\n    InvalidColumnType(usize, String, Type),\n\n    /// Error when a query that was expected to insert one row did not insert\n    /// any or insert many.\n    StatementChangedRows(usize),\n\n    /// Error available for the implementors of the `ToSql` trait.\n    ToSqlConversionFailure(Box<error::Error + Send + Sync + 'static>),\n\n    /// Error when the SQL is not a `SELECT`, is not read-only.\n    InvalidQuery,\n\n    /// Error when the SQL contains multiple statements.\n    MultipleStatement,\n\n    /// Error when the number of bound parameters does not match the number of\n    /// parameters in the query. The first `usize` is how many parameters were\n    /// given, the 2nd is how many were expected.\n    InvalidParameterCount(usize, usize),\n}","parent":null,"children":[{"krate":0,"index":913},{"krate":0,"index":917},{"krate":0,"index":919},{"krate":0,"index":924},{"krate":0,"index":928},{"krate":0,"index":931},{"krate":0,"index":934},{"krate":0,"index":937},{"krate":0,"index":940},{"krate":0,"index":942},{"krate":0,"index":944},{"krate":0,"index":947},{"krate":0,"index":950},{"krate":0,"index":955},{"krate":0,"index":958},{"krate":0,"index":961},{"krate":0,"index":963},{"krate":0,"index":965}],"decl_id":null,"docs":" Enum listing possible errors from rusqlite.\n","sig":null,"attributes":[{"value":"/ Enum listing possible errors from rusqlite.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/error.rs","byte_start":60843,"byte_end":60890,"line_start":10,"line_end":10,"column_start":1,"column_end":48}},{"value":"allow(clippy :: enum_variant_names)","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/error.rs","byte_start":60908,"byte_end":60944,"line_start":12,"line_end":12,"column_start":1,"column_end":37}},{"value":"non_exhaustive","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/error.rs","byte_start":60945,"byte_end":60962,"line_start":13,"line_end":13,"column_start":1,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":92},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/busy.rs","byte_start":75578,"byte_end":75590,"line_start":24,"line_end":24,"column_start":12,"column_end":24},"name":"busy_timeout","qualname":"<Connection>::busy_timeout","value":"pub fn busy_timeout(&Self, Duration) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Set a busy handler that sleeps for a specified amount of time when a\n table is locked. The handler will sleep multiple times until at\n least \"ms\" milliseconds of sleeping have accumulated.","sig":null,"attributes":[{"value":"/ Set a busy handler that sleeps for a specified amount of time when a","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/busy.rs","byte_start":74991,"byte_end":75063,"line_start":13,"line_end":13,"column_start":5,"column_end":77}},{"value":"/ table is locked. The handler will sleep multiple times until at","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/busy.rs","byte_start":75068,"byte_end":75135,"line_start":14,"line_end":14,"column_start":5,"column_end":72}},{"value":"/ least \"ms\" milliseconds of sleeping have accumulated.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/busy.rs","byte_start":75140,"byte_end":75197,"line_start":15,"line_end":15,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/busy.rs","byte_start":75202,"byte_end":75205,"line_start":16,"line_end":16,"column_start":5,"column_end":8}},{"value":"/ Calling this routine with an argument equal to zero turns off all busy","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/busy.rs","byte_start":75210,"byte_end":75284,"line_start":17,"line_end":17,"column_start":5,"column_end":79}},{"value":"/ handlers.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/busy.rs","byte_start":75289,"byte_end":75302,"line_start":18,"line_end":18,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/busy.rs","byte_start":75307,"byte_end":75310,"line_start":19,"line_end":19,"column_start":5,"column_end":8}},{"value":"/ There can only be a single busy handler for a particular database","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/busy.rs","byte_start":75315,"byte_end":75384,"line_start":20,"line_end":20,"column_start":5,"column_end":74}},{"value":"/ connection at any given moment. If another busy handler was defined","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/busy.rs","byte_start":75389,"byte_end":75460,"line_start":21,"line_end":21,"column_start":5,"column_end":76}},{"value":"/ (using `busy_handler`) prior to calling this routine, that other","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/busy.rs","byte_start":75465,"byte_end":75533,"line_start":22,"line_end":22,"column_start":5,"column_end":73}},{"value":"/ busy handler is cleared.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/busy.rs","byte_start":75538,"byte_end":75566,"line_start":23,"line_end":23,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":95},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/busy.rs","byte_start":76910,"byte_end":76922,"line_start":51,"line_end":51,"column_start":12,"column_end":24},"name":"busy_handler","qualname":"<Connection>::busy_handler","value":"pub fn busy_handler(&Self, Option<fn(: i32) -> bool>) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Register a callback to handle `SQLITE_BUSY` errors.","sig":null,"attributes":[{"value":"/ Register a callback to handle `SQLITE_BUSY` errors.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/busy.rs","byte_start":75924,"byte_end":75979,"line_start":34,"line_end":34,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/busy.rs","byte_start":75984,"byte_end":75987,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ If the busy callback is `None`, then `SQLITE_BUSY is returned","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/busy.rs","byte_start":75992,"byte_end":76057,"line_start":36,"line_end":36,"column_start":5,"column_end":70}},{"value":"/ immediately upon encountering the lock.` The argument to the busy","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/busy.rs","byte_start":76062,"byte_end":76131,"line_start":37,"line_end":37,"column_start":5,"column_end":74}},{"value":"/ handler callback is the number of times that the","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/busy.rs","byte_start":76136,"byte_end":76188,"line_start":38,"line_end":38,"column_start":5,"column_end":57}},{"value":"/ busy handler has been invoked previously for the","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/busy.rs","byte_start":76193,"byte_end":76245,"line_start":39,"line_end":39,"column_start":5,"column_end":57}},{"value":"/ same locking event. If the busy callback returns `false`, then no","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/busy.rs","byte_start":76250,"byte_end":76319,"line_start":40,"line_end":40,"column_start":5,"column_end":74}},{"value":"/ additional attempts are made to access the","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/busy.rs","byte_start":76324,"byte_end":76370,"line_start":41,"line_end":41,"column_start":5,"column_end":51}},{"value":"/ database and `SQLITE_BUSY` is returned to the","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/busy.rs","byte_start":76375,"byte_end":76424,"line_start":42,"line_end":42,"column_start":5,"column_end":54}},{"value":"/ application. If the callback returns `true`, then another attempt","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/busy.rs","byte_start":76429,"byte_end":76498,"line_start":43,"line_end":43,"column_start":5,"column_end":74}},{"value":"/ is made to access the database and the cycle repeats.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/busy.rs","byte_start":76503,"byte_end":76560,"line_start":44,"line_end":44,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/busy.rs","byte_start":76565,"byte_end":76568,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ There can only be a single busy handler defined for each database","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/busy.rs","byte_start":76573,"byte_end":76642,"line_start":46,"line_end":46,"column_start":5,"column_end":74}},{"value":"/ connection. Setting a new busy handler clears any previously set","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/busy.rs","byte_start":76647,"byte_end":76715,"line_start":47,"line_end":47,"column_start":5,"column_end":73}},{"value":"/ handler. Note that calling `busy_timeout()` or evaluating `PRAGMA","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/busy.rs","byte_start":76720,"byte_end":76789,"line_start":48,"line_end":48,"column_start":5,"column_end":74}},{"value":"/ busy_timeout=N` will change the busy handler and thus","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/busy.rs","byte_start":76794,"byte_end":76851,"line_start":49,"line_end":49,"column_start":5,"column_end":62}},{"value":"/ clear any previously set busy handler.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/busy.rs","byte_start":76856,"byte_end":76898,"line_start":50,"line_end":50,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":113},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/cache.rs","byte_start":82453,"byte_end":82467,"line_start":37,"line_end":37,"column_start":12,"column_end":26},"name":"prepare_cached","qualname":"<Connection>::prepare_cached","value":"pub fn prepare_cached(&Self, &str) -> Result<CachedStatement>","parent":null,"children":[],"decl_id":null,"docs":" Prepare a SQL statement for execution, returning a previously prepared\n (but not currently in-use) statement if one is available. The\n returned statement will be cached for reuse by future calls to\n `prepare_cached` once it is dropped.","sig":null,"attributes":[{"value":"/ Prepare a SQL statement for execution, returning a previously prepared","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/cache.rs","byte_start":81366,"byte_end":81440,"line_start":11,"line_end":11,"column_start":5,"column_end":79}},{"value":"/ (but not currently in-use) statement if one is available. The","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/cache.rs","byte_start":81445,"byte_end":81510,"line_start":12,"line_end":12,"column_start":5,"column_end":70}},{"value":"/ returned statement will be cached for reuse by future calls to","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/cache.rs","byte_start":81515,"byte_end":81581,"line_start":13,"line_end":13,"column_start":5,"column_end":71}},{"value":"/ `prepare_cached` once it is dropped.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/cache.rs","byte_start":81586,"byte_end":81626,"line_start":14,"line_end":14,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/cache.rs","byte_start":81631,"byte_end":81634,"line_start":15,"line_end":15,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/cache.rs","byte_start":81639,"byte_end":81657,"line_start":16,"line_end":16,"column_start":5,"column_end":23}},{"value":"/ # use rusqlite::{Connection, Result};","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/cache.rs","byte_start":81662,"byte_end":81703,"line_start":17,"line_end":17,"column_start":5,"column_end":46}},{"value":"/ fn insert_new_people(conn: &Connection) -> Result<()> {","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/cache.rs","byte_start":81708,"byte_end":81767,"line_start":18,"line_end":18,"column_start":5,"column_end":64}},{"value":"/     {","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/cache.rs","byte_start":81772,"byte_end":81781,"line_start":19,"line_end":19,"column_start":5,"column_end":14}},{"value":"/         let mut stmt = conn.prepare_cached(\"INSERT INTO People (name) VALUES (?)\")?;","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/cache.rs","byte_start":81786,"byte_end":81874,"line_start":20,"line_end":20,"column_start":5,"column_end":93}},{"value":"/         stmt.execute(&[\"Joe Smith\"])?;","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/cache.rs","byte_start":81879,"byte_end":81921,"line_start":21,"line_end":21,"column_start":5,"column_end":47}},{"value":"/     }","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/cache.rs","byte_start":81926,"byte_end":81935,"line_start":22,"line_end":22,"column_start":5,"column_end":14}},{"value":"/     {","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/cache.rs","byte_start":81940,"byte_end":81949,"line_start":23,"line_end":23,"column_start":5,"column_end":14}},{"value":"/         // This will return the same underlying SQLite statement handle without","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/cache.rs","byte_start":81954,"byte_end":82037,"line_start":24,"line_end":24,"column_start":5,"column_end":88}},{"value":"/         // having to prepare it again.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/cache.rs","byte_start":82042,"byte_end":82084,"line_start":25,"line_end":25,"column_start":5,"column_end":47}},{"value":"/         let mut stmt = conn.prepare_cached(\"INSERT INTO People (name) VALUES (?)\")?;","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/cache.rs","byte_start":82089,"byte_end":82177,"line_start":26,"line_end":26,"column_start":5,"column_end":93}},{"value":"/         stmt.execute(&[\"Bob Jones\"])?;","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/cache.rs","byte_start":82182,"byte_end":82224,"line_start":27,"line_end":27,"column_start":5,"column_end":47}},{"value":"/     }","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/cache.rs","byte_start":82229,"byte_end":82238,"line_start":28,"line_end":28,"column_start":5,"column_end":14}},{"value":"/     Ok(())","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/cache.rs","byte_start":82243,"byte_end":82257,"line_start":29,"line_end":29,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/cache.rs","byte_start":82262,"byte_end":82267,"line_start":30,"line_end":30,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/cache.rs","byte_start":82272,"byte_end":82279,"line_start":31,"line_end":31,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/cache.rs","byte_start":82284,"byte_end":82287,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/cache.rs","byte_start":82292,"byte_end":82305,"line_start":33,"line_end":33,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/cache.rs","byte_start":82310,"byte_end":82313,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if `sql` cannot be converted to a C-compatible string","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/cache.rs","byte_start":82318,"byte_end":82393,"line_start":35,"line_end":35,"column_start":5,"column_end":80}},{"value":"/ or if the underlying SQLite call fails.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/cache.rs","byte_start":82398,"byte_end":82441,"line_start":36,"line_end":36,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":114},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/cache.rs","byte_start":82894,"byte_end":82931,"line_start":46,"line_end":46,"column_start":12,"column_end":49},"name":"set_prepared_statement_cache_capacity","qualname":"<Connection>::set_prepared_statement_cache_capacity","value":"pub fn set_prepared_statement_cache_capacity(&Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Set the maximum number of cached prepared statements this connection\n will hold. By default, a connection will hold a relatively small\n number of cached statements. If you need more, or know that you\n will not use cached statements, you\n can set the capacity manually using this method.\n","sig":null,"attributes":[{"value":"/ Set the maximum number of cached prepared statements this connection","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/cache.rs","byte_start":82564,"byte_end":82636,"line_start":41,"line_end":41,"column_start":5,"column_end":77}},{"value":"/ will hold. By default, a connection will hold a relatively small","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/cache.rs","byte_start":82641,"byte_end":82709,"line_start":42,"line_end":42,"column_start":5,"column_end":73}},{"value":"/ number of cached statements. If you need more, or know that you","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/cache.rs","byte_start":82714,"byte_end":82781,"line_start":43,"line_end":43,"column_start":5,"column_end":72}},{"value":"/ will not use cached statements, you","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/cache.rs","byte_start":82786,"byte_end":82825,"line_start":44,"line_end":44,"column_start":5,"column_end":44}},{"value":"/ can set the capacity manually using this method.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/cache.rs","byte_start":82830,"byte_end":82882,"line_start":45,"line_end":45,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":115},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/cache.rs","byte_start":83090,"byte_end":83120,"line_start":51,"line_end":51,"column_start":12,"column_end":42},"name":"flush_prepared_statement_cache","qualname":"<Connection>::flush_prepared_statement_cache","value":"pub fn flush_prepared_statement_cache(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Remove/finalize all prepared statements currently in the cache.\n","sig":null,"attributes":[{"value":"/ Remove/finalize all prepared statements currently in the cache.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/cache.rs","byte_start":83011,"byte_end":83078,"line_start":50,"line_end":50,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":119},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/cache.rs","byte_start":83519,"byte_end":83534,"line_start":64,"line_end":64,"column_start":12,"column_end":27},"name":"CachedStatement","qualname":"::cache::CachedStatement","value":"CachedStatement {  }","parent":null,"children":[{"krate":0,"index":121},{"krate":0,"index":122}],"decl_id":null,"docs":" Cacheable statement.","sig":null,"attributes":[{"value":"/ Cacheable statement.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/cache.rs","byte_start":83343,"byte_end":83367,"line_start":60,"line_end":60,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/cache.rs","byte_start":83368,"byte_end":83371,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ Statement will return automatically to the cache by default.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/cache.rs","byte_start":83372,"byte_end":83436,"line_start":62,"line_end":62,"column_start":1,"column_end":65}},{"value":"/ If you want the statement to be discarded, call `discard()` on it.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/cache.rs","byte_start":83437,"byte_end":83507,"line_start":63,"line_end":63,"column_start":1,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":135},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/cache.rs","byte_start":84517,"byte_end":84524,"line_start":102,"line_end":102,"column_start":12,"column_end":19},"name":"discard","qualname":"<CachedStatement>::discard","value":"pub fn discard(Self)","parent":null,"children":[],"decl_id":null,"docs":" Discard the statement, preventing it from being returned to its\n `Connection`'s collection of cached statements.\n","sig":null,"attributes":[{"value":"/ Discard the statement, preventing it from being returned to its","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/cache.rs","byte_start":84382,"byte_end":84449,"line_start":100,"line_end":100,"column_start":5,"column_end":72}},{"value":"/ `Connection`'s collection of cached statements.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/cache.rs","byte_start":84454,"byte_end":84505,"line_start":101,"line_end":101,"column_start":5,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":971},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/column.rs","byte_start":91769,"byte_end":91775,"line_start":7,"line_end":7,"column_start":12,"column_end":18},"name":"Column","qualname":"::column::Column","value":"Column {  }","parent":null,"children":[{"krate":0,"index":973},{"krate":0,"index":974}],"decl_id":null,"docs":" Information about a column of a SQLite query.\n","sig":null,"attributes":[{"value":"/ Information about a column of a SQLite query.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/column.rs","byte_start":91691,"byte_end":91740,"line_start":5,"line_end":5,"column_start":1,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":153},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/column.rs","byte_start":91914,"byte_end":91918,"line_start":14,"line_end":14,"column_start":12,"column_end":16},"name":"name","qualname":"<Column>::name","value":"pub fn name(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Returns the name of the column.\n","sig":null,"attributes":[{"value":"/ Returns the name of the column.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/column.rs","byte_start":91867,"byte_end":91902,"line_start":13,"line_end":13,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":154},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/column.rs","byte_start":92036,"byte_end":92045,"line_start":19,"line_end":19,"column_start":12,"column_end":21},"name":"decl_type","qualname":"<Column>::decl_type","value":"pub fn decl_type(&Self) -> Option<&str>","parent":null,"children":[],"decl_id":null,"docs":" Returns the type of the column (`None` for expression).\n","sig":null,"attributes":[{"value":"/ Returns the type of the column (`None` for expression).","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/column.rs","byte_start":91965,"byte_end":92024,"line_start":18,"line_end":18,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":156},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/column.rs","byte_start":92213,"byte_end":92225,"line_start":26,"line_end":26,"column_start":12,"column_end":24},"name":"column_names","qualname":"<Statement>::column_names","value":"pub fn column_names(&Self) -> Vec<&str>","parent":null,"children":[],"decl_id":null,"docs":" Get all the column names in the result set of the prepared statement.\n","sig":null,"attributes":[{"value":"/ Get all the column names in the result set of the prepared statement.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/column.rs","byte_start":92128,"byte_end":92201,"line_start":25,"line_end":25,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":157},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/column.rs","byte_start":92578,"byte_end":92590,"line_start":38,"line_end":38,"column_start":12,"column_end":24},"name":"column_count","qualname":"<Statement>::column_count","value":"pub fn column_count(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the number of columns in the result set returned by the prepared\n statement.\n","sig":null,"attributes":[{"value":"/ Return the number of columns in the result set returned by the prepared","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/column.rs","byte_start":92472,"byte_end":92547,"line_start":36,"line_end":36,"column_start":5,"column_end":80}},{"value":"/ statement.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/column.rs","byte_start":92552,"byte_end":92566,"line_start":37,"line_end":37,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":159},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/column.rs","byte_start":93229,"byte_end":93240,"line_start":57,"line_end":57,"column_start":12,"column_end":23},"name":"column_name","qualname":"<Statement>::column_name","value":"pub fn column_name(&Self, usize) -> Result<&str>","parent":null,"children":[],"decl_id":null,"docs":" Returns the name assigned to a particular column in the result set\n returned by the prepared statement.","sig":null,"attributes":[{"value":"/ Returns the name assigned to a particular column in the result set","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/column.rs","byte_start":92896,"byte_end":92966,"line_start":48,"line_end":48,"column_start":5,"column_end":75}},{"value":"/ returned by the prepared statement.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/column.rs","byte_start":92971,"byte_end":93010,"line_start":49,"line_end":49,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/column.rs","byte_start":93015,"byte_end":93018,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ ## Failure","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/column.rs","byte_start":93023,"byte_end":93037,"line_start":51,"line_end":51,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/column.rs","byte_start":93042,"byte_end":93045,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ Returns an `Error::InvalidColumnIndex` if `idx` is outside the valid","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/column.rs","byte_start":93050,"byte_end":93122,"line_start":53,"line_end":53,"column_start":5,"column_end":77}},{"value":"/ column range for this row.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/column.rs","byte_start":93127,"byte_end":93157,"line_start":54,"line_end":54,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/column.rs","byte_start":93162,"byte_end":93165,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ Panics when column name is not valid UTF-8.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/column.rs","byte_start":93170,"byte_end":93217,"line_start":56,"line_end":56,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":161},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/column.rs","byte_start":93900,"byte_end":93912,"line_start":75,"line_end":75,"column_start":12,"column_end":24},"name":"column_index","qualname":"<Statement>::column_index","value":"pub fn column_index(&Self, &str) -> Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Returns the column index in the result set for a given column name.","sig":null,"attributes":[{"value":"/ Returns the column index in the result set for a given column name.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/column.rs","byte_start":93527,"byte_end":93598,"line_start":66,"line_end":66,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/column.rs","byte_start":93603,"byte_end":93606,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ If there is no AS clause then the name of the column is unspecified and","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/column.rs","byte_start":93611,"byte_end":93686,"line_start":68,"line_end":68,"column_start":5,"column_end":80}},{"value":"/ may change from one release of SQLite to the next.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/column.rs","byte_start":93691,"byte_end":93745,"line_start":69,"line_end":69,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/column.rs","byte_start":93750,"byte_end":93753,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/column.rs","byte_start":93758,"byte_end":93771,"line_start":71,"line_end":71,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/column.rs","byte_start":93776,"byte_end":93779,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ Will return an `Error::InvalidColumnName` when there is no column with","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/column.rs","byte_start":93784,"byte_end":93858,"line_start":73,"line_end":73,"column_start":5,"column_end":79}},{"value":"/ the specified `name`.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/column.rs","byte_start":93863,"byte_end":93888,"line_start":74,"line_end":74,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":164},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/column.rs","byte_start":95072,"byte_end":95084,"line_start":107,"line_end":107,"column_start":12,"column_end":24},"name":"column_names","qualname":"<Rows>::column_names","value":"pub fn column_names(&Self) -> Option<Vec<&str>>","parent":null,"children":[],"decl_id":null,"docs":" Get all the column names.\n","sig":null,"attributes":[{"value":"/ Get all the column names.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/column.rs","byte_start":95031,"byte_end":95060,"line_start":106,"line_end":106,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":165},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/column.rs","byte_start":95218,"byte_end":95230,"line_start":112,"line_end":112,"column_start":12,"column_end":24},"name":"column_count","qualname":"<Rows>::column_count","value":"pub fn column_count(&Self) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Return the number of columns.\n","sig":null,"attributes":[{"value":"/ Return the number of columns.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/column.rs","byte_start":95173,"byte_end":95206,"line_start":111,"line_end":111,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":166},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/column.rs","byte_start":95361,"byte_end":95372,"line_start":117,"line_end":117,"column_start":12,"column_end":23},"name":"column_name","qualname":"<Rows>::column_name","value":"pub fn column_name(&Self, usize) -> Option<Result<&str>>","parent":null,"children":[],"decl_id":null,"docs":" Return the name of the column.\n","sig":null,"attributes":[{"value":"/ Return the name of the column.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/column.rs","byte_start":95315,"byte_end":95349,"line_start":116,"line_end":116,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":168},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/column.rs","byte_start":95528,"byte_end":95540,"line_start":122,"line_end":122,"column_start":12,"column_end":24},"name":"column_index","qualname":"<Rows>::column_index","value":"pub fn column_index(&Self, &str) -> Option<Result<usize>>","parent":null,"children":[],"decl_id":null,"docs":" Return the index of the column.\n","sig":null,"attributes":[{"value":"/ Return the index of the column.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/column.rs","byte_start":95481,"byte_end":95516,"line_start":121,"line_end":121,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":172},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/column.rs","byte_start":95931,"byte_end":95943,"line_start":135,"line_end":135,"column_start":12,"column_end":24},"name":"column_names","qualname":"<Row>::column_names","value":"pub fn column_names(&Self) -> Vec<&str>","parent":null,"children":[],"decl_id":null,"docs":" Get all the column names of the Row.\n","sig":null,"attributes":[{"value":"/ Get all the column names of the Row.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/column.rs","byte_start":95879,"byte_end":95919,"line_start":134,"line_end":134,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":173},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/column.rs","byte_start":96074,"byte_end":96086,"line_start":140,"line_end":140,"column_start":12,"column_end":24},"name":"column_count","qualname":"<Row>::column_count","value":"pub fn column_count(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the number of columns in the current row.\n","sig":null,"attributes":[{"value":"/ Return the number of columns in the current row.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/column.rs","byte_start":96010,"byte_end":96062,"line_start":139,"line_end":139,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":174},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/column.rs","byte_start":96195,"byte_end":96206,"line_start":145,"line_end":145,"column_start":12,"column_end":23},"name":"column_name","qualname":"<Row>::column_name","value":"pub fn column_name(&Self, usize) -> Result<&str>","parent":null,"children":[],"decl_id":null,"docs":" Return the name of the column.\n","sig":null,"attributes":[{"value":"/ Return the name of the column.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/column.rs","byte_start":96149,"byte_end":96183,"line_start":144,"line_end":144,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":175},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/column.rs","byte_start":96337,"byte_end":96349,"line_start":150,"line_end":150,"column_start":12,"column_end":24},"name":"column_index","qualname":"<Row>::column_index","value":"pub fn column_index(&Self, &str) -> Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Return the index of the column.\n","sig":null,"attributes":[{"value":"/ Return the index of the column.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/column.rs","byte_start":96290,"byte_end":96325,"line_start":149,"line_end":149,"column_start":5,"column_end":40}}]},{"kind":"Mod","id":{"krate":0,"index":176},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/config.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"config","qualname":"::config","value":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/config.rs","parent":null,"children":[{"krate":0,"index":177},{"krate":0,"index":178},{"krate":0,"index":179},{"krate":0,"index":180},{"krate":0,"index":181},{"krate":0,"index":182},{"krate":0,"index":204}],"decl_id":null,"docs":" Configure database connections\n","sig":null,"attributes":[{"value":"/ Configure database connections","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/config.rs","byte_start":98602,"byte_end":98636,"line_start":1,"line_end":1,"column_start":1,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":183},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/config.rs","byte_start":99171,"byte_end":99198,"line_start":17,"line_end":17,"column_start":5,"column_end":32},"name":"SQLITE_DBCONFIG_ENABLE_FKEY","qualname":"::config::DbConfig::SQLITE_DBCONFIG_ENABLE_FKEY","value":"DbConfig::SQLITE_DBCONFIG_ENABLE_FKEY","parent":{"krate":0,"index":182},"children":[],"decl_id":null,"docs":" Enable or disable the enforcement of foreign key constraints.\n","sig":null,"attributes":[{"value":"/ Enable or disable the enforcement of foreign key constraints.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/config.rs","byte_start":99101,"byte_end":99166,"line_start":16,"line_end":16,"column_start":5,"column_end":70}}]},{"kind":"TupleVariant","id":{"krate":0,"index":186},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/config.rs","byte_start":99247,"byte_end":99277,"line_start":19,"line_end":19,"column_start":5,"column_end":35},"name":"SQLITE_DBCONFIG_ENABLE_TRIGGER","qualname":"::config::DbConfig::SQLITE_DBCONFIG_ENABLE_TRIGGER","value":"DbConfig::SQLITE_DBCONFIG_ENABLE_TRIGGER","parent":{"krate":0,"index":182},"children":[],"decl_id":null,"docs":" Enable or disable triggers.\n","sig":null,"attributes":[{"value":"/ Enable or disable triggers.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/config.rs","byte_start":99211,"byte_end":99242,"line_start":18,"line_end":18,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":189},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/config.rs","byte_start":99415,"byte_end":99452,"line_start":22,"line_end":22,"column_start":5,"column_end":42},"name":"SQLITE_DBCONFIG_ENABLE_FTS3_TOKENIZER","qualname":"::config::DbConfig::SQLITE_DBCONFIG_ENABLE_FTS3_TOKENIZER","value":"DbConfig::SQLITE_DBCONFIG_ENABLE_FTS3_TOKENIZER","parent":{"krate":0,"index":182},"children":[],"decl_id":null,"docs":" Enable or disable the fts3_tokenizer() function which is part of the\n FTS3 full-text search engine extension.\n","sig":null,"attributes":[{"value":"/ Enable or disable the fts3_tokenizer() function which is part of the","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/config.rs","byte_start":99290,"byte_end":99362,"line_start":20,"line_end":20,"column_start":5,"column_end":77}},{"value":"/ FTS3 full-text search engine extension.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/config.rs","byte_start":99367,"byte_end":99410,"line_start":21,"line_end":21,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":192},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/config.rs","byte_start":99630,"byte_end":99662,"line_start":26,"line_end":26,"column_start":5,"column_end":37},"name":"SQLITE_DBCONFIG_NO_CKPT_ON_CLOSE","qualname":"::config::DbConfig::SQLITE_DBCONFIG_NO_CKPT_ON_CLOSE","value":"DbConfig::SQLITE_DBCONFIG_NO_CKPT_ON_CLOSE","parent":{"krate":0,"index":182},"children":[],"decl_id":null,"docs":" In WAL mode, enable or disable the checkpoint operation before closing\n the connection.\n","sig":null,"attributes":[{"value":"/ In WAL mode, enable or disable the checkpoint operation before closing","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/config.rs","byte_start":99527,"byte_end":99601,"line_start":24,"line_end":24,"column_start":5,"column_end":79}},{"value":"/ the connection.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/config.rs","byte_start":99606,"byte_end":99625,"line_start":25,"line_end":25,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":195},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/config.rs","byte_start":99764,"byte_end":99791,"line_start":28,"line_end":28,"column_start":5,"column_end":32},"name":"SQLITE_DBCONFIG_ENABLE_QPSG","qualname":"::config::DbConfig::SQLITE_DBCONFIG_ENABLE_QPSG","value":"DbConfig::SQLITE_DBCONFIG_ENABLE_QPSG","parent":{"krate":0,"index":182},"children":[],"decl_id":null,"docs":" Activates or deactivates the query planner stability guarantee (QPSG).\n","sig":null,"attributes":[{"value":"/ Activates or deactivates the query planner stability guarantee (QPSG).","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/config.rs","byte_start":99685,"byte_end":99759,"line_start":27,"line_end":27,"column_start":5,"column_end":79}}]},{"kind":"TupleVariant","id":{"krate":0,"index":198},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/config.rs","byte_start":99955,"byte_end":99982,"line_start":31,"line_end":31,"column_start":5,"column_end":32},"name":"SQLITE_DBCONFIG_TRIGGER_EQP","qualname":"::config::DbConfig::SQLITE_DBCONFIG_TRIGGER_EQP","value":"DbConfig::SQLITE_DBCONFIG_TRIGGER_EQP","parent":{"krate":0,"index":182},"children":[],"decl_id":null,"docs":" Includes or excludes output for any operations performed by trigger\n programs from the output of EXPLAIN QUERY PLAN commands.\n","sig":null,"attributes":[{"value":"/ Includes or excludes output for any operations performed by trigger","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/config.rs","byte_start":99814,"byte_end":99885,"line_start":29,"line_end":29,"column_start":5,"column_end":76}},{"value":"/ programs from the output of EXPLAIN QUERY PLAN commands.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/config.rs","byte_start":99890,"byte_end":99950,"line_start":30,"line_end":30,"column_start":5,"column_end":65}}]},{"kind":"TupleVariant","id":{"krate":0,"index":201},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/config.rs","byte_start":100131,"byte_end":100156,"line_start":34,"line_end":34,"column_start":5,"column_end":30},"name":"SQLITE_DBCONFIG_DEFENSIVE","qualname":"::config::DbConfig::SQLITE_DBCONFIG_DEFENSIVE","value":"DbConfig::SQLITE_DBCONFIG_DEFENSIVE","parent":{"krate":0,"index":182},"children":[],"decl_id":null,"docs":" Activates or deactivates the \"defensive\" flag for a database connection.\n","sig":null,"attributes":[{"value":"/ Activates or deactivates the \"defensive\" flag for a database connection.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/config.rs","byte_start":100050,"byte_end":100126,"line_start":33,"line_end":33,"column_start":5,"column_end":81}}]},{"kind":"Enum","id":{"krate":0,"index":182},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/config.rs","byte_start":98966,"byte_end":98974,"line_start":13,"line_end":13,"column_start":10,"column_end":18},"name":"DbConfig","qualname":"::config::DbConfig","value":"pub enum DbConfig {\n\n    /// Enable or disable the enforcement of foreign key constraints.\n    SQLITE_DBCONFIG_ENABLE_FKEY = ,\n\n    /// Enable or disable triggers.\n    SQLITE_DBCONFIG_ENABLE_TRIGGER = ,\n\n    /// Enable or disable the fts3_tokenizer() function which is part of the\n    /// FTS3 full-text search engine extension.\n    SQLITE_DBCONFIG_ENABLE_FTS3_TOKENIZER = ,\n\n    /// In WAL mode, enable or disable the checkpoint operation before closing\n    /// the connection.\n    SQLITE_DBCONFIG_NO_CKPT_ON_CLOSE = ,\n\n    /// Activates or deactivates the query planner stability guarantee (QPSG).\n    SQLITE_DBCONFIG_ENABLE_QPSG = ,\n\n    /// Includes or excludes output for any operations performed by trigger\n    /// programs from the output of EXPLAIN QUERY PLAN commands.\n    SQLITE_DBCONFIG_TRIGGER_EQP = ,\n\n    /// Activates or deactivates the \"defensive\" flag for a database connection.\n    SQLITE_DBCONFIG_DEFENSIVE = ,\n}","parent":null,"children":[{"krate":0,"index":183},{"krate":0,"index":186},{"krate":0,"index":189},{"krate":0,"index":192},{"krate":0,"index":195},{"krate":0,"index":198},{"krate":0,"index":201}],"decl_id":null,"docs":" Database Connection Configuration Options\n See [Database Connection Configuration Options](https://sqlite.org/c3ref/c_dbconfig_enable_fkey.html) for details.\n","sig":null,"attributes":[{"value":"/ Database Connection Configuration Options","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/config.rs","byte_start":98714,"byte_end":98759,"line_start":8,"line_end":8,"column_start":1,"column_end":46}},{"value":"/ See [Database Connection Configuration Options](https://sqlite.org/c3ref/c_dbconfig_enable_fkey.html) for details.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/config.rs","byte_start":98760,"byte_end":98878,"line_start":9,"line_end":9,"column_start":1,"column_end":119}},{"value":"repr(i32)","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/config.rs","byte_start":98879,"byte_end":98891,"line_start":10,"line_end":10,"column_start":1,"column_end":13}},{"value":"allow(non_snake_case, non_camel_case_types)","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/config.rs","byte_start":98892,"byte_end":98938,"line_start":11,"line_end":11,"column_start":1,"column_end":47}},{"value":"non_exhaustive","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/config.rs","byte_start":98939,"byte_end":98956,"line_start":12,"line_end":12,"column_start":1,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":205},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/config.rs","byte_start":102305,"byte_end":102314,"line_start":77,"line_end":77,"column_start":12,"column_end":21},"name":"db_config","qualname":"<Connection>::db_config","value":"pub fn db_config(&Self, DbConfig) -> Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Returns the current value of a `config`.","sig":null,"attributes":[{"value":"/ Returns the current value of a `config`.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/config.rs","byte_start":101448,"byte_end":101492,"line_start":63,"line_end":63,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/config.rs","byte_start":101497,"byte_end":101500,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ - SQLITE_DBCONFIG_ENABLE_FKEY: return `false` or `true` to indicate","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/config.rs","byte_start":101505,"byte_end":101576,"line_start":65,"line_end":65,"column_start":5,"column_end":76}},{"value":"/   whether FK enforcement is off or on","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/config.rs","byte_start":101581,"byte_end":101622,"line_start":66,"line_end":66,"column_start":5,"column_end":46}},{"value":"/ - SQLITE_DBCONFIG_ENABLE_TRIGGER: return `false` or `true` to indicate","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/config.rs","byte_start":101627,"byte_end":101701,"line_start":67,"line_end":67,"column_start":5,"column_end":79}},{"value":"/   whether triggers are disabled or enabled","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/config.rs","byte_start":101706,"byte_end":101752,"line_start":68,"line_end":68,"column_start":5,"column_end":51}},{"value":"/ - SQLITE_DBCONFIG_ENABLE_FTS3_TOKENIZER: return `false` or `true` to","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/config.rs","byte_start":101757,"byte_end":101829,"line_start":69,"line_end":69,"column_start":5,"column_end":77}},{"value":"/   indicate whether fts3_tokenizer are disabled or enabled","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/config.rs","byte_start":101834,"byte_end":101895,"line_start":70,"line_end":70,"column_start":5,"column_end":66}},{"value":"/ - SQLITE_DBCONFIG_NO_CKPT_ON_CLOSE: return `false` to indicate","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/config.rs","byte_start":101900,"byte_end":101966,"line_start":71,"line_end":71,"column_start":5,"column_end":71}},{"value":"/   checkpoints-on-close are not disabled or `true` if they are","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/config.rs","byte_start":101971,"byte_end":102036,"line_start":72,"line_end":72,"column_start":5,"column_end":70}},{"value":"/ - SQLITE_DBCONFIG_ENABLE_QPSG: return `false` or `true` to indicate","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/config.rs","byte_start":102041,"byte_end":102112,"line_start":73,"line_end":73,"column_start":5,"column_end":76}},{"value":"/   whether the QPSG is disabled or enabled","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/config.rs","byte_start":102117,"byte_end":102162,"line_start":74,"line_end":74,"column_start":5,"column_end":50}},{"value":"/ - SQLITE_DBCONFIG_TRIGGER_EQP: return `false` to indicate","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/config.rs","byte_start":102167,"byte_end":102228,"line_start":75,"line_end":75,"column_start":5,"column_end":66}},{"value":"/   output-for-trigger are not disabled or `true` if it is","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/config.rs","byte_start":102233,"byte_end":102293,"line_start":76,"line_end":76,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":206},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/config.rs","byte_start":103421,"byte_end":103434,"line_start":105,"line_end":105,"column_start":12,"column_end":25},"name":"set_db_config","qualname":"<Connection>::set_db_config","value":"pub fn set_db_config(&Self, DbConfig, bool) -> Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Make configuration changes to a database connection","sig":null,"attributes":[{"value":"/ Make configuration changes to a database connection","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/config.rs","byte_start":102645,"byte_end":102700,"line_start":91,"line_end":91,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/config.rs","byte_start":102705,"byte_end":102708,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ - SQLITE_DBCONFIG_ENABLE_FKEY: `false` to disable FK enforcement, `true`","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/config.rs","byte_start":102713,"byte_end":102789,"line_start":93,"line_end":93,"column_start":5,"column_end":81}},{"value":"/   to enable FK enforcement","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/config.rs","byte_start":102794,"byte_end":102824,"line_start":94,"line_end":94,"column_start":5,"column_end":35}},{"value":"/ - SQLITE_DBCONFIG_ENABLE_TRIGGER: `false` to disable triggers, `true` to","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/config.rs","byte_start":102829,"byte_end":102905,"line_start":95,"line_end":95,"column_start":5,"column_end":81}},{"value":"/   enable triggers","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/config.rs","byte_start":102910,"byte_end":102931,"line_start":96,"line_end":96,"column_start":5,"column_end":26}},{"value":"/ - SQLITE_DBCONFIG_ENABLE_FTS3_TOKENIZER: `false` to disable","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/config.rs","byte_start":102936,"byte_end":102999,"line_start":97,"line_end":97,"column_start":5,"column_end":68}},{"value":"/   fts3_tokenizer(), `true` to enable fts3_tokenizer()","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/config.rs","byte_start":103004,"byte_end":103061,"line_start":98,"line_end":98,"column_start":5,"column_end":62}},{"value":"/ - SQLITE_DBCONFIG_NO_CKPT_ON_CLOSE: `false` (the default) to enable","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/config.rs","byte_start":103066,"byte_end":103137,"line_start":99,"line_end":99,"column_start":5,"column_end":76}},{"value":"/   checkpoints-on-close, `true` to disable them","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/config.rs","byte_start":103142,"byte_end":103192,"line_start":100,"line_end":100,"column_start":5,"column_end":55}},{"value":"/ - SQLITE_DBCONFIG_ENABLE_QPSG: `false` to disable the QPSG, `true` to","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/config.rs","byte_start":103197,"byte_end":103270,"line_start":101,"line_end":101,"column_start":5,"column_end":78}},{"value":"/   enable QPSG","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/config.rs","byte_start":103275,"byte_end":103292,"line_start":102,"line_end":102,"column_start":5,"column_end":22}},{"value":"/ - SQLITE_DBCONFIG_TRIGGER_EQP: `false` to disable output for trigger","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/config.rs","byte_start":103297,"byte_end":103369,"line_start":103,"line_end":103,"column_start":5,"column_end":77}},{"value":"/   programs, `true` to enable it","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/config.rs","byte_start":103374,"byte_end":103409,"line_start":104,"line_end":104,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":303},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/pragma.rs","byte_start":124718,"byte_end":124736,"line_start":168,"line_end":168,"column_start":12,"column_end":30},"name":"pragma_query_value","qualname":"<Connection>::pragma_query_value","value":"pub fn pragma_query_value<T, F>(&Self, Option<DatabaseName>, &str, F)\n-> Result<T> where F: FnOnce(&Row) -> Result<T>","parent":null,"children":[],"decl_id":null,"docs":" Query the current value of `pragma_name`.","sig":null,"attributes":[{"value":"/ Query the current value of `pragma_name`.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/pragma.rs","byte_start":124382,"byte_end":124427,"line_start":161,"line_end":161,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/pragma.rs","byte_start":124432,"byte_end":124435,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ Some pragmas will return multiple rows/values which cannot be retrieved","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/pragma.rs","byte_start":124440,"byte_end":124515,"line_start":163,"line_end":163,"column_start":5,"column_end":80}},{"value":"/ with this method.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/pragma.rs","byte_start":124520,"byte_end":124541,"line_start":164,"line_end":164,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/pragma.rs","byte_start":124546,"byte_end":124549,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ Prefer [PRAGMA function](https://sqlite.org/pragma.html#pragfunc) introduced in SQLite 3.20:","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/pragma.rs","byte_start":124554,"byte_end":124650,"line_start":166,"line_end":166,"column_start":5,"column_end":101}},{"value":"/ `SELECT user_version FROM pragma_user_version;`","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/pragma.rs","byte_start":124655,"byte_end":124706,"line_start":167,"line_end":167,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":306},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/pragma.rs","byte_start":125289,"byte_end":125301,"line_start":186,"line_end":186,"column_start":12,"column_end":24},"name":"pragma_query","qualname":"<Connection>::pragma_query","value":"pub fn pragma_query<F>(&Self, Option<DatabaseName>, &str, F) -> Result<()>\nwhere F: FnMut(&Row) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Query the current rows/values of `pragma_name`.","sig":null,"attributes":[{"value":"/ Query the current rows/values of `pragma_name`.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/pragma.rs","byte_start":125070,"byte_end":125121,"line_start":182,"line_end":182,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/pragma.rs","byte_start":125126,"byte_end":125129,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ Prefer [PRAGMA function](https://sqlite.org/pragma.html#pragfunc) introduced in SQLite 3.20:","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/pragma.rs","byte_start":125134,"byte_end":125230,"line_start":184,"line_end":184,"column_start":5,"column_end":101}},{"value":"/ `SELECT * FROM pragma_collation_list;`","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/pragma.rs","byte_start":125235,"byte_end":125277,"line_start":185,"line_end":185,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":308},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/pragma.rs","byte_start":126264,"byte_end":126270,"line_start":215,"line_end":215,"column_start":12,"column_end":18},"name":"pragma","qualname":"<Connection>::pragma","value":"pub fn pragma<F>(&Self, Option<DatabaseName>, &str, &ToSql, F) -> Result<()>\nwhere F: FnMut(&Row) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Query the current value(s) of `pragma_name` associated to\n `pragma_value`.","sig":null,"attributes":[{"value":"/ Query the current value(s) of `pragma_name` associated to","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/pragma.rs","byte_start":125818,"byte_end":125879,"line_start":206,"line_end":206,"column_start":5,"column_end":66}},{"value":"/ `pragma_value`.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/pragma.rs","byte_start":125884,"byte_end":125903,"line_start":207,"line_end":207,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/pragma.rs","byte_start":125908,"byte_end":125911,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ This method can be used with query-only pragmas which need an argument","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/pragma.rs","byte_start":125916,"byte_end":125990,"line_start":209,"line_end":209,"column_start":5,"column_end":79}},{"value":"/ (e.g. `table_info('one_tbl')`) or pragmas which returns value(s)","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/pragma.rs","byte_start":125995,"byte_end":126063,"line_start":210,"line_end":210,"column_start":5,"column_end":73}},{"value":"/ (e.g. `integrity_check`).","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/pragma.rs","byte_start":126068,"byte_end":126097,"line_start":211,"line_end":211,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/pragma.rs","byte_start":126102,"byte_end":126105,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ Prefer [PRAGMA function](https://sqlite.org/pragma.html#pragfunc) introduced in SQLite 3.20:","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/pragma.rs","byte_start":126110,"byte_end":126206,"line_start":213,"line_end":213,"column_start":5,"column_end":101}},{"value":"/ `SELECT * FROM pragma_table_info(?);`","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/pragma.rs","byte_start":126211,"byte_end":126252,"line_start":214,"line_end":214,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":310},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/pragma.rs","byte_start":127246,"byte_end":127259,"line_start":246,"line_end":246,"column_start":12,"column_end":25},"name":"pragma_update","qualname":"<Connection>::pragma_update","value":"pub fn pragma_update(&Self, Option<DatabaseName>, &str, &ToSql) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Set a new value to `pragma_name`.","sig":null,"attributes":[{"value":"/ Set a new value to `pragma_name`.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/pragma.rs","byte_start":127086,"byte_end":127123,"line_start":242,"line_end":242,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/pragma.rs","byte_start":127128,"byte_end":127131,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ Some pragmas will return the updated value which cannot be retrieved","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/pragma.rs","byte_start":127136,"byte_end":127208,"line_start":244,"line_end":244,"column_start":5,"column_end":77}},{"value":"/ with this method.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/pragma.rs","byte_start":127213,"byte_end":127234,"line_start":245,"line_end":245,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":311},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/pragma.rs","byte_start":127936,"byte_end":127959,"line_start":265,"line_end":265,"column_start":12,"column_end":35},"name":"pragma_update_and_check","qualname":"<Connection>::pragma_update_and_check","value":"pub fn pragma_update_and_check<F,\n                               T>(&Self, Option<DatabaseName>, &str, &ToSql,\n                                  F) -> Result<T> where F: FnOnce(&Row) ->\nResult<T>","parent":null,"children":[],"decl_id":null,"docs":" Set a new value to `pragma_name` and return the updated value.","sig":null,"attributes":[{"value":"/ Set a new value to `pragma_name` and return the updated value.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/pragma.rs","byte_start":127785,"byte_end":127851,"line_start":262,"line_end":262,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/pragma.rs","byte_start":127856,"byte_end":127859,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ Only few pragmas automatically return the updated value.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/pragma.rs","byte_start":127864,"byte_end":127924,"line_start":264,"line_end":264,"column_start":5,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":360},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/row.rs","byte_start":138965,"byte_end":138969,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Rows","qualname":"::row::Rows","value":"Rows {  }","parent":null,"children":[{"krate":0,"index":362},{"krate":0,"index":363}],"decl_id":null,"docs":" An handle for the resulting rows of a query.\n","sig":null,"attributes":[{"value":"/ An handle for the resulting rows of a query.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/row.rs","byte_start":138840,"byte_end":138888,"line_start":8,"line_end":8,"column_start":1,"column_end":49}},{"value":"must_use = \"Rows is lazy and will do nothing unless consumed\"","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/row.rs","byte_start":138889,"byte_end":138953,"line_start":9,"line_end":9,"column_start":1,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":367},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/row.rs","byte_start":139896,"byte_end":139900,"line_start":34,"line_end":34,"column_start":12,"column_end":16},"name":"next","qualname":"<Rows>::next","value":"pub fn next(&mut Self) -> Result<Option<&Row>>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to get the next row from the query. Returns `Ok(Some(Row))` if\n there is another row, `Err(...)` if there was an error\n getting the next row, and `Ok(None)` if all rows have been retrieved.","sig":null,"attributes":[{"value":"/ Attempt to get the next row from the query. Returns `Ok(Some(Row))` if","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/row.rs","byte_start":139211,"byte_end":139285,"line_start":22,"line_end":22,"column_start":5,"column_end":79}},{"value":"/ there is another row, `Err(...)` if there was an error","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/row.rs","byte_start":139290,"byte_end":139348,"line_start":23,"line_end":23,"column_start":5,"column_end":63}},{"value":"/ getting the next row, and `Ok(None)` if all rows have been retrieved.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/row.rs","byte_start":139353,"byte_end":139426,"line_start":24,"line_end":24,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/row.rs","byte_start":139431,"byte_end":139434,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ ## Note","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/row.rs","byte_start":139439,"byte_end":139450,"line_start":26,"line_end":26,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/row.rs","byte_start":139455,"byte_end":139458,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ This interface is not compatible with Rust's `Iterator` trait, because","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/row.rs","byte_start":139463,"byte_end":139537,"line_start":28,"line_end":28,"column_start":5,"column_end":79}},{"value":"/ the lifetime of the returned row is tied to the lifetime of `self`.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/row.rs","byte_start":139542,"byte_end":139613,"line_start":29,"line_end":29,"column_start":5,"column_end":76}},{"value":"/ This is a fallible \"streaming iterator\". For a more natural interface,","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/row.rs","byte_start":139618,"byte_end":139692,"line_start":30,"line_end":30,"column_start":5,"column_end":79}},{"value":"/ consider using `query_map` or `query_and_then` instead, which","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/row.rs","byte_start":139697,"byte_end":139762,"line_start":31,"line_end":31,"column_start":5,"column_end":70}},{"value":"/ return types that implement `Iterator`.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/row.rs","byte_start":139767,"byte_end":139810,"line_start":32,"line_end":32,"column_start":5,"column_end":48}},{"value":"allow(clippy :: should_implement_trait)","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/row.rs","byte_start":139815,"byte_end":139855,"line_start":33,"line_end":33,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":368},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/row.rs","byte_start":140469,"byte_end":140472,"line_start":50,"line_end":50,"column_start":12,"column_end":15},"name":"map","qualname":"<Rows>::map","value":"pub fn map<F, B>(Self, F) -> Map where F: FnMut(&Row) -> Result<B>","parent":null,"children":[],"decl_id":null,"docs":" Map over this `Rows`, converting it to a [`Map`], which\n implements `FallibleIterator`.\n ```rust,no_run\n use fallible_iterator::FallibleIterator;\n # use rusqlite::{Result, Statement, NO_PARAMS};\n fn query(stmt: &mut Statement) -> Result<Vec<i64>> {\n     let rows = stmt.query(NO_PARAMS)?;\n     rows.map(|r| r.get(0)).collect()\n }\n ```\n","sig":null,"attributes":[{"value":"/ Map over this `Rows`, converting it to a [`Map`], which","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/row.rs","byte_start":140007,"byte_end":140066,"line_start":39,"line_end":39,"column_start":5,"column_end":64}},{"value":"/ implements `FallibleIterator`.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/row.rs","byte_start":140071,"byte_end":140105,"line_start":40,"line_end":40,"column_start":5,"column_end":39}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/row.rs","byte_start":140110,"byte_end":140128,"line_start":41,"line_end":41,"column_start":5,"column_end":23}},{"value":"/ use fallible_iterator::FallibleIterator;","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/row.rs","byte_start":140133,"byte_end":140177,"line_start":42,"line_end":42,"column_start":5,"column_end":49}},{"value":"/ # use rusqlite::{Result, Statement, NO_PARAMS};","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/row.rs","byte_start":140182,"byte_end":140233,"line_start":43,"line_end":43,"column_start":5,"column_end":56}},{"value":"/ fn query(stmt: &mut Statement) -> Result<Vec<i64>> {","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/row.rs","byte_start":140238,"byte_end":140294,"line_start":44,"line_end":44,"column_start":5,"column_end":61}},{"value":"/     let rows = stmt.query(NO_PARAMS)?;","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/row.rs","byte_start":140299,"byte_end":140341,"line_start":45,"line_end":45,"column_start":5,"column_end":47}},{"value":"/     rows.map(|r| r.get(0)).collect()","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/row.rs","byte_start":140346,"byte_end":140386,"line_start":46,"line_end":46,"column_start":5,"column_end":45}},{"value":"/ }","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/row.rs","byte_start":140391,"byte_end":140396,"line_start":47,"line_end":47,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/row.rs","byte_start":140401,"byte_end":140408,"line_start":48,"line_end":48,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":371},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/row.rs","byte_start":140715,"byte_end":140721,"line_start":59,"line_end":59,"column_start":12,"column_end":18},"name":"mapped","qualname":"<Rows>::mapped","value":"pub fn mapped<F, B>(Self, F) -> MappedRows where F: FnMut(&Row) -> Result<B>","parent":null,"children":[],"decl_id":null,"docs":" Map over this `Rows`, converting it to a [`MappedRows`], which\n implements `Iterator`.\n","sig":null,"attributes":[{"value":"/ Map over this `Rows`, converting it to a [`MappedRows`], which","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/row.rs","byte_start":140606,"byte_end":140672,"line_start":57,"line_end":57,"column_start":5,"column_end":71}},{"value":"/ implements `Iterator`.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/row.rs","byte_start":140677,"byte_end":140703,"line_start":58,"line_end":58,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":374},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/row.rs","byte_start":141058,"byte_end":141066,"line_start":69,"line_end":69,"column_start":12,"column_end":20},"name":"and_then","qualname":"<Rows>::and_then","value":"pub fn and_then<F, T, E>(Self, F) -> AndThenRows where F: FnMut(&Row) ->\nResult<T, E>","parent":null,"children":[],"decl_id":null,"docs":" Map over this `Rows` with a fallible function, converting it to a\n [`AndThenRows`], which implements `Iterator` (instead of\n `FallibleStreamingIterator`).\n","sig":null,"attributes":[{"value":"/ Map over this `Rows` with a fallible function, converting it to a","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/row.rs","byte_start":140874,"byte_end":140943,"line_start":66,"line_end":66,"column_start":5,"column_end":74}},{"value":"/ [`AndThenRows`], which implements `Iterator` (instead of","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/row.rs","byte_start":140948,"byte_end":141008,"line_start":67,"line_end":67,"column_start":5,"column_end":65}},{"value":"/ `FallibleStreamingIterator`).","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/row.rs","byte_start":141013,"byte_end":141046,"line_start":68,"line_end":68,"column_start":5,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":384},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/row.rs","byte_start":141851,"byte_end":141854,"line_start":101,"line_end":101,"column_start":12,"column_end":15},"name":"Map","qualname":"::row::Map","value":"Map {  }","parent":null,"children":[{"krate":0,"index":387},{"krate":0,"index":388}],"decl_id":null,"docs":" `F` is used to tranform the _streaming_ iterator into a _fallible_ iterator.\n","sig":null,"attributes":[{"value":"/ `F` is used to tranform the _streaming_ iterator into a _fallible_ iterator.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/row.rs","byte_start":141693,"byte_end":141773,"line_start":99,"line_end":99,"column_start":1,"column_end":81}},{"value":"must_use = \"iterators are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/row.rs","byte_start":141774,"byte_end":141839,"line_start":100,"line_end":100,"column_start":1,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":395},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/row.rs","byte_start":142432,"byte_end":142442,"line_start":125,"line_end":125,"column_start":12,"column_end":22},"name":"MappedRows","qualname":"::row::MappedRows","value":"MappedRows {  }","parent":null,"children":[{"krate":0,"index":398},{"krate":0,"index":399}],"decl_id":null,"docs":" An iterator over the mapped resulting rows of a query.","sig":null,"attributes":[{"value":"/ An iterator over the mapped resulting rows of a query.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/row.rs","byte_start":142211,"byte_end":142269,"line_start":121,"line_end":121,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/row.rs","byte_start":142270,"byte_end":142273,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"/ `F` is used to tranform the _streaming_ iterator into a _standard_ iterator.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/row.rs","byte_start":142274,"byte_end":142354,"line_start":123,"line_end":123,"column_start":1,"column_end":81}},{"value":"must_use = \"iterators are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/row.rs","byte_start":142355,"byte_end":142420,"line_start":124,"line_end":124,"column_start":1,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":412},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/row.rs","byte_start":143211,"byte_end":143222,"line_start":157,"line_end":157,"column_start":12,"column_end":23},"name":"AndThenRows","qualname":"::row::AndThenRows","value":"AndThenRows {  }","parent":null,"children":[{"krate":0,"index":415},{"krate":0,"index":416}],"decl_id":null,"docs":" An iterator over the mapped resulting rows of a query, with an Error type\n unifying with Error.\n","sig":null,"attributes":[{"value":"/ An iterator over the mapped resulting rows of a query, with an Error type","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/row.rs","byte_start":143031,"byte_end":143108,"line_start":154,"line_end":154,"column_start":1,"column_end":78}},{"value":"/ unifying with Error.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/row.rs","byte_start":143109,"byte_end":143133,"line_start":155,"line_end":155,"column_start":1,"column_end":25}},{"value":"must_use = \"iterators are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/row.rs","byte_start":143134,"byte_end":143199,"line_start":156,"line_end":156,"column_start":1,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":437},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/row.rs","byte_start":145434,"byte_end":145437,"line_start":240,"line_end":240,"column_start":12,"column_end":15},"name":"Row","qualname":"::row::Row","value":"Row {  }","parent":null,"children":[{"krate":0,"index":439}],"decl_id":null,"docs":" A single result row of a query.\n","sig":null,"attributes":[{"value":"/ A single result row of a query.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/row.rs","byte_start":145387,"byte_end":145422,"line_start":239,"line_end":239,"column_start":1,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":442},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/row.rs","byte_start":145994,"byte_end":146004,"line_start":257,"line_end":257,"column_start":12,"column_end":22},"name":"get_unwrap","qualname":"<Row>::get_unwrap","value":"pub fn get_unwrap<I: RowIndex, T: FromSql>(&Self, I) -> T","parent":null,"children":[],"decl_id":null,"docs":" Get the value of a particular column of the result row.","sig":null,"attributes":[{"value":"/ Get the value of a particular column of the result row.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/row.rs","byte_start":145525,"byte_end":145584,"line_start":245,"line_end":245,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/row.rs","byte_start":145589,"byte_end":145592,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ ## Failure","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/row.rs","byte_start":145597,"byte_end":145611,"line_start":247,"line_end":247,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/row.rs","byte_start":145616,"byte_end":145619,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ Panics if calling `row.get(idx)` would return an error,","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/row.rs","byte_start":145624,"byte_end":145683,"line_start":249,"line_end":249,"column_start":5,"column_end":64}},{"value":"/ including:","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/row.rs","byte_start":145688,"byte_end":145702,"line_start":250,"line_end":250,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/row.rs","byte_start":145707,"byte_end":145710,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ * If the underlying SQLite column type is not a valid type as a source","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/row.rs","byte_start":145715,"byte_end":145789,"line_start":252,"line_end":252,"column_start":5,"column_end":79}},{"value":"/   for `T`","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/row.rs","byte_start":145794,"byte_end":145807,"line_start":253,"line_end":253,"column_start":5,"column_end":18}},{"value":"/ * If the underlying SQLite integral value is outside the range","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/row.rs","byte_start":145812,"byte_end":145878,"line_start":254,"line_end":254,"column_start":5,"column_end":71}},{"value":"/   representable by `T`","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/row.rs","byte_start":145883,"byte_end":145909,"line_start":255,"line_end":255,"column_start":5,"column_end":31}},{"value":"/ * If `idx` is outside the range of columns in the returned query","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/row.rs","byte_start":145914,"byte_end":145982,"line_start":256,"line_end":256,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":445},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/row.rs","byte_start":146800,"byte_end":146803,"line_start":277,"line_end":277,"column_start":12,"column_end":15},"name":"get","qualname":"<Row>::get","value":"pub fn get<I: RowIndex, T: FromSql>(&Self, I) -> Result<T>","parent":null,"children":[],"decl_id":null,"docs":" Get the value of a particular column of the result row.","sig":null,"attributes":[{"value":"/ Get the value of a particular column of the result row.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/row.rs","byte_start":146094,"byte_end":146153,"line_start":261,"line_end":261,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/row.rs","byte_start":146158,"byte_end":146161,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ ## Failure","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/row.rs","byte_start":146166,"byte_end":146180,"line_start":263,"line_end":263,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/row.rs","byte_start":146185,"byte_end":146188,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ Returns an `Error::InvalidColumnType` if the underlying SQLite column","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/row.rs","byte_start":146193,"byte_end":146266,"line_start":265,"line_end":265,"column_start":5,"column_end":78}},{"value":"/ type is not a valid type as a source for `T`.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/row.rs","byte_start":146271,"byte_end":146320,"line_start":266,"line_end":266,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/row.rs","byte_start":146325,"byte_end":146328,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ Returns an `Error::InvalidColumnIndex` if `idx` is outside the valid","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/row.rs","byte_start":146333,"byte_end":146405,"line_start":268,"line_end":268,"column_start":5,"column_end":77}},{"value":"/ column range for this row.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/row.rs","byte_start":146410,"byte_end":146440,"line_start":269,"line_end":269,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/row.rs","byte_start":146445,"byte_end":146448,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ Returns an `Error::InvalidColumnName` if `idx` is not a valid column","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/row.rs","byte_start":146453,"byte_end":146525,"line_start":271,"line_end":271,"column_start":5,"column_end":77}},{"value":"/ name for this row.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/row.rs","byte_start":146530,"byte_end":146552,"line_start":272,"line_end":272,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/row.rs","byte_start":146557,"byte_end":146560,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ If the result type is i128 (which requires the `i128_blob` feature to be","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/row.rs","byte_start":146565,"byte_end":146641,"line_start":274,"line_end":274,"column_start":5,"column_end":81}},{"value":"/ enabled), and the underlying SQLite column is a blob whose size is not","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/row.rs","byte_start":146646,"byte_end":146720,"line_start":275,"line_end":275,"column_start":5,"column_end":79}},{"value":"/ 16 bytes, `Error::InvalidColumnType` will also be returned.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/row.rs","byte_start":146725,"byte_end":146788,"line_start":276,"line_end":276,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":449},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/row.rs","byte_start":148621,"byte_end":148636,"line_start":320,"line_end":320,"column_start":12,"column_end":27},"name":"get_raw_checked","qualname":"<Row>::get_raw_checked","value":"pub fn get_raw_checked<I: RowIndex>(&Self, I) -> Result<ValueRef>","parent":null,"children":[],"decl_id":null,"docs":" Get the value of a particular column of the result row as a `ValueRef`,\n allowing data to be read out of a row without copying.","sig":null,"attributes":[{"value":"/ Get the value of a particular column of the result row as a `ValueRef`,","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/row.rs","byte_start":147936,"byte_end":148011,"line_start":305,"line_end":305,"column_start":5,"column_end":80}},{"value":"/ allowing data to be read out of a row without copying.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/row.rs","byte_start":148016,"byte_end":148074,"line_start":306,"line_end":306,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/row.rs","byte_start":148079,"byte_end":148082,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ This `ValueRef` is valid only as long as this Row, which is enforced by","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/row.rs","byte_start":148087,"byte_end":148162,"line_start":308,"line_end":308,"column_start":5,"column_end":80}},{"value":"/ it's lifetime. This means that while this method is completely safe,","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/row.rs","byte_start":148167,"byte_end":148239,"line_start":309,"line_end":309,"column_start":5,"column_end":77}},{"value":"/ it can be somewhat difficult to use, and most callers will be better","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/row.rs","byte_start":148244,"byte_end":148316,"line_start":310,"line_end":310,"column_start":5,"column_end":77}},{"value":"/ served by `get` or `get`.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/row.rs","byte_start":148321,"byte_end":148350,"line_start":311,"line_end":311,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/row.rs","byte_start":148355,"byte_end":148358,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/ ## Failure","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/row.rs","byte_start":148363,"byte_end":148377,"line_start":313,"line_end":313,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/row.rs","byte_start":148382,"byte_end":148385,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ Returns an `Error::InvalidColumnIndex` if `idx` is outside the valid","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/row.rs","byte_start":148390,"byte_end":148462,"line_start":315,"line_end":315,"column_start":5,"column_end":77}},{"value":"/ column range for this row.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/row.rs","byte_start":148467,"byte_end":148497,"line_start":316,"line_end":316,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/row.rs","byte_start":148502,"byte_end":148505,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ Returns an `Error::InvalidColumnName` if `idx` is not a valid column","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/row.rs","byte_start":148510,"byte_end":148582,"line_start":318,"line_end":318,"column_start":5,"column_end":77}},{"value":"/ name for this row.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/row.rs","byte_start":148587,"byte_end":148609,"line_start":319,"line_end":319,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":451},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/row.rs","byte_start":149696,"byte_end":149703,"line_start":344,"line_end":344,"column_start":12,"column_end":19},"name":"get_raw","qualname":"<Row>::get_raw","value":"pub fn get_raw<I: RowIndex>(&Self, I) -> ValueRef","parent":null,"children":[],"decl_id":null,"docs":" Get the value of a particular column of the result row as a `ValueRef`,\n allowing data to be read out of a row without copying.","sig":null,"attributes":[{"value":"/ Get the value of a particular column of the result row as a `ValueRef`,","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/row.rs","byte_start":149007,"byte_end":149082,"line_start":329,"line_end":329,"column_start":5,"column_end":80}},{"value":"/ allowing data to be read out of a row without copying.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/row.rs","byte_start":149087,"byte_end":149145,"line_start":330,"line_end":330,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/row.rs","byte_start":149150,"byte_end":149153,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ This `ValueRef` is valid only as long as this Row, which is enforced by","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/row.rs","byte_start":149158,"byte_end":149233,"line_start":332,"line_end":332,"column_start":5,"column_end":80}},{"value":"/ it's lifetime. This means that while this method is completely safe,","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/row.rs","byte_start":149238,"byte_end":149310,"line_start":333,"line_end":333,"column_start":5,"column_end":77}},{"value":"/ it can be difficult to use, and most callers will be better served by","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/row.rs","byte_start":149315,"byte_end":149388,"line_start":334,"line_end":334,"column_start":5,"column_end":78}},{"value":"/ `get` or `get`.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/row.rs","byte_start":149393,"byte_end":149412,"line_start":335,"line_end":335,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/row.rs","byte_start":149417,"byte_end":149420,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ ## Failure","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/row.rs","byte_start":149425,"byte_end":149439,"line_start":337,"line_end":337,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/row.rs","byte_start":149444,"byte_end":149447,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ Panics if calling `row.get_raw_checked(idx)` would return an error,","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/row.rs","byte_start":149452,"byte_end":149523,"line_start":339,"line_end":339,"column_start":5,"column_end":76}},{"value":"/ including:","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/row.rs","byte_start":149528,"byte_end":149542,"line_start":340,"line_end":340,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/row.rs","byte_start":149547,"byte_end":149550,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ * If `idx` is outside the range of columns in the returned query.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/row.rs","byte_start":149555,"byte_end":149624,"line_start":342,"line_end":342,"column_start":5,"column_end":74}},{"value":"/ * If `idx` is not a valid column name for this row.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/row.rs","byte_start":149629,"byte_end":149684,"line_start":343,"line_end":343,"column_start":5,"column_end":60}}]},{"kind":"Trait","id":{"krate":0,"index":453},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/row.rs","byte_start":149883,"byte_end":149891,"line_start":350,"line_end":350,"column_start":11,"column_end":19},"name":"RowIndex","qualname":"::row::RowIndex","value":"RowIndex","parent":null,"children":[{"krate":0,"index":454}],"decl_id":null,"docs":" A trait implemented by types that can index into columns of a row.\n","sig":null,"attributes":[{"value":"/ A trait implemented by types that can index into columns of a row.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/row.rs","byte_start":149802,"byte_end":149872,"line_start":349,"line_end":349,"column_start":1,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":454},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/row.rs","byte_start":149998,"byte_end":150001,"line_start":353,"line_end":353,"column_start":8,"column_end":11},"name":"idx","qualname":"::row::RowIndex::idx","value":"pub fn idx(&Self, &Statement) -> Result<usize>","parent":{"krate":0,"index":453},"children":[],"decl_id":null,"docs":" Returns the index of the appropriate column, or `None` if no such\n column exists.\n","sig":null,"attributes":[{"value":"/ Returns the index of the appropriate column, or `None` if no such","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/row.rs","byte_start":149898,"byte_end":149967,"line_start":351,"line_end":351,"column_start":5,"column_end":74}},{"value":"/ column exists.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/row.rs","byte_start":149972,"byte_end":149990,"line_start":352,"line_end":352,"column_start":5,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":490},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":156702,"byte_end":156711,"line_start":18,"line_end":18,"column_start":12,"column_end":21},"name":"Statement","qualname":"::statement::Statement","value":"Statement {  }","parent":null,"children":[{"krate":0,"index":492},{"krate":0,"index":493}],"decl_id":null,"docs":" A prepared statement.\n","sig":null,"attributes":[{"value":"/ A prepared statement.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":156665,"byte_end":156690,"line_start":17,"line_end":17,"column_start":1,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":495},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":157592,"byte_end":157599,"line_start":48,"line_end":48,"column_start":12,"column_end":19},"name":"execute","qualname":"<Statement>::execute","value":"pub fn execute<P>(&mut Self, P) -> Result<usize> where P: IntoIterator,\nP::Item: ToSql","parent":null,"children":[],"decl_id":null,"docs":" Execute the prepared statement.","sig":null,"attributes":[{"value":"/ Execute the prepared statement.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":156813,"byte_end":156848,"line_start":24,"line_end":24,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":156853,"byte_end":156856,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ On success, returns the number of rows that were changed or inserted or","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":156861,"byte_end":156936,"line_start":26,"line_end":26,"column_start":5,"column_end":80}},{"value":"/ deleted (via `sqlite3_changes`).","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":156941,"byte_end":156977,"line_start":27,"line_end":27,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":156982,"byte_end":156985,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ ## Example","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":156990,"byte_end":157004,"line_start":29,"line_end":29,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":157009,"byte_end":157012,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":157017,"byte_end":157035,"line_start":31,"line_end":31,"column_start":5,"column_end":23}},{"value":"/ # use rusqlite::{Connection, Result};","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":157040,"byte_end":157081,"line_start":32,"line_end":32,"column_start":5,"column_end":46}},{"value":"/ fn update_rows(conn: &Connection) -> Result<()> {","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":157086,"byte_end":157139,"line_start":33,"line_end":33,"column_start":5,"column_end":58}},{"value":"/     let mut stmt = conn.prepare(\"UPDATE foo SET bar = 'baz' WHERE qux = ?\")?;","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":157144,"byte_end":157225,"line_start":34,"line_end":34,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":157230,"byte_end":157233,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/     stmt.execute(&[1i32])?;","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":157238,"byte_end":157269,"line_start":36,"line_end":36,"column_start":5,"column_end":36}},{"value":"/     stmt.execute(&[2i32])?;","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":157274,"byte_end":157305,"line_start":37,"line_end":37,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":157310,"byte_end":157313,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":157318,"byte_end":157332,"line_start":39,"line_end":39,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":157337,"byte_end":157342,"line_start":40,"line_end":40,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":157347,"byte_end":157354,"line_start":41,"line_end":41,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":157359,"byte_end":157362,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":157367,"byte_end":157380,"line_start":43,"line_end":43,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":157385,"byte_end":157388,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if binding parameters fails, the executed statement","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":157393,"byte_end":157466,"line_start":45,"line_end":45,"column_start":5,"column_end":78}},{"value":"/ returns rows (in which case `query` should be used instead), or the","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":157471,"byte_end":157542,"line_start":46,"line_end":46,"column_start":5,"column_end":76}},{"value":"/ underlying SQLite call fails.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":157547,"byte_end":157580,"line_start":47,"line_end":47,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":497},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":159261,"byte_end":159274,"line_start":92,"line_end":92,"column_start":12,"column_end":25},"name":"execute_named","qualname":"<Statement>::execute_named","value":"pub fn execute_named(&mut Self, &[(&str, &ToSql)]) -> Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Execute the prepared statement with named parameter(s). If any\n parameters that were in the prepared statement are not included in\n `params`, they will continue to use the most-recently bound value\n from a previous call to `execute_named`, or `NULL` if they have\n never been bound.","sig":null,"attributes":[{"value":"/ Execute the prepared statement with named parameter(s). If any","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":157802,"byte_end":157868,"line_start":57,"line_end":57,"column_start":5,"column_end":71}},{"value":"/ parameters that were in the prepared statement are not included in","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":157873,"byte_end":157943,"line_start":58,"line_end":58,"column_start":5,"column_end":75}},{"value":"/ `params`, they will continue to use the most-recently bound value","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":157948,"byte_end":158017,"line_start":59,"line_end":59,"column_start":5,"column_end":74}},{"value":"/ from a previous call to `execute_named`, or `NULL` if they have","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":158022,"byte_end":158089,"line_start":60,"line_end":60,"column_start":5,"column_end":72}},{"value":"/ never been bound.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":158094,"byte_end":158115,"line_start":61,"line_end":61,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":158120,"byte_end":158123,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ On success, returns the number of rows that were changed or inserted or","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":158128,"byte_end":158203,"line_start":63,"line_end":63,"column_start":5,"column_end":80}},{"value":"/ deleted (via `sqlite3_changes`).","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":158208,"byte_end":158244,"line_start":64,"line_end":64,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":158249,"byte_end":158252,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ ## Example","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":158257,"byte_end":158271,"line_start":66,"line_end":66,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":158276,"byte_end":158279,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":158284,"byte_end":158302,"line_start":68,"line_end":68,"column_start":5,"column_end":23}},{"value":"/ # use rusqlite::{Connection, Result};","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":158307,"byte_end":158348,"line_start":69,"line_end":69,"column_start":5,"column_end":46}},{"value":"/ fn insert(conn: &Connection) -> Result<usize> {","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":158353,"byte_end":158404,"line_start":70,"line_end":70,"column_start":5,"column_end":56}},{"value":"/     let mut stmt = conn.prepare(\"INSERT INTO test (name) VALUES (:name)\")?;","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":158409,"byte_end":158488,"line_start":71,"line_end":71,"column_start":5,"column_end":84}},{"value":"/     stmt.execute_named(&[(\":name\", &\"one\")])","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":158493,"byte_end":158541,"line_start":72,"line_end":72,"column_start":5,"column_end":53}},{"value":"/ }","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":158546,"byte_end":158551,"line_start":73,"line_end":73,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":158556,"byte_end":158563,"line_start":74,"line_end":74,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":158568,"byte_end":158571,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ Note, the `named_params` macro is provided for syntactic convenience,","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":158576,"byte_end":158649,"line_start":76,"line_end":76,"column_start":5,"column_end":78}},{"value":"/ and so the above example could also be written as:","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":158654,"byte_end":158708,"line_start":77,"line_end":77,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":158713,"byte_end":158716,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":158721,"byte_end":158739,"line_start":79,"line_end":79,"column_start":5,"column_end":23}},{"value":"/ # use rusqlite::{Connection, Result, named_params};","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":158744,"byte_end":158799,"line_start":80,"line_end":80,"column_start":5,"column_end":60}},{"value":"/ fn insert(conn: &Connection) -> Result<usize> {","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":158804,"byte_end":158855,"line_start":81,"line_end":81,"column_start":5,"column_end":56}},{"value":"/     let mut stmt = conn.prepare(\"INSERT INTO test (name) VALUES (:name)\")?;","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":158860,"byte_end":158939,"line_start":82,"line_end":82,"column_start":5,"column_end":84}},{"value":"/     stmt.execute_named(named_params!{\":name\": \"one\"})","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":158944,"byte_end":159001,"line_start":83,"line_end":83,"column_start":5,"column_end":62}},{"value":"/ }","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":159006,"byte_end":159011,"line_start":84,"line_end":84,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":159016,"byte_end":159023,"line_start":85,"line_end":85,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":159028,"byte_end":159031,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":159036,"byte_end":159049,"line_start":87,"line_end":87,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":159054,"byte_end":159057,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if binding parameters fails, the executed statement","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":159062,"byte_end":159135,"line_start":89,"line_end":89,"column_start":5,"column_end":78}},{"value":"/ returns rows (in which case `query` should be used instead), or the","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":159140,"byte_end":159211,"line_start":90,"line_end":90,"column_start":5,"column_end":76}},{"value":"/ underlying SQLite call fails.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":159216,"byte_end":159249,"line_start":91,"line_end":91,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":498},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":159965,"byte_end":159971,"line_start":110,"line_end":110,"column_start":12,"column_end":18},"name":"insert","qualname":"<Statement>::insert","value":"pub fn insert<P>(&mut Self, P) -> Result<i64> where P: IntoIterator,\nP::Item: ToSql","parent":null,"children":[],"decl_id":null,"docs":" Execute an INSERT and return the ROWID.","sig":null,"attributes":[{"value":"/ Execute an INSERT and return the ROWID.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":159437,"byte_end":159480,"line_start":97,"line_end":97,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":159485,"byte_end":159488,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":159493,"byte_end":159503,"line_start":99,"line_end":99,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":159508,"byte_end":159511,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ This function is a convenience wrapper around `execute()` intended for","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":159516,"byte_end":159590,"line_start":101,"line_end":101,"column_start":5,"column_end":79}},{"value":"/ queries that insert a single item. It is possible to misuse this","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":159595,"byte_end":159663,"line_start":102,"line_end":102,"column_start":5,"column_end":73}},{"value":"/ function in a way that it cannot detect, such as by calling it on a","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":159668,"byte_end":159739,"line_start":103,"line_end":103,"column_start":5,"column_end":76}},{"value":"/ statement which _updates_ a single","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":159744,"byte_end":159782,"line_start":104,"line_end":104,"column_start":5,"column_end":43}},{"value":"/ item rather than inserting one. Please don't do that.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":159787,"byte_end":159844,"line_start":105,"line_end":105,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":159849,"byte_end":159852,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":159857,"byte_end":159870,"line_start":107,"line_end":107,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":159875,"byte_end":159878,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if no row is inserted or many rows are inserted.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":159883,"byte_end":159953,"line_start":109,"line_end":109,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":500},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":161172,"byte_end":161177,"line_start":149,"line_end":149,"column_start":12,"column_end":17},"name":"query","qualname":"<Statement>::query","value":"pub fn query<P>(&mut Self, P) -> Result<Rows> where P: IntoIterator,\nP::Item: ToSql","parent":null,"children":[],"decl_id":null,"docs":" Execute the prepared statement, returning a handle to the resulting\n rows.","sig":null,"attributes":[{"value":"/ Execute the prepared statement, returning a handle to the resulting","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":160279,"byte_end":160350,"line_start":122,"line_end":122,"column_start":5,"column_end":76}},{"value":"/ rows.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":160355,"byte_end":160364,"line_start":123,"line_end":123,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":160369,"byte_end":160372,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ Due to lifetime restricts, the rows handle returned by `query` does not","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":160377,"byte_end":160452,"line_start":125,"line_end":125,"column_start":5,"column_end":80}},{"value":"/ implement the `Iterator` trait. Consider using `query_map` or","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":160457,"byte_end":160522,"line_start":126,"line_end":126,"column_start":5,"column_end":70}},{"value":"/ `query_and_then` instead, which do.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":160527,"byte_end":160566,"line_start":127,"line_end":127,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":160571,"byte_end":160574,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ ## Example","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":160579,"byte_end":160593,"line_start":129,"line_end":129,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":160598,"byte_end":160601,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":160606,"byte_end":160624,"line_start":131,"line_end":131,"column_start":5,"column_end":23}},{"value":"/ # use rusqlite::{Connection, Result, NO_PARAMS};","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":160629,"byte_end":160681,"line_start":132,"line_end":132,"column_start":5,"column_end":57}},{"value":"/ fn get_names(conn: &Connection) -> Result<Vec<String>> {","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":160686,"byte_end":160746,"line_start":133,"line_end":133,"column_start":5,"column_end":65}},{"value":"/     let mut stmt = conn.prepare(\"SELECT name FROM people\")?;","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":160751,"byte_end":160815,"line_start":134,"line_end":134,"column_start":5,"column_end":69}},{"value":"/     let mut rows = stmt.query(NO_PARAMS)?;","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":160820,"byte_end":160866,"line_start":135,"line_end":135,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":160871,"byte_end":160874,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/     let mut names = Vec::new();","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":160879,"byte_end":160914,"line_start":137,"line_end":137,"column_start":5,"column_end":40}},{"value":"/     while let Some(row) = rows.next()? {","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":160919,"byte_end":160963,"line_start":138,"line_end":138,"column_start":5,"column_end":49}},{"value":"/         names.push(row.get(0)?);","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":160968,"byte_end":161004,"line_start":139,"line_end":139,"column_start":5,"column_end":41}},{"value":"/     }","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":161009,"byte_end":161018,"line_start":140,"line_end":140,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":161023,"byte_end":161026,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/     Ok(names)","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":161031,"byte_end":161048,"line_start":142,"line_end":142,"column_start":5,"column_end":22}},{"value":"/ }","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":161053,"byte_end":161058,"line_start":143,"line_end":143,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":161063,"byte_end":161070,"line_start":144,"line_end":144,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":161075,"byte_end":161078,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ ## Failure","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":161083,"byte_end":161097,"line_start":146,"line_end":146,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":161102,"byte_end":161105,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if binding parameters fails.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":161110,"byte_end":161160,"line_start":148,"line_end":148,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":502},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":162865,"byte_end":162876,"line_start":197,"line_end":197,"column_start":12,"column_end":23},"name":"query_named","qualname":"<Statement>::query_named","value":"pub fn query_named(&mut Self, &[(&str, &ToSql)]) -> Result<Rows>","parent":null,"children":[],"decl_id":null,"docs":" Execute the prepared statement with named parameter(s), returning a\n handle for the resulting rows. If any parameters that were in the\n prepared statement are not included in `params`, they will continue\n to use the most-recently bound value from a previous\n call to `query_named`, or `NULL` if they have never been bound.","sig":null,"attributes":[{"value":"/ Execute the prepared statement with named parameter(s), returning a","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":161398,"byte_end":161469,"line_start":159,"line_end":159,"column_start":5,"column_end":76}},{"value":"/ handle for the resulting rows. If any parameters that were in the","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":161474,"byte_end":161543,"line_start":160,"line_end":160,"column_start":5,"column_end":74}},{"value":"/ prepared statement are not included in `params`, they will continue","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":161548,"byte_end":161619,"line_start":161,"line_end":161,"column_start":5,"column_end":76}},{"value":"/ to use the most-recently bound value from a previous","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":161624,"byte_end":161680,"line_start":162,"line_end":162,"column_start":5,"column_end":61}},{"value":"/ call to `query_named`, or `NULL` if they have never been bound.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":161685,"byte_end":161752,"line_start":163,"line_end":163,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":161757,"byte_end":161760,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ ## Example","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":161765,"byte_end":161779,"line_start":165,"line_end":165,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":161784,"byte_end":161787,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":161792,"byte_end":161810,"line_start":167,"line_end":167,"column_start":5,"column_end":23}},{"value":"/ # use rusqlite::{Connection, Result};","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":161815,"byte_end":161856,"line_start":168,"line_end":168,"column_start":5,"column_end":46}},{"value":"/ fn query(conn: &Connection) -> Result<()> {","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":161861,"byte_end":161908,"line_start":169,"line_end":169,"column_start":5,"column_end":52}},{"value":"/     let mut stmt = conn.prepare(\"SELECT * FROM test where name = :name\")?;","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":161913,"byte_end":161991,"line_start":170,"line_end":170,"column_start":5,"column_end":83}},{"value":"/     let mut rows = stmt.query_named(&[(\":name\", &\"one\")])?;","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":161996,"byte_end":162059,"line_start":171,"line_end":171,"column_start":5,"column_end":68}},{"value":"/     while let Some(row) = rows.next()? {","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":162064,"byte_end":162108,"line_start":172,"line_end":172,"column_start":5,"column_end":49}},{"value":"/         // ...","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":162113,"byte_end":162131,"line_start":173,"line_end":173,"column_start":5,"column_end":23}},{"value":"/     }","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":162136,"byte_end":162145,"line_start":174,"line_end":174,"column_start":5,"column_end":14}},{"value":"/     Ok(())","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":162150,"byte_end":162164,"line_start":175,"line_end":175,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":162169,"byte_end":162174,"line_start":176,"line_end":176,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":162179,"byte_end":162186,"line_start":177,"line_end":177,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":162191,"byte_end":162194,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ Note, the `named_params!` macro is provided for syntactic convenience,","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":162199,"byte_end":162273,"line_start":179,"line_end":179,"column_start":5,"column_end":79}},{"value":"/ and so the above example could also be written as:","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":162278,"byte_end":162332,"line_start":180,"line_end":180,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":162337,"byte_end":162340,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":162345,"byte_end":162363,"line_start":182,"line_end":182,"column_start":5,"column_end":23}},{"value":"/ # use rusqlite::{Connection, Result, named_params};","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":162368,"byte_end":162423,"line_start":183,"line_end":183,"column_start":5,"column_end":60}},{"value":"/ fn query(conn: &Connection) -> Result<()> {","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":162428,"byte_end":162475,"line_start":184,"line_end":184,"column_start":5,"column_end":52}},{"value":"/     let mut stmt = conn.prepare(\"SELECT * FROM test where name = :name\")?;","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":162480,"byte_end":162558,"line_start":185,"line_end":185,"column_start":5,"column_end":83}},{"value":"/     let mut rows = stmt.query_named(named_params!{ \":name\": \"one\" })?;","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":162563,"byte_end":162637,"line_start":186,"line_end":186,"column_start":5,"column_end":79}},{"value":"/     while let Some(row) = rows.next()? {","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":162642,"byte_end":162686,"line_start":187,"line_end":187,"column_start":5,"column_end":49}},{"value":"/         // ...","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":162691,"byte_end":162709,"line_start":188,"line_end":188,"column_start":5,"column_end":23}},{"value":"/     }","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":162714,"byte_end":162723,"line_start":189,"line_end":189,"column_start":5,"column_end":14}},{"value":"/     Ok(())","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":162728,"byte_end":162742,"line_start":190,"line_end":190,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":162747,"byte_end":162752,"line_start":191,"line_end":191,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":162757,"byte_end":162764,"line_start":192,"line_end":192,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":162769,"byte_end":162772,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":162777,"byte_end":162790,"line_start":194,"line_end":194,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":162795,"byte_end":162798,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if binding parameters fails.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":162803,"byte_end":162853,"line_start":196,"line_end":196,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":503},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":163908,"byte_end":163917,"line_start":228,"line_end":228,"column_start":12,"column_end":21},"name":"query_map","qualname":"<Statement>::query_map","value":"pub fn query_map<T, P, F>(&mut Self, P, F) -> Result<MappedRows<, F>> where\nP: IntoIterator, P::Item: ToSql, F: FnMut(&Row) -> Result<T>","parent":null,"children":[],"decl_id":null,"docs":" Executes the prepared statement and maps a function over the resulting\n rows, returning an iterator over the mapped function results.","sig":null,"attributes":[{"value":"/ Executes the prepared statement and maps a function over the resulting","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":163057,"byte_end":163131,"line_start":203,"line_end":203,"column_start":5,"column_end":79}},{"value":"/ rows, returning an iterator over the mapped function results.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":163136,"byte_end":163201,"line_start":204,"line_end":204,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":163206,"byte_end":163209,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ ## Example","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":163214,"byte_end":163228,"line_start":206,"line_end":206,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":163233,"byte_end":163236,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":163241,"byte_end":163259,"line_start":208,"line_end":208,"column_start":5,"column_end":23}},{"value":"/ # use rusqlite::{Connection, Result, NO_PARAMS};","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":163264,"byte_end":163316,"line_start":209,"line_end":209,"column_start":5,"column_end":57}},{"value":"/ fn get_names(conn: &Connection) -> Result<Vec<String>> {","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":163321,"byte_end":163381,"line_start":210,"line_end":210,"column_start":5,"column_end":65}},{"value":"/     let mut stmt = conn.prepare(\"SELECT name FROM people\")?;","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":163386,"byte_end":163450,"line_start":211,"line_end":211,"column_start":5,"column_end":69}},{"value":"/     let rows = stmt.query_map(NO_PARAMS, |row| row.get(0))?;","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":163455,"byte_end":163519,"line_start":212,"line_end":212,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":163524,"byte_end":163527,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/     let mut names = Vec::new();","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":163532,"byte_end":163567,"line_start":214,"line_end":214,"column_start":5,"column_end":40}},{"value":"/     for name_result in rows {","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":163572,"byte_end":163605,"line_start":215,"line_end":215,"column_start":5,"column_end":38}},{"value":"/         names.push(name_result?);","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":163610,"byte_end":163647,"line_start":216,"line_end":216,"column_start":5,"column_end":42}},{"value":"/     }","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":163652,"byte_end":163661,"line_start":217,"line_end":217,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":163666,"byte_end":163669,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/     Ok(names)","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":163674,"byte_end":163691,"line_start":219,"line_end":219,"column_start":5,"column_end":22}},{"value":"/ }","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":163696,"byte_end":163701,"line_start":220,"line_end":220,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":163706,"byte_end":163713,"line_start":221,"line_end":221,"column_start":5,"column_end":12}},{"value":"/ `f` is used to tranform the _streaming_ iterator into a _standard_","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":163718,"byte_end":163788,"line_start":222,"line_end":222,"column_start":5,"column_end":75}},{"value":"/ iterator.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":163793,"byte_end":163806,"line_start":223,"line_end":223,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":163811,"byte_end":163814,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ ## Failure","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":163819,"byte_end":163833,"line_start":225,"line_end":225,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":163838,"byte_end":163841,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if binding parameters fails.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":163846,"byte_end":163896,"line_start":227,"line_end":227,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":507},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":165316,"byte_end":165331,"line_start":267,"line_end":267,"column_start":12,"column_end":27},"name":"query_map_named","qualname":"<Statement>::query_map_named","value":"pub fn query_map_named<T, F>(&mut Self, &[(&str, &ToSql)], F)\n-> Result<MappedRows<, F>> where F: FnMut(&Row) -> Result<T>","parent":null,"children":[],"decl_id":null,"docs":" Execute the prepared statement with named parameter(s), returning an\n iterator over the result of calling the mapping function over the\n query's rows. If any parameters that were in the prepared statement\n are not included in `params`, they will continue to use the\n most-recently bound value from a previous call to `query_named`,\n or `NULL` if they have never been bound.","sig":null,"attributes":[{"value":"/ Execute the prepared statement with named parameter(s), returning an","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":164178,"byte_end":164250,"line_start":238,"line_end":238,"column_start":5,"column_end":77}},{"value":"/ iterator over the result of calling the mapping function over the","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":164255,"byte_end":164324,"line_start":239,"line_end":239,"column_start":5,"column_end":74}},{"value":"/ query's rows. If any parameters that were in the prepared statement","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":164329,"byte_end":164400,"line_start":240,"line_end":240,"column_start":5,"column_end":76}},{"value":"/ are not included in `params`, they will continue to use the","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":164405,"byte_end":164468,"line_start":241,"line_end":241,"column_start":5,"column_end":68}},{"value":"/ most-recently bound value from a previous call to `query_named`,","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":164473,"byte_end":164541,"line_start":242,"line_end":242,"column_start":5,"column_end":73}},{"value":"/ or `NULL` if they have never been bound.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":164546,"byte_end":164590,"line_start":243,"line_end":243,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":164595,"byte_end":164598,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ ## Example","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":164603,"byte_end":164617,"line_start":245,"line_end":245,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":164622,"byte_end":164625,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":164630,"byte_end":164648,"line_start":247,"line_end":247,"column_start":5,"column_end":23}},{"value":"/ # use rusqlite::{Connection, Result};","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":164653,"byte_end":164694,"line_start":248,"line_end":248,"column_start":5,"column_end":46}},{"value":"/ fn get_names(conn: &Connection) -> Result<Vec<String>> {","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":164699,"byte_end":164759,"line_start":249,"line_end":249,"column_start":5,"column_end":65}},{"value":"/     let mut stmt = conn.prepare(\"SELECT name FROM people WHERE id = :id\")?;","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":164764,"byte_end":164843,"line_start":250,"line_end":250,"column_start":5,"column_end":84}},{"value":"/     let rows = stmt.query_map_named(&[(\":id\", &\"one\")], |row| row.get(0))?;","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":164848,"byte_end":164927,"line_start":251,"line_end":251,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":164932,"byte_end":164935,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/     let mut names = Vec::new();","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":164940,"byte_end":164975,"line_start":253,"line_end":253,"column_start":5,"column_end":40}},{"value":"/     for name_result in rows {","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":164980,"byte_end":165013,"line_start":254,"line_end":254,"column_start":5,"column_end":38}},{"value":"/         names.push(name_result?);","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":165018,"byte_end":165055,"line_start":255,"line_end":255,"column_start":5,"column_end":42}},{"value":"/     }","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":165060,"byte_end":165069,"line_start":256,"line_end":256,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":165074,"byte_end":165077,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/     Ok(names)","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":165082,"byte_end":165099,"line_start":258,"line_end":258,"column_start":5,"column_end":22}},{"value":"/ }","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":165104,"byte_end":165109,"line_start":259,"line_end":259,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":165114,"byte_end":165121,"line_start":260,"line_end":260,"column_start":5,"column_end":12}},{"value":"/ `f` is used to tranform the _streaming_ iterator into a _standard_","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":165126,"byte_end":165196,"line_start":261,"line_end":261,"column_start":5,"column_end":75}},{"value":"/ iterator.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":165201,"byte_end":165214,"line_start":262,"line_end":262,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":165219,"byte_end":165222,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ ## Failure","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":165227,"byte_end":165241,"line_start":264,"line_end":264,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":165246,"byte_end":165249,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if binding parameters fails.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":165254,"byte_end":165304,"line_start":266,"line_end":266,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":510},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":165919,"byte_end":165933,"line_start":286,"line_end":286,"column_start":12,"column_end":26},"name":"query_and_then","qualname":"<Statement>::query_and_then","value":"pub fn query_and_then<T, E, P, F>(&mut Self, P, F) -> Result<AndThenRows<, F>>\nwhere P: IntoIterator, P::Item: ToSql, E: convert::From<Error>, F: FnMut(&Row)\n-> Result<T, E>","parent":null,"children":[],"decl_id":null,"docs":" Executes the prepared statement and maps a function over the resulting\n rows, where the function returns a `Result` with `Error` type\n implementing `std::convert::From<Error>` (so errors can be unified).","sig":null,"attributes":[{"value":"/ Executes the prepared statement and maps a function over the resulting","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":165597,"byte_end":165671,"line_start":279,"line_end":279,"column_start":5,"column_end":79}},{"value":"/ rows, where the function returns a `Result` with `Error` type","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":165676,"byte_end":165741,"line_start":280,"line_end":280,"column_start":5,"column_end":70}},{"value":"/ implementing `std::convert::From<Error>` (so errors can be unified).","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":165746,"byte_end":165818,"line_start":281,"line_end":281,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":165823,"byte_end":165826,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":165831,"byte_end":165844,"line_start":283,"line_end":283,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":165849,"byte_end":165852,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if binding parameters fails.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":165857,"byte_end":165907,"line_start":285,"line_end":285,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":515},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":167561,"byte_end":167581,"line_start":335,"line_end":335,"column_start":12,"column_end":32},"name":"query_and_then_named","qualname":"<Statement>::query_and_then_named","value":"pub fn query_and_then_named<T, E, F>(&mut Self, &[(&str, &ToSql)], F)\n-> Result<AndThenRows<, F>> where E: convert::From<Error>, F: FnMut(&Row) ->\nResult<T, E>","parent":null,"children":[],"decl_id":null,"docs":" Execute the prepared statement with named parameter(s), returning an\n iterator over the result of calling the mapping function over the\n query's rows. If any parameters that were in the prepared statement\n are not included in\n `params`, they will\n continue to use the most-recently bound value from a previous call\n to `query_named`, or `NULL` if they have never been bound.","sig":null,"attributes":[{"value":"/ Execute the prepared statement with named parameter(s), returning an","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":166235,"byte_end":166307,"line_start":297,"line_end":297,"column_start":5,"column_end":77}},{"value":"/ iterator over the result of calling the mapping function over the","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":166312,"byte_end":166381,"line_start":298,"line_end":298,"column_start":5,"column_end":74}},{"value":"/ query's rows. If any parameters that were in the prepared statement","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":166386,"byte_end":166457,"line_start":299,"line_end":299,"column_start":5,"column_end":76}},{"value":"/ are not included in","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":166462,"byte_end":166485,"line_start":300,"line_end":300,"column_start":5,"column_end":28}},{"value":"/ `params`, they will","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":166490,"byte_end":166513,"line_start":301,"line_end":301,"column_start":5,"column_end":28}},{"value":"/ continue to use the most-recently bound value from a previous call","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":166518,"byte_end":166588,"line_start":302,"line_end":302,"column_start":5,"column_end":75}},{"value":"/ to `query_named`, or `NULL` if they have never been bound.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":166593,"byte_end":166655,"line_start":303,"line_end":303,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":166660,"byte_end":166663,"line_start":304,"line_end":304,"column_start":5,"column_end":8}},{"value":"/ ## Example","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":166668,"byte_end":166682,"line_start":305,"line_end":305,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":166687,"byte_end":166690,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":166695,"byte_end":166713,"line_start":307,"line_end":307,"column_start":5,"column_end":23}},{"value":"/ # use rusqlite::{Connection, Result};","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":166718,"byte_end":166759,"line_start":308,"line_end":308,"column_start":5,"column_end":46}},{"value":"/ struct Person {","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":166764,"byte_end":166783,"line_start":309,"line_end":309,"column_start":5,"column_end":24}},{"value":"/     name: String,","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":166788,"byte_end":166809,"line_start":310,"line_end":310,"column_start":5,"column_end":26}},{"value":"/ };","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":166814,"byte_end":166820,"line_start":311,"line_end":311,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":166825,"byte_end":166828,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/ fn name_to_person(name: String) -> Result<Person> {","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":166833,"byte_end":166888,"line_start":313,"line_end":313,"column_start":5,"column_end":60}},{"value":"/     // ... check for valid name","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":166893,"byte_end":166928,"line_start":314,"line_end":314,"column_start":5,"column_end":40}},{"value":"/     Ok(Person { name: name })","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":166933,"byte_end":166966,"line_start":315,"line_end":315,"column_start":5,"column_end":38}},{"value":"/ }","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":166971,"byte_end":166976,"line_start":316,"line_end":316,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":166981,"byte_end":166984,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ fn get_names(conn: &Connection) -> Result<Vec<Person>> {","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":166989,"byte_end":167049,"line_start":318,"line_end":318,"column_start":5,"column_end":65}},{"value":"/     let mut stmt = conn.prepare(\"SELECT name FROM people WHERE id = :id\")?;","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":167054,"byte_end":167133,"line_start":319,"line_end":319,"column_start":5,"column_end":84}},{"value":"/     let rows =","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":167138,"byte_end":167156,"line_start":320,"line_end":320,"column_start":5,"column_end":23}},{"value":"/         stmt.query_and_then_named(&[(\":id\", &\"one\")], |row| name_to_person(row.get(0)?))?;","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":167161,"byte_end":167255,"line_start":321,"line_end":321,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":167260,"byte_end":167263,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/     let mut persons = Vec::new();","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":167268,"byte_end":167305,"line_start":323,"line_end":323,"column_start":5,"column_end":42}},{"value":"/     for person_result in rows {","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":167310,"byte_end":167345,"line_start":324,"line_end":324,"column_start":5,"column_end":40}},{"value":"/         persons.push(person_result?);","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":167350,"byte_end":167391,"line_start":325,"line_end":325,"column_start":5,"column_end":46}},{"value":"/     }","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":167396,"byte_end":167405,"line_start":326,"line_end":326,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":167410,"byte_end":167413,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/     Ok(persons)","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":167418,"byte_end":167437,"line_start":328,"line_end":328,"column_start":5,"column_end":24}},{"value":"/ }","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":167442,"byte_end":167447,"line_start":329,"line_end":329,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":167452,"byte_end":167459,"line_start":330,"line_end":330,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":167464,"byte_end":167467,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ ## Failure","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":167472,"byte_end":167486,"line_start":332,"line_end":332,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":167491,"byte_end":167494,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if binding parameters fails.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":167499,"byte_end":167549,"line_start":334,"line_end":334,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":519},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":168039,"byte_end":168045,"line_start":350,"line_end":350,"column_start":12,"column_end":18},"name":"exists","qualname":"<Statement>::exists","value":"pub fn exists<P>(&mut Self, P) -> Result<bool> where P: IntoIterator,\nP::Item: ToSql","parent":null,"children":[],"decl_id":null,"docs":" Return `true` if a query in the SQL statement it executes returns one\n or more rows and `false` if the SQL returns an empty set.\n","sig":null,"attributes":[{"value":"/ Return `true` if a query in the SQL statement it executes returns one","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":167888,"byte_end":167961,"line_start":348,"line_end":348,"column_start":5,"column_end":78}},{"value":"/ or more rows and `false` if the SQL returns an empty set.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":167966,"byte_end":168027,"line_start":349,"line_end":349,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":521},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":168779,"byte_end":168788,"line_start":373,"line_end":373,"column_start":12,"column_end":21},"name":"query_row","qualname":"<Statement>::query_row","value":"pub fn query_row<T, P, F>(&mut Self, P, F) -> Result<T> where P: IntoIterator,\nP::Item: ToSql, F: FnOnce(&Row) -> Result<T>","parent":null,"children":[],"decl_id":null,"docs":" Convenience method to execute a query that is expected to return a\n single row.","sig":null,"attributes":[{"value":"/ Convenience method to execute a query that is expected to return a","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":168271,"byte_end":168341,"line_start":360,"line_end":360,"column_start":5,"column_end":75}},{"value":"/ single row.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":168346,"byte_end":168361,"line_start":361,"line_end":361,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":168366,"byte_end":168369,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ If the query returns more than one row, all rows except the first are","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":168374,"byte_end":168447,"line_start":363,"line_end":363,"column_start":5,"column_end":78}},{"value":"/ ignored.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":168452,"byte_end":168464,"line_start":364,"line_end":364,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":168469,"byte_end":168472,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ Returns `Err(QueryReturnedNoRows)` if no results are returned. If the","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":168477,"byte_end":168550,"line_start":366,"line_end":366,"column_start":5,"column_end":78}},{"value":"/ query truly is optional, you can call `.optional()` on the result of","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":168555,"byte_end":168627,"line_start":367,"line_end":367,"column_start":5,"column_end":77}},{"value":"/ this to get a `Result<Option<T>>`.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":168632,"byte_end":168670,"line_start":368,"line_end":368,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":168675,"byte_end":168678,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":168683,"byte_end":168696,"line_start":370,"line_end":370,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":168701,"byte_end":168704,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if the underlying SQLite call fails.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":168709,"byte_end":168767,"line_start":372,"line_end":372,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":526},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":169651,"byte_end":169666,"line_start":398,"line_end":398,"column_start":12,"column_end":27},"name":"query_row_named","qualname":"<Statement>::query_row_named","value":"pub fn query_row_named<T, F>(&mut Self, &[(&str, &ToSql)], F) -> Result<T>\nwhere F: FnOnce(&Row) -> Result<T>","parent":null,"children":[],"decl_id":null,"docs":" Convenience method to execute a query with named parameter(s) that is\n expected to return a single row.","sig":null,"attributes":[{"value":"/ Convenience method to execute a query with named parameter(s) that is","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":169054,"byte_end":169127,"line_start":384,"line_end":384,"column_start":5,"column_end":78}},{"value":"/ expected to return a single row.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":169132,"byte_end":169168,"line_start":385,"line_end":385,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":169173,"byte_end":169176,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ If the query returns more than one row, all rows except the first are","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":169181,"byte_end":169254,"line_start":387,"line_end":387,"column_start":5,"column_end":78}},{"value":"/ ignored.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":169259,"byte_end":169271,"line_start":388,"line_end":388,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":169276,"byte_end":169279,"line_start":389,"line_end":389,"column_start":5,"column_end":8}},{"value":"/ Returns `Err(QueryReturnedNoRows)` if no results are returned. If the","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":169284,"byte_end":169357,"line_start":390,"line_end":390,"column_start":5,"column_end":78}},{"value":"/ query truly is optional, you can call `.optional()` on the result of","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":169362,"byte_end":169434,"line_start":391,"line_end":391,"column_start":5,"column_end":77}},{"value":"/ this to get a `Result<Option<T>>`.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":169439,"byte_end":169477,"line_start":392,"line_end":392,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":169482,"byte_end":169485,"line_start":393,"line_end":393,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":169490,"byte_end":169503,"line_start":394,"line_end":394,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":169508,"byte_end":169511,"line_start":395,"line_end":395,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if `sql` cannot be converted to a C-compatible string","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":169516,"byte_end":169591,"line_start":396,"line_end":396,"column_start":5,"column_end":80}},{"value":"/ or if the underlying SQLite call fails.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":169596,"byte_end":169639,"line_start":397,"line_end":397,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":530},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":170169,"byte_end":170177,"line_start":415,"line_end":415,"column_start":12,"column_end":20},"name":"finalize","qualname":"<Statement>::finalize","value":"pub fn finalize(Self) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the statement.","sig":null,"attributes":[{"value":"/ Consumes the statement.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":169906,"byte_end":169933,"line_start":407,"line_end":407,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":169938,"byte_end":169941,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/ Functionally equivalent to the `Drop` implementation, but allows","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":169946,"byte_end":170014,"line_start":409,"line_end":409,"column_start":5,"column_end":73}},{"value":"/ callers to see any errors that occur.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":170019,"byte_end":170060,"line_start":410,"line_end":410,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":170065,"byte_end":170068,"line_start":411,"line_end":411,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":170073,"byte_end":170086,"line_start":412,"line_end":412,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":170091,"byte_end":170094,"line_start":413,"line_end":413,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if the underlying SQLite call fails.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":170099,"byte_end":170157,"line_start":414,"line_end":414,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":531},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":170983,"byte_end":170998,"line_start":438,"line_end":438,"column_start":12,"column_end":27},"name":"parameter_index","qualname":"<Statement>::parameter_index","value":"pub fn parameter_index(&Self, &str) -> Result<Option<usize>>","parent":null,"children":[],"decl_id":null,"docs":" Return the (one-based) index of an SQL parameter given its name.","sig":null,"attributes":[{"value":"/ Return the (one-based) index of an SQL parameter given its name.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":170240,"byte_end":170309,"line_start":419,"line_end":419,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":170314,"byte_end":170317,"line_start":420,"line_end":420,"column_start":5,"column_end":8}},{"value":"/ Note that the initial \":\" or \"$\" or \"@\" or \"?\" used to specify the","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":170322,"byte_end":170392,"line_start":421,"line_end":421,"column_start":5,"column_end":75}},{"value":"/ parameter is included as part of the name.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":170397,"byte_end":170443,"line_start":422,"line_end":422,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":170448,"byte_end":170451,"line_start":423,"line_end":423,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":170456,"byte_end":170474,"line_start":424,"line_end":424,"column_start":5,"column_end":23}},{"value":"/ # use rusqlite::{Connection, Result};","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":170479,"byte_end":170520,"line_start":425,"line_end":425,"column_start":5,"column_end":46}},{"value":"/ fn example(conn: &Connection) -> Result<()> {","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":170525,"byte_end":170574,"line_start":426,"line_end":426,"column_start":5,"column_end":54}},{"value":"/     let stmt = conn.prepare(\"SELECT * FROM test WHERE name = :example\")?;","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":170579,"byte_end":170656,"line_start":427,"line_end":427,"column_start":5,"column_end":82}},{"value":"/     let index = stmt.parameter_index(\":example\")?;","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":170661,"byte_end":170715,"line_start":428,"line_end":428,"column_start":5,"column_end":59}},{"value":"/     assert_eq!(index, Some(1));","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":170720,"byte_end":170755,"line_start":429,"line_end":429,"column_start":5,"column_end":40}},{"value":"/     Ok(())","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":170760,"byte_end":170774,"line_start":430,"line_end":430,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":170779,"byte_end":170784,"line_start":431,"line_end":431,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":170789,"byte_end":170796,"line_start":432,"line_end":432,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":170801,"byte_end":170804,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":170809,"byte_end":170822,"line_start":434,"line_end":434,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":170827,"byte_end":170830,"line_start":435,"line_end":435,"column_start":5,"column_end":8}},{"value":"/ Will return Err if `name` is invalid. Will return Ok(None) if the name","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":170835,"byte_end":170909,"line_start":436,"line_end":436,"column_start":5,"column_end":79}},{"value":"/ is valid but not a bound parameter of this statement.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":170914,"byte_end":170971,"line_start":437,"line_end":437,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":535},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":172154,"byte_end":172169,"line_start":475,"line_end":475,"column_start":12,"column_end":27},"name":"parameter_count","qualname":"<Statement>::parameter_count","value":"pub fn parameter_count(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the number of parameters that can be bound to this statement.\n","sig":null,"attributes":[{"value":"/ Return the number of parameters that can be bound to this statement.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":172070,"byte_end":172142,"line_start":474,"line_end":474,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":536},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":173815,"byte_end":173833,"line_start":517,"line_end":517,"column_start":12,"column_end":30},"name":"raw_bind_parameter","qualname":"<Statement>::raw_bind_parameter","value":"pub fn raw_bind_parameter<T: ToSql>(&mut Self, usize, T) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Low level API to directly bind a parameter to a given index.","sig":null,"attributes":[{"value":"/ Low level API to directly bind a parameter to a given index.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":172240,"byte_end":172304,"line_start":479,"line_end":479,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":172309,"byte_end":172312,"line_start":480,"line_end":480,"column_start":5,"column_end":8}},{"value":"/ Note that the index is one-based, that is, the first parameter index is","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":172317,"byte_end":172393,"line_start":481,"line_end":481,"column_start":5,"column_end":80}},{"value":"/ 1 and not 0. This is consistent with the SQLite API and the values given","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":172398,"byte_end":172474,"line_start":482,"line_end":482,"column_start":5,"column_end":81}},{"value":"/ to parameters bound as `?NNN`.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":172479,"byte_end":172513,"line_start":483,"line_end":483,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":172518,"byte_end":172521,"line_start":484,"line_end":484,"column_start":5,"column_end":8}},{"value":"/ The valid values for `one_based_col_index` begin at `1`, and end at","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":172526,"byte_end":172597,"line_start":485,"line_end":485,"column_start":5,"column_end":76}},{"value":"/ [`Statement::parameter_count`], inclusive.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":172602,"byte_end":172648,"line_start":486,"line_end":486,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":172653,"byte_end":172656,"line_start":487,"line_end":487,"column_start":5,"column_end":8}},{"value":"/ # Caveats","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":172661,"byte_end":172674,"line_start":488,"line_end":488,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":172679,"byte_end":172682,"line_start":489,"line_end":489,"column_start":5,"column_end":8}},{"value":"/ This should not generally be used, but is available for special cases","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":172687,"byte_end":172760,"line_start":490,"line_end":490,"column_start":5,"column_end":78}},{"value":"/ such as:","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":172765,"byte_end":172777,"line_start":491,"line_end":491,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":172782,"byte_end":172785,"line_start":492,"line_end":492,"column_start":5,"column_end":8}},{"value":"/ - binding parameters where a gap exists.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":172790,"byte_end":172834,"line_start":493,"line_end":493,"column_start":5,"column_end":49}},{"value":"/ - binding named and positional parameters in the same query.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":172839,"byte_end":172903,"line_start":494,"line_end":494,"column_start":5,"column_end":69}},{"value":"/ - separating parameter binding from query execution.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":172908,"byte_end":172964,"line_start":495,"line_end":495,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":172969,"byte_end":172972,"line_start":496,"line_end":496,"column_start":5,"column_end":8}},{"value":"/ Statements that have had their parameters bound this way should be","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":172977,"byte_end":173047,"line_start":497,"line_end":497,"column_start":5,"column_end":75}},{"value":"/ queried or executed by [`Statement::raw_query`] or","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":173052,"byte_end":173106,"line_start":498,"line_end":498,"column_start":5,"column_end":59}},{"value":"/ [`Statement::raw_execute`]. Other functions are not guaranteed to work.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":173111,"byte_end":173186,"line_start":499,"line_end":499,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":173191,"byte_end":173194,"line_start":500,"line_end":500,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":173199,"byte_end":173212,"line_start":501,"line_end":501,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":173217,"byte_end":173220,"line_start":502,"line_end":502,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":173225,"byte_end":173243,"line_start":503,"line_end":503,"column_start":5,"column_end":23}},{"value":"/ # use rusqlite::{Connection, Result};","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":173248,"byte_end":173289,"line_start":504,"line_end":504,"column_start":5,"column_end":46}},{"value":"/ fn query(conn: &Connection) -> Result<()> {","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":173294,"byte_end":173341,"line_start":505,"line_end":505,"column_start":5,"column_end":52}},{"value":"/     let mut stmt = conn.prepare(\"SELECT * FROM test WHERE name = :name AND value > ?2\")?;","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":173346,"byte_end":173439,"line_start":506,"line_end":506,"column_start":5,"column_end":98}},{"value":"/     let name_index = stmt.parameter_index(\":name\")?.expect(\"No such parameter\");","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":173444,"byte_end":173528,"line_start":507,"line_end":507,"column_start":5,"column_end":89}},{"value":"/     stmt.raw_bind_parameter(name_index, \"foo\")?;","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":173533,"byte_end":173585,"line_start":508,"line_end":508,"column_start":5,"column_end":57}},{"value":"/     stmt.raw_bind_parameter(2, 100)?;","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":173590,"byte_end":173631,"line_start":509,"line_end":509,"column_start":5,"column_end":46}},{"value":"/     let mut rows = stmt.raw_query();","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":173636,"byte_end":173676,"line_start":510,"line_end":510,"column_start":5,"column_end":45}},{"value":"/     while let Some(row) = rows.next()? {","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":173681,"byte_end":173725,"line_start":511,"line_end":511,"column_start":5,"column_end":49}},{"value":"/         // ...","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":173730,"byte_end":173748,"line_start":512,"line_end":512,"column_start":5,"column_end":23}},{"value":"/     }","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":173753,"byte_end":173762,"line_start":513,"line_end":513,"column_start":5,"column_end":14}},{"value":"/     Ok(())","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":173767,"byte_end":173781,"line_start":514,"line_end":514,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":173786,"byte_end":173791,"line_start":515,"line_end":515,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":173796,"byte_end":173803,"line_start":516,"line_end":516,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":538},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":174730,"byte_end":174741,"line_start":541,"line_end":541,"column_start":12,"column_end":23},"name":"raw_execute","qualname":"<Statement>::raw_execute","value":"pub fn raw_execute(&mut Self) -> Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Low level API to execute a statement given that all parameters were\n bound explicitly with the [`Statement::raw_bind_parameter`] API.","sig":null,"attributes":[{"value":"/ Low level API to execute a statement given that all parameters were","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":174128,"byte_end":174199,"line_start":527,"line_end":527,"column_start":5,"column_end":76}},{"value":"/ bound explicitly with the [`Statement::raw_bind_parameter`] API.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":174204,"byte_end":174272,"line_start":528,"line_end":528,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":174277,"byte_end":174280,"line_start":529,"line_end":529,"column_start":5,"column_end":8}},{"value":"/ # Caveats","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":174285,"byte_end":174298,"line_start":530,"line_end":530,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":174303,"byte_end":174306,"line_start":531,"line_end":531,"column_start":5,"column_end":8}},{"value":"/ Any unbound parameters will have `NULL` as their value.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":174311,"byte_end":174370,"line_start":532,"line_end":532,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":174375,"byte_end":174378,"line_start":533,"line_end":533,"column_start":5,"column_end":8}},{"value":"/ This should not generally be used outside of special cases, and","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":174383,"byte_end":174450,"line_start":534,"line_end":534,"column_start":5,"column_end":72}},{"value":"/ functions in the [`Statement::execute`] family should be preferred.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":174455,"byte_end":174526,"line_start":535,"line_end":535,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":174531,"byte_end":174534,"line_start":536,"line_end":536,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":174539,"byte_end":174552,"line_start":537,"line_end":537,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":174557,"byte_end":174560,"line_start":538,"line_end":538,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if the executed statement returns rows (in which case","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":174565,"byte_end":174640,"line_start":539,"line_end":539,"column_start":5,"column_end":80}},{"value":"/ `query` should be used instead), or the underlying SQLite call fails.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":174645,"byte_end":174718,"line_start":540,"line_end":540,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":539},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":175363,"byte_end":175372,"line_start":557,"line_end":557,"column_start":12,"column_end":21},"name":"raw_query","qualname":"<Statement>::raw_query","value":"pub fn raw_query(&mut Self) -> Rows","parent":null,"children":[],"decl_id":null,"docs":" Low level API to get `Rows` for this query given that all parameters\n were bound explicitly with the [`Statement::raw_bind_parameter`] API.","sig":null,"attributes":[{"value":"/ Low level API to get `Rows` for this query given that all parameters","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":174828,"byte_end":174900,"line_start":545,"line_end":545,"column_start":5,"column_end":77}},{"value":"/ were bound explicitly with the [`Statement::raw_bind_parameter`] API.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":174905,"byte_end":174978,"line_start":546,"line_end":546,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":174983,"byte_end":174986,"line_start":547,"line_end":547,"column_start":5,"column_end":8}},{"value":"/ # Caveats","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":174991,"byte_end":175004,"line_start":548,"line_end":548,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":175009,"byte_end":175012,"line_start":549,"line_end":549,"column_start":5,"column_end":8}},{"value":"/ Any unbound parameters will have `NULL` as their value.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":175017,"byte_end":175076,"line_start":550,"line_end":550,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":175081,"byte_end":175084,"line_start":551,"line_end":551,"column_start":5,"column_end":8}},{"value":"/ This should not generally be used outside of special cases, and","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":175089,"byte_end":175156,"line_start":552,"line_end":552,"column_start":5,"column_end":72}},{"value":"/ functions in the [`Statement::query`] family should be preferred.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":175161,"byte_end":175230,"line_start":553,"line_end":553,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":175235,"byte_end":175238,"line_start":554,"line_end":554,"column_start":5,"column_end":8}},{"value":"/ Note that if the SQL does not return results, [`Statement::raw_execute`]","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":175243,"byte_end":175319,"line_start":555,"line_end":555,"column_start":5,"column_end":81}},{"value":"/ should be used instead.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":175324,"byte_end":175351,"line_start":556,"line_end":556,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":545},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":179630,"byte_end":179640,"line_start":681,"line_end":681,"column_start":12,"column_end":22},"name":"get_status","qualname":"<Statement>::get_status","value":"pub fn get_status(&Self, StatementStatus) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Get the value for one of the status counters for this statement.\n","sig":null,"attributes":[{"value":"/ Get the value for one of the status counters for this statement.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":179550,"byte_end":179618,"line_start":680,"line_end":680,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":546},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":179871,"byte_end":179883,"line_start":687,"line_end":687,"column_start":12,"column_end":24},"name":"reset_status","qualname":"<Statement>::reset_status","value":"pub fn reset_status(&Self, StatementStatus) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Reset the value of one of the status counters for this statement,\n returning the value it had before resetting.\n","sig":null,"attributes":[{"value":"/ Reset the value of one of the status counters for this statement,","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":179737,"byte_end":179806,"line_start":685,"line_end":685,"column_start":5,"column_end":74}},{"value":"/ returning the value it had before resetting.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":179811,"byte_end":179859,"line_start":686,"line_end":686,"column_start":5,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1190},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":184488,"byte_end":184500,"line_start":824,"line_end":824,"column_start":5,"column_end":17},"name":"FullscanStep","qualname":"::statement::StatementStatus::FullscanStep","value":"StatementStatus::FullscanStep","parent":{"krate":0,"index":1189},"children":[],"decl_id":null,"docs":" Equivalent to SQLITE_STMTSTATUS_FULLSCAN_STEP\n","sig":null,"attributes":[{"value":"/ Equivalent to SQLITE_STMTSTATUS_FULLSCAN_STEP","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":184434,"byte_end":184483,"line_start":823,"line_end":823,"column_start":5,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1193},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":184555,"byte_end":184559,"line_start":826,"line_end":826,"column_start":5,"column_end":9},"name":"Sort","qualname":"::statement::StatementStatus::Sort","value":"StatementStatus::Sort","parent":{"krate":0,"index":1189},"children":[],"decl_id":null,"docs":" Equivalent to SQLITE_STMTSTATUS_SORT\n","sig":null,"attributes":[{"value":"/ Equivalent to SQLITE_STMTSTATUS_SORT","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":184510,"byte_end":184550,"line_start":825,"line_end":825,"column_start":5,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1196},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":184619,"byte_end":184628,"line_start":828,"line_end":828,"column_start":5,"column_end":14},"name":"AutoIndex","qualname":"::statement::StatementStatus::AutoIndex","value":"StatementStatus::AutoIndex","parent":{"krate":0,"index":1189},"children":[],"decl_id":null,"docs":" Equivalent to SQLITE_STMTSTATUS_AUTOINDEX\n","sig":null,"attributes":[{"value":"/ Equivalent to SQLITE_STMTSTATUS_AUTOINDEX","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":184569,"byte_end":184614,"line_start":827,"line_end":827,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1199},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":184686,"byte_end":184692,"line_start":830,"line_end":830,"column_start":5,"column_end":11},"name":"VmStep","qualname":"::statement::StatementStatus::VmStep","value":"StatementStatus::VmStep","parent":{"krate":0,"index":1189},"children":[],"decl_id":null,"docs":" Equivalent to SQLITE_STMTSTATUS_VM_STEP\n","sig":null,"attributes":[{"value":"/ Equivalent to SQLITE_STMTSTATUS_VM_STEP","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":184638,"byte_end":184681,"line_start":829,"line_end":829,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1202},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":184752,"byte_end":184761,"line_start":832,"line_end":832,"column_start":5,"column_end":14},"name":"RePrepare","qualname":"::statement::StatementStatus::RePrepare","value":"StatementStatus::RePrepare","parent":{"krate":0,"index":1189},"children":[],"decl_id":null,"docs":" Equivalent to SQLITE_STMTSTATUS_REPREPARE\n","sig":null,"attributes":[{"value":"/ Equivalent to SQLITE_STMTSTATUS_REPREPARE","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":184702,"byte_end":184747,"line_start":831,"line_end":831,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1205},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":184815,"byte_end":184818,"line_start":834,"line_end":834,"column_start":5,"column_end":8},"name":"Run","qualname":"::statement::StatementStatus::Run","value":"StatementStatus::Run","parent":{"krate":0,"index":1189},"children":[],"decl_id":null,"docs":" Equivalent to SQLITE_STMTSTATUS_RUN\n","sig":null,"attributes":[{"value":"/ Equivalent to SQLITE_STMTSTATUS_RUN","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":184771,"byte_end":184810,"line_start":833,"line_end":833,"column_start":5,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1208},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":184876,"byte_end":184883,"line_start":836,"line_end":836,"column_start":5,"column_end":12},"name":"MemUsed","qualname":"::statement::StatementStatus::MemUsed","value":"StatementStatus::MemUsed","parent":{"krate":0,"index":1189},"children":[],"decl_id":null,"docs":" Equivalent to SQLITE_STMTSTATUS_MEMUSED\n","sig":null,"attributes":[{"value":"/ Equivalent to SQLITE_STMTSTATUS_MEMUSED","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":184828,"byte_end":184871,"line_start":835,"line_end":835,"column_start":5,"column_end":48}}]},{"kind":"Enum","id":{"krate":0,"index":1189},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":184412,"byte_end":184427,"line_start":822,"line_end":822,"column_start":10,"column_end":25},"name":"StatementStatus","qualname":"::statement::StatementStatus","value":"pub enum StatementStatus {\n\n    /// Equivalent to SQLITE_STMTSTATUS_FULLSCAN_STEP\n    FullscanStep = ,\n\n    /// Equivalent to SQLITE_STMTSTATUS_SORT\n    Sort = ,\n\n    /// Equivalent to SQLITE_STMTSTATUS_AUTOINDEX\n    AutoIndex = ,\n\n    /// Equivalent to SQLITE_STMTSTATUS_VM_STEP\n    VmStep = ,\n\n    /// Equivalent to SQLITE_STMTSTATUS_REPREPARE\n    RePrepare = ,\n\n    /// Equivalent to SQLITE_STMTSTATUS_RUN\n    Run = ,\n\n    /// Equivalent to SQLITE_STMTSTATUS_MEMUSED\n    MemUsed = ,\n}","parent":null,"children":[{"krate":0,"index":1190},{"krate":0,"index":1193},{"krate":0,"index":1196},{"krate":0,"index":1199},{"krate":0,"index":1202},{"krate":0,"index":1205},{"krate":0,"index":1208}],"decl_id":null,"docs":" Prepared statement status counters.","sig":null,"attributes":[{"value":"/ Prepared statement status counters.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":184103,"byte_end":184142,"line_start":812,"line_end":812,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":184143,"byte_end":184146,"line_start":813,"line_end":813,"column_start":1,"column_end":4}},{"value":"/ See https://www.sqlite.org/c3ref/c_stmtstatus_counter.html","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":184147,"byte_end":184209,"line_start":814,"line_end":814,"column_start":1,"column_end":63}},{"value":"/ for explanations of each.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":184210,"byte_end":184239,"line_start":815,"line_end":815,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":184240,"byte_end":184243,"line_start":816,"line_end":816,"column_start":1,"column_end":4}},{"value":"/ Note that depending on your version of SQLite, all of these","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":184244,"byte_end":184307,"line_start":817,"line_end":817,"column_start":1,"column_end":64}},{"value":"/ may not be available.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":184308,"byte_end":184333,"line_start":818,"line_end":818,"column_start":1,"column_end":26}},{"value":"repr(i32)","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":184334,"byte_end":184346,"line_start":819,"line_end":819,"column_start":1,"column_end":13}},{"value":"non_exhaustive","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":184385,"byte_end":184402,"line_start":821,"line_end":821,"column_start":1,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1221},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":198881,"byte_end":198889,"line_start":11,"line_end":11,"column_start":5,"column_end":13},"name":"Deferred","qualname":"::transaction::TransactionBehavior::Deferred","value":"TransactionBehavior::Deferred","parent":{"krate":0,"index":1220},"children":[],"decl_id":null,"docs":" DEFERRED means that the transaction does not actually start until the\n database is first accessed.\n","sig":null,"attributes":[{"value":"/ DEFERRED means that the transaction does not actually start until the","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":198767,"byte_end":198840,"line_start":9,"line_end":9,"column_start":5,"column_end":78}},{"value":"/ database is first accessed.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":198845,"byte_end":198876,"line_start":10,"line_end":10,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1223},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":199025,"byte_end":199034,"line_start":14,"line_end":14,"column_start":5,"column_end":14},"name":"Immediate","qualname":"::transaction::TransactionBehavior::Immediate","value":"TransactionBehavior::Immediate","parent":{"krate":0,"index":1220},"children":[],"decl_id":null,"docs":" IMMEDIATE cause the database connection to start a new write\n immediately, without waiting for a writes statement.\n","sig":null,"attributes":[{"value":"/ IMMEDIATE cause the database connection to start a new write","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":198895,"byte_end":198959,"line_start":12,"line_end":12,"column_start":5,"column_end":69}},{"value":"/ immediately, without waiting for a writes statement.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":198964,"byte_end":199020,"line_start":13,"line_end":13,"column_start":5,"column_end":61}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1225},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":199163,"byte_end":199172,"line_start":17,"line_end":17,"column_start":5,"column_end":14},"name":"Exclusive","qualname":"::transaction::TransactionBehavior::Exclusive","value":"TransactionBehavior::Exclusive","parent":{"krate":0,"index":1220},"children":[],"decl_id":null,"docs":" EXCLUSIVE prevents other database connections from reading the database\n while the transaction is underway.\n","sig":null,"attributes":[{"value":"/ EXCLUSIVE prevents other database connections from reading the database","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":199040,"byte_end":199115,"line_start":15,"line_end":15,"column_start":5,"column_end":80}},{"value":"/ while the transaction is underway.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":199120,"byte_end":199158,"line_start":16,"line_end":16,"column_start":5,"column_end":43}}]},{"kind":"Enum","id":{"krate":0,"index":1220},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":198741,"byte_end":198760,"line_start":8,"line_end":8,"column_start":10,"column_end":29},"name":"TransactionBehavior","qualname":"::transaction::TransactionBehavior","value":"pub enum TransactionBehavior {\n\n    /// DEFERRED means that the transaction does not actually start until the\n    /// database is first accessed.\n    Deferred,\n\n    /// IMMEDIATE cause the database connection to start a new write\n    /// immediately, without waiting for a writes statement.\n    Immediate,\n\n    /// EXCLUSIVE prevents other database connections from reading the database\n    /// while the transaction is underway.\n    Exclusive,\n}","parent":null,"children":[{"krate":0,"index":1221},{"krate":0,"index":1223},{"krate":0,"index":1225}],"decl_id":null,"docs":" Options for transaction behavior. See [BEGIN\n TRANSACTION](http://www.sqlite.org/lang_transaction.html) for details.\n","sig":null,"attributes":[{"value":"/ Options for transaction behavior. See [BEGIN","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":198567,"byte_end":198615,"line_start":4,"line_end":4,"column_start":1,"column_end":49}},{"value":"/ TRANSACTION](http://www.sqlite.org/lang_transaction.html) for details.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":198616,"byte_end":198690,"line_start":5,"line_end":5,"column_start":1,"column_end":75}},{"value":"non_exhaustive","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":198714,"byte_end":198731,"line_start":7,"line_end":7,"column_start":1,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1231},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":199401,"byte_end":199409,"line_start":25,"line_end":25,"column_start":5,"column_end":13},"name":"Rollback","qualname":"::transaction::DropBehavior::Rollback","value":"DropBehavior::Rollback","parent":{"krate":0,"index":1230},"children":[],"decl_id":null,"docs":" Roll back the changes. This is the default.\n","sig":null,"attributes":[{"value":"/ Roll back the changes. This is the default.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":199349,"byte_end":199396,"line_start":24,"line_end":24,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1233},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":199444,"byte_end":199450,"line_start":28,"line_end":28,"column_start":5,"column_end":11},"name":"Commit","qualname":"::transaction::DropBehavior::Commit","value":"DropBehavior::Commit","parent":{"krate":0,"index":1230},"children":[],"decl_id":null,"docs":" Commit the changes.\n","sig":null,"attributes":[{"value":"/ Commit the changes.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":199416,"byte_end":199439,"line_start":27,"line_end":27,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1235},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":199590,"byte_end":199596,"line_start":32,"line_end":32,"column_start":5,"column_end":11},"name":"Ignore","qualname":"::transaction::DropBehavior::Ignore","value":"DropBehavior::Ignore","parent":{"krate":0,"index":1230},"children":[],"decl_id":null,"docs":" Do not commit or roll back changes - this will leave the transaction or\n savepoint open, so should be used with care.\n","sig":null,"attributes":[{"value":"/ Do not commit or roll back changes - this will leave the transaction or","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":199457,"byte_end":199532,"line_start":30,"line_end":30,"column_start":5,"column_end":80}},{"value":"/ savepoint open, so should be used with care.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":199537,"byte_end":199585,"line_start":31,"line_end":31,"column_start":5,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1237},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":199675,"byte_end":199680,"line_start":35,"line_end":35,"column_start":5,"column_end":10},"name":"Panic","qualname":"::transaction::DropBehavior::Panic","value":"DropBehavior::Panic","parent":{"krate":0,"index":1230},"children":[],"decl_id":null,"docs":" Panic. Used to enforce intentional behavior during development.\n","sig":null,"attributes":[{"value":"/ Panic. Used to enforce intentional behavior during development.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":199603,"byte_end":199670,"line_start":34,"line_end":34,"column_start":5,"column_end":72}}]},{"kind":"Enum","id":{"krate":0,"index":1230},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":199330,"byte_end":199342,"line_start":23,"line_end":23,"column_start":10,"column_end":22},"name":"DropBehavior","qualname":"::transaction::DropBehavior","value":"pub enum DropBehavior {\n\n    /// Roll back the changes. This is the default.\n    Rollback,\n\n    /// Commit the changes.\n    Commit,\n\n    /// Do not commit or roll back changes - this will leave the transaction or\n    /// savepoint open, so should be used with care.\n    Ignore,\n\n    /// Panic. Used to enforce intentional behavior during development.\n    Panic,\n}","parent":null,"children":[{"krate":0,"index":1231},{"krate":0,"index":1233},{"krate":0,"index":1235},{"krate":0,"index":1237}],"decl_id":null,"docs":" Options for how a Transaction or Savepoint should behave when it is dropped.\n","sig":null,"attributes":[{"value":"/ Options for how a Transaction or Savepoint should behave when it is dropped.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":199177,"byte_end":199257,"line_start":20,"line_end":20,"column_start":1,"column_end":81}},{"value":"non_exhaustive","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":199303,"byte_end":199320,"line_start":22,"line_end":22,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":1250},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":200489,"byte_end":200500,"line_start":62,"line_end":62,"column_start":12,"column_end":23},"name":"Transaction","qualname":"::transaction::Transaction","value":"Transaction {  }","parent":null,"children":[{"krate":0,"index":1252},{"krate":0,"index":1253}],"decl_id":null,"docs":" Represents a transaction on a database connection.","sig":null,"attributes":[{"value":"/ Represents a transaction on a database connection.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":199685,"byte_end":199739,"line_start":38,"line_end":38,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":199740,"byte_end":199743,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ ## Note","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":199744,"byte_end":199755,"line_start":40,"line_end":40,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":199756,"byte_end":199759,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ Transactions will roll back by default. Use `commit` method to explicitly","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":199760,"byte_end":199837,"line_start":42,"line_end":42,"column_start":1,"column_end":78}},{"value":"/ commit the transaction, or use `set_drop_behavior` to change what happens","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":199838,"byte_end":199915,"line_start":43,"line_end":43,"column_start":1,"column_end":78}},{"value":"/ when the transaction is dropped.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":199916,"byte_end":199952,"line_start":44,"line_end":44,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":199953,"byte_end":199956,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ ## Example","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":199957,"byte_end":199971,"line_start":46,"line_end":46,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":199972,"byte_end":199975,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":199976,"byte_end":199994,"line_start":48,"line_end":48,"column_start":1,"column_end":19}},{"value":"/ # use rusqlite::{Connection, Result};","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":199995,"byte_end":200036,"line_start":49,"line_end":49,"column_start":1,"column_end":42}},{"value":"/ # fn do_queries_part_1(_conn: &Connection) -> Result<()> { Ok(()) }","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":200037,"byte_end":200108,"line_start":50,"line_end":50,"column_start":1,"column_end":72}},{"value":"/ # fn do_queries_part_2(_conn: &Connection) -> Result<()> { Ok(()) }","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":200109,"byte_end":200180,"line_start":51,"line_end":51,"column_start":1,"column_end":72}},{"value":"/ fn perform_queries(conn: &mut Connection) -> Result<()> {","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":200181,"byte_end":200242,"line_start":52,"line_end":52,"column_start":1,"column_end":62}},{"value":"/     let tx = conn.transaction()?;","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":200243,"byte_end":200280,"line_start":53,"line_end":53,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":200281,"byte_end":200284,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/     do_queries_part_1(&tx)?; // tx causes rollback if this fails","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":200285,"byte_end":200353,"line_start":55,"line_end":55,"column_start":1,"column_end":69}},{"value":"/     do_queries_part_2(&tx)?; // tx causes rollback if this fails","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":200354,"byte_end":200422,"line_start":56,"line_end":56,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":200423,"byte_end":200426,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/     tx.commit()","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":200427,"byte_end":200446,"line_start":58,"line_end":58,"column_start":1,"column_end":20}},{"value":"/ }","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":200447,"byte_end":200452,"line_start":59,"line_end":59,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":200453,"byte_end":200460,"line_start":60,"line_end":60,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":563},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":201352,"byte_end":201361,"line_start":90,"line_end":90,"column_start":12,"column_end":21},"name":"Savepoint","qualname":"::transaction::Savepoint","value":"Savepoint {  }","parent":null,"children":[{"krate":0,"index":565},{"krate":0,"index":566},{"krate":0,"index":567},{"krate":0,"index":568},{"krate":0,"index":569}],"decl_id":null,"docs":" Represents a savepoint on a database connection.","sig":null,"attributes":[{"value":"/ Represents a savepoint on a database connection.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":200575,"byte_end":200627,"line_start":67,"line_end":67,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":200628,"byte_end":200631,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ ## Note","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":200632,"byte_end":200643,"line_start":69,"line_end":69,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":200644,"byte_end":200647,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ Savepoints will roll back by default. Use `commit` method to explicitly","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":200648,"byte_end":200723,"line_start":71,"line_end":71,"column_start":1,"column_end":76}},{"value":"/ commit the savepoint, or use `set_drop_behavior` to change what happens","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":200724,"byte_end":200799,"line_start":72,"line_end":72,"column_start":1,"column_end":76}},{"value":"/ when the savepoint is dropped.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":200800,"byte_end":200834,"line_start":73,"line_end":73,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":200835,"byte_end":200838,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ ## Example","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":200839,"byte_end":200853,"line_start":75,"line_end":75,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":200854,"byte_end":200857,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":200858,"byte_end":200876,"line_start":77,"line_end":77,"column_start":1,"column_end":19}},{"value":"/ # use rusqlite::{Connection, Result};","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":200877,"byte_end":200918,"line_start":78,"line_end":78,"column_start":1,"column_end":42}},{"value":"/ # fn do_queries_part_1(_conn: &Connection) -> Result<()> { Ok(()) }","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":200919,"byte_end":200990,"line_start":79,"line_end":79,"column_start":1,"column_end":72}},{"value":"/ # fn do_queries_part_2(_conn: &Connection) -> Result<()> { Ok(()) }","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":200991,"byte_end":201062,"line_start":80,"line_end":80,"column_start":1,"column_end":72}},{"value":"/ fn perform_queries(conn: &mut Connection) -> Result<()> {","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":201063,"byte_end":201124,"line_start":81,"line_end":81,"column_start":1,"column_end":62}},{"value":"/     let sp = conn.savepoint()?;","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":201125,"byte_end":201160,"line_start":82,"line_end":82,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":201161,"byte_end":201164,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/     do_queries_part_1(&sp)?; // sp causes rollback if this fails","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":201165,"byte_end":201233,"line_start":84,"line_end":84,"column_start":1,"column_end":69}},{"value":"/     do_queries_part_2(&sp)?; // sp causes rollback if this fails","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":201234,"byte_end":201302,"line_start":85,"line_end":85,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":201303,"byte_end":201306,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/     sp.commit()","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":201307,"byte_end":201326,"line_start":87,"line_end":87,"column_start":1,"column_end":20}},{"value":"/ }","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":201327,"byte_end":201332,"line_start":88,"line_end":88,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":201333,"byte_end":201340,"line_start":89,"line_end":89,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":571},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":201873,"byte_end":201876,"line_start":105,"line_end":105,"column_start":12,"column_end":15},"name":"new","qualname":"<Transaction>::new","value":"pub fn new(&mut Connection, TransactionBehavior) -> Result<Transaction>","parent":null,"children":[],"decl_id":null,"docs":" Begin a new transaction. Cannot be nested; see `savepoint` for nested\n transactions.","sig":null,"attributes":[{"value":"/ Begin a new transaction. Cannot be nested; see `savepoint` for nested","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":201518,"byte_end":201591,"line_start":99,"line_end":99,"column_start":5,"column_end":78}},{"value":"/ transactions.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":201596,"byte_end":201613,"line_start":100,"line_end":100,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":201618,"byte_end":201621,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ Even though we don't mutate the connection, we take a `&mut Connection`","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":201626,"byte_end":201701,"line_start":102,"line_end":102,"column_start":5,"column_end":80}},{"value":"/ so as to prevent nested transactions on the same connection. For cases","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":201706,"byte_end":201780,"line_start":103,"line_end":103,"column_start":5,"column_end":79}},{"value":"/ where this is unacceptable, [`Transaction::new_unchecked`] is available.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":201785,"byte_end":201861,"line_start":104,"line_end":104,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":572},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":202314,"byte_end":202327,"line_start":114,"line_end":114,"column_start":12,"column_end":25},"name":"new_unchecked","qualname":"<Transaction>::new_unchecked","value":"pub fn new_unchecked(&Connection, TransactionBehavior) -> Result<Transaction>","parent":null,"children":[],"decl_id":null,"docs":" Begin a new transaction, failing if a transaction is open.","sig":null,"attributes":[{"value":"/ Begin a new transaction, failing if a transaction is open.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":202015,"byte_end":202077,"line_start":109,"line_end":109,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":202082,"byte_end":202085,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ If a transaction is already open, this will return an error. Where","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":202090,"byte_end":202160,"line_start":111,"line_end":111,"column_start":5,"column_end":75}},{"value":"/ possible, [`Transaction::new`] should be preferred, as it provides a","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":202165,"byte_end":202237,"line_start":112,"line_end":112,"column_start":5,"column_end":77}},{"value":"/ compile-time guarantee that transactions are not nested.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":202242,"byte_end":202302,"line_start":113,"line_end":113,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":574},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":203660,"byte_end":203669,"line_start":156,"line_end":156,"column_start":12,"column_end":21},"name":"savepoint","qualname":"<Transaction>::savepoint","value":"pub fn savepoint(&mut Self) -> Result<Savepoint>","parent":null,"children":[],"decl_id":null,"docs":" Starts a new [savepoint](http://www.sqlite.org/lang_savepoint.html), allowing nested\n transactions.","sig":null,"attributes":[{"value":"/ Starts a new [savepoint](http://www.sqlite.org/lang_savepoint.html), allowing nested","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":202823,"byte_end":202911,"line_start":129,"line_end":129,"column_start":5,"column_end":93}},{"value":"/ transactions.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":202916,"byte_end":202933,"line_start":130,"line_end":130,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":202938,"byte_end":202941,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ ## Note","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":202946,"byte_end":202957,"line_start":132,"line_end":132,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":202962,"byte_end":202965,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ Just like outer level transactions, savepoint transactions rollback by","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":202970,"byte_end":203044,"line_start":134,"line_end":134,"column_start":5,"column_end":79}},{"value":"/ default.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":203049,"byte_end":203061,"line_start":135,"line_end":135,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":203066,"byte_end":203069,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ ## Example","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":203074,"byte_end":203088,"line_start":137,"line_end":137,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":203093,"byte_end":203096,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":203101,"byte_end":203119,"line_start":139,"line_end":139,"column_start":5,"column_end":23}},{"value":"/ # use rusqlite::{Connection, Result};","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":203124,"byte_end":203165,"line_start":140,"line_end":140,"column_start":5,"column_end":46}},{"value":"/ # fn perform_queries_part_1_succeeds(_conn: &Connection) -> bool { true }","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":203170,"byte_end":203247,"line_start":141,"line_end":141,"column_start":5,"column_end":82}},{"value":"/ fn perform_queries(conn: &mut Connection) -> Result<()> {","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":203252,"byte_end":203313,"line_start":142,"line_end":142,"column_start":5,"column_end":66}},{"value":"/     let mut tx = conn.transaction()?;","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":203318,"byte_end":203359,"line_start":143,"line_end":143,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":203364,"byte_end":203367,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/     {","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":203372,"byte_end":203381,"line_start":145,"line_end":145,"column_start":5,"column_end":14}},{"value":"/         let sp = tx.savepoint()?;","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":203386,"byte_end":203423,"line_start":146,"line_end":146,"column_start":5,"column_end":42}},{"value":"/         if perform_queries_part_1_succeeds(&sp) {","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":203428,"byte_end":203481,"line_start":147,"line_end":147,"column_start":5,"column_end":58}},{"value":"/             sp.commit()?;","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":203486,"byte_end":203515,"line_start":148,"line_end":148,"column_start":5,"column_end":34}},{"value":"/         }","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":203520,"byte_end":203533,"line_start":149,"line_end":149,"column_start":5,"column_end":18}},{"value":"/         // otherwise, sp will rollback","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":203538,"byte_end":203580,"line_start":150,"line_end":150,"column_start":5,"column_end":47}},{"value":"/     }","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":203585,"byte_end":203594,"line_start":151,"line_end":151,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":203599,"byte_end":203602,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/     tx.commit()","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":203607,"byte_end":203626,"line_start":153,"line_end":153,"column_start":5,"column_end":24}},{"value":"/ }","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":203631,"byte_end":203636,"line_start":154,"line_end":154,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":203641,"byte_end":203648,"line_start":155,"line_end":155,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":575},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":203850,"byte_end":203869,"line_start":161,"line_end":161,"column_start":12,"column_end":31},"name":"savepoint_with_name","qualname":"<Transaction>::savepoint_with_name","value":"pub fn savepoint_with_name<T: Into<String>>(&mut Self, T) -> Result<Savepoint>","parent":null,"children":[],"decl_id":null,"docs":" Create a new savepoint with a custom savepoint name. See `savepoint()`.\n","sig":null,"attributes":[{"value":"/ Create a new savepoint with a custom savepoint name. See `savepoint()`.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":203763,"byte_end":203838,"line_start":160,"line_end":160,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":577},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":204107,"byte_end":204120,"line_start":167,"line_end":167,"column_start":12,"column_end":25},"name":"drop_behavior","qualname":"<Transaction>::drop_behavior","value":"pub fn drop_behavior(&Self) -> DropBehavior","parent":null,"children":[],"decl_id":null,"docs":" Get the current setting for what happens to the transaction when it is\n dropped.\n","sig":null,"attributes":[{"value":"/ Get the current setting for what happens to the transaction when it is","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":204004,"byte_end":204078,"line_start":165,"line_end":165,"column_start":5,"column_end":79}},{"value":"/ dropped.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":204083,"byte_end":204095,"line_start":166,"line_end":166,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":578},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":204285,"byte_end":204302,"line_start":173,"line_end":173,"column_start":12,"column_end":29},"name":"set_drop_behavior","qualname":"<Transaction>::set_drop_behavior","value":"pub fn set_drop_behavior(&mut Self, DropBehavior)","parent":null,"children":[],"decl_id":null,"docs":" Configure the transaction to perform the specified action when it is\n dropped.\n","sig":null,"attributes":[{"value":"/ Configure the transaction to perform the specified action when it is","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":204184,"byte_end":204256,"line_start":171,"line_end":171,"column_start":5,"column_end":77}},{"value":"/ dropped.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":204261,"byte_end":204273,"line_start":172,"line_end":172,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":579},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":204477,"byte_end":204483,"line_start":178,"line_end":178,"column_start":12,"column_end":18},"name":"commit","qualname":"<Transaction>::commit","value":"pub fn commit(Self) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" A convenience method which consumes and commits a transaction.\n","sig":null,"attributes":[{"value":"/ A convenience method which consumes and commits a transaction.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":204399,"byte_end":204465,"line_start":177,"line_end":177,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":581},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":204733,"byte_end":204741,"line_start":188,"line_end":188,"column_start":12,"column_end":20},"name":"rollback","qualname":"<Transaction>::rollback","value":"pub fn rollback(Self) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" A convenience method which consumes and rolls back a transaction.\n","sig":null,"attributes":[{"value":"/ A convenience method which consumes and rolls back a transaction.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":204652,"byte_end":204721,"line_start":187,"line_end":187,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":583},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":205175,"byte_end":205181,"line_start":202,"line_end":202,"column_start":12,"column_end":18},"name":"finish","qualname":"<Transaction>::finish","value":"pub fn finish(Self) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the transaction, committing or rolling back according to the\n current setting (see `drop_behavior`).","sig":null,"attributes":[{"value":"/ Consumes the transaction, committing or rolling back according to the","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":204916,"byte_end":204989,"line_start":197,"line_end":197,"column_start":5,"column_end":78}},{"value":"/ current setting (see `drop_behavior`).","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":204994,"byte_end":205036,"line_start":198,"line_end":198,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":205041,"byte_end":205044,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ Functionally equivalent to the `Drop` implementation, but allows","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":205049,"byte_end":205117,"line_start":200,"line_end":200,"column_start":5,"column_end":73}},{"value":"/ callers to see any errors that occur.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":205122,"byte_end":205163,"line_start":201,"line_end":201,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":596},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":206635,"byte_end":206638,"line_start":257,"line_end":257,"column_start":12,"column_end":15},"name":"new","qualname":"<Savepoint>::new","value":"pub fn new(&mut Connection) -> Result<Savepoint>","parent":null,"children":[],"decl_id":null,"docs":" Begin a new savepoint. Can be nested.\n","sig":null,"attributes":[{"value":"/ Begin a new savepoint. Can be nested.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":206582,"byte_end":206623,"line_start":256,"line_end":256,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":597},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":206813,"byte_end":206822,"line_start":262,"line_end":262,"column_start":12,"column_end":21},"name":"with_name","qualname":"<Savepoint>::with_name","value":"pub fn with_name<T: Into<String>>(&mut Connection, T) -> Result<Savepoint>","parent":null,"children":[],"decl_id":null,"docs":" Begin a new savepoint with a user-provided savepoint name.\n","sig":null,"attributes":[{"value":"/ Begin a new savepoint with a user-provided savepoint name.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":206739,"byte_end":206801,"line_start":261,"line_end":261,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":599},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":207005,"byte_end":207014,"line_start":267,"line_end":267,"column_start":12,"column_end":21},"name":"savepoint","qualname":"<Savepoint>::savepoint","value":"pub fn savepoint(&mut Self) -> Result<Savepoint>","parent":null,"children":[],"decl_id":null,"docs":" Begin a nested savepoint.\n","sig":null,"attributes":[{"value":"/ Begin a nested savepoint.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":206964,"byte_end":206993,"line_start":266,"line_end":266,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":600},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":207198,"byte_end":207217,"line_start":272,"line_end":272,"column_start":12,"column_end":31},"name":"savepoint_with_name","qualname":"<Savepoint>::savepoint_with_name","value":"pub fn savepoint_with_name<T: Into<String>>(&mut Self, T) -> Result<Savepoint>","parent":null,"children":[],"decl_id":null,"docs":" Begin a nested savepoint with a user-provided savepoint name.\n","sig":null,"attributes":[{"value":"/ Begin a nested savepoint with a user-provided savepoint name.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":207121,"byte_end":207186,"line_start":271,"line_end":271,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":602},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":207466,"byte_end":207479,"line_start":278,"line_end":278,"column_start":12,"column_end":25},"name":"drop_behavior","qualname":"<Savepoint>::drop_behavior","value":"pub fn drop_behavior(&Self) -> DropBehavior","parent":null,"children":[],"decl_id":null,"docs":" Get the current setting for what happens to the savepoint when it is\n dropped.\n","sig":null,"attributes":[{"value":"/ Get the current setting for what happens to the savepoint when it is","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":207365,"byte_end":207437,"line_start":276,"line_end":276,"column_start":5,"column_end":77}},{"value":"/ dropped.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":207442,"byte_end":207454,"line_start":277,"line_end":277,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":603},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":207642,"byte_end":207659,"line_start":284,"line_end":284,"column_start":12,"column_end":29},"name":"set_drop_behavior","qualname":"<Savepoint>::set_drop_behavior","value":"pub fn set_drop_behavior(&mut Self, DropBehavior)","parent":null,"children":[],"decl_id":null,"docs":" Configure the savepoint to perform the specified action when it is\n dropped.\n","sig":null,"attributes":[{"value":"/ Configure the savepoint to perform the specified action when it is","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":207543,"byte_end":207613,"line_start":282,"line_end":282,"column_start":5,"column_end":75}},{"value":"/ dropped.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":207618,"byte_end":207630,"line_start":283,"line_end":283,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":604},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":207832,"byte_end":207838,"line_start":289,"line_end":289,"column_start":12,"column_end":18},"name":"commit","qualname":"<Savepoint>::commit","value":"pub fn commit(Self) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" A convenience method which consumes and commits a savepoint.\n","sig":null,"attributes":[{"value":"/ A convenience method which consumes and commits a savepoint.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":207756,"byte_end":207820,"line_start":288,"line_end":288,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":606},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":208302,"byte_end":208310,"line_start":305,"line_end":305,"column_start":12,"column_end":20},"name":"rollback","qualname":"<Savepoint>::rollback","value":"pub fn rollback(&mut Self) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" A convenience method which rolls back a savepoint.","sig":null,"attributes":[{"value":"/ A convenience method which rolls back a savepoint.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":208063,"byte_end":208117,"line_start":299,"line_end":299,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":208122,"byte_end":208125,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ ## Note","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":208130,"byte_end":208141,"line_start":301,"line_end":301,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":208146,"byte_end":208149,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ Unlike `Transaction`s, savepoints remain active after they have been","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":208154,"byte_end":208226,"line_start":303,"line_end":303,"column_start":5,"column_end":77}},{"value":"/ rolled back, and can be rolled back again or committed.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":208231,"byte_end":208290,"line_start":304,"line_end":304,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":607},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":208690,"byte_end":208696,"line_start":315,"line_end":315,"column_start":12,"column_end":18},"name":"finish","qualname":"<Savepoint>::finish","value":"pub fn finish(Self) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the savepoint, committing or rolling back according to the\n current setting (see `drop_behavior`).","sig":null,"attributes":[{"value":"/ Consumes the savepoint, committing or rolling back according to the","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":208433,"byte_end":208504,"line_start":310,"line_end":310,"column_start":5,"column_end":76}},{"value":"/ current setting (see `drop_behavior`).","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":208509,"byte_end":208551,"line_start":311,"line_end":311,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":208556,"byte_end":208559,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/ Functionally equivalent to the `Drop` implementation, but allows","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":208564,"byte_end":208632,"line_start":313,"line_end":313,"column_start":5,"column_end":73}},{"value":"/ callers to see any errors that occur.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":208637,"byte_end":208678,"line_start":314,"line_end":314,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":616},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":210383,"byte_end":210394,"line_start":373,"line_end":373,"column_start":12,"column_end":23},"name":"transaction","qualname":"<Connection>::transaction","value":"pub fn transaction(&mut Self) -> Result<Transaction>","parent":null,"children":[],"decl_id":null,"docs":" Begin a new transaction with the default behavior (DEFERRED).","sig":null,"attributes":[{"value":"/ Begin a new transaction with the default behavior (DEFERRED).","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":209436,"byte_end":209501,"line_start":348,"line_end":348,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":209506,"byte_end":209509,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ The transaction defaults to rolling back when it is dropped. If you","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":209514,"byte_end":209585,"line_start":350,"line_end":350,"column_start":5,"column_end":76}},{"value":"/ want the transaction to commit, you must call `commit` or","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":209590,"byte_end":209651,"line_start":351,"line_end":351,"column_start":5,"column_end":66}},{"value":"/ `set_drop_behavior(DropBehavior::Commit)`.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":209656,"byte_end":209702,"line_start":352,"line_end":352,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":209707,"byte_end":209710,"line_start":353,"line_end":353,"column_start":5,"column_end":8}},{"value":"/ ## Example","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":209715,"byte_end":209729,"line_start":354,"line_end":354,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":209734,"byte_end":209737,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":209742,"byte_end":209760,"line_start":356,"line_end":356,"column_start":5,"column_end":23}},{"value":"/ # use rusqlite::{Connection, Result};","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":209765,"byte_end":209806,"line_start":357,"line_end":357,"column_start":5,"column_end":46}},{"value":"/ # fn do_queries_part_1(_conn: &Connection) -> Result<()> { Ok(()) }","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":209811,"byte_end":209882,"line_start":358,"line_end":358,"column_start":5,"column_end":76}},{"value":"/ # fn do_queries_part_2(_conn: &Connection) -> Result<()> { Ok(()) }","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":209887,"byte_end":209958,"line_start":359,"line_end":359,"column_start":5,"column_end":76}},{"value":"/ fn perform_queries(conn: &mut Connection) -> Result<()> {","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":209963,"byte_end":210024,"line_start":360,"line_end":360,"column_start":5,"column_end":66}},{"value":"/     let tx = conn.transaction()?;","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":210029,"byte_end":210066,"line_start":361,"line_end":361,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":210071,"byte_end":210074,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/     do_queries_part_1(&tx)?; // tx causes rollback if this fails","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":210079,"byte_end":210147,"line_start":363,"line_end":363,"column_start":5,"column_end":73}},{"value":"/     do_queries_part_2(&tx)?; // tx causes rollback if this fails","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":210152,"byte_end":210220,"line_start":364,"line_end":364,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":210225,"byte_end":210228,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/     tx.commit()","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":210233,"byte_end":210252,"line_start":366,"line_end":366,"column_start":5,"column_end":24}},{"value":"/ }","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":210257,"byte_end":210262,"line_start":367,"line_end":367,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":210267,"byte_end":210274,"line_start":368,"line_end":368,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":210279,"byte_end":210282,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":210287,"byte_end":210300,"line_start":370,"line_end":370,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":210305,"byte_end":210308,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if the underlying SQLite call fails.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":210313,"byte_end":210371,"line_start":372,"line_end":372,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":617},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":210706,"byte_end":210731,"line_start":384,"line_end":384,"column_start":12,"column_end":37},"name":"transaction_with_behavior","qualname":"<Connection>::transaction_with_behavior","value":"pub fn transaction_with_behavior(&mut Self, TransactionBehavior)\n-> Result<Transaction>","parent":null,"children":[],"decl_id":null,"docs":" Begin a new transaction with a specified behavior.","sig":null,"attributes":[{"value":"/ Begin a new transaction with a specified behavior.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":210508,"byte_end":210562,"line_start":377,"line_end":377,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":210567,"byte_end":210570,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ See `transaction`.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":210575,"byte_end":210597,"line_start":379,"line_end":379,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":210602,"byte_end":210605,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":210610,"byte_end":210623,"line_start":381,"line_end":381,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":210628,"byte_end":210631,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if the underlying SQLite call fails.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":210636,"byte_end":210694,"line_start":383,"line_end":383,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":618},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":212190,"byte_end":212211,"line_start":422,"line_end":422,"column_start":12,"column_end":33},"name":"unchecked_transaction","qualname":"<Connection>::unchecked_transaction","value":"pub fn unchecked_transaction(&Self) -> Result<Transaction>","parent":null,"children":[],"decl_id":null,"docs":" Begin a new transaction with the default behavior (DEFERRED).","sig":null,"attributes":[{"value":"/ Begin a new transaction with the default behavior (DEFERRED).","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":210878,"byte_end":210943,"line_start":391,"line_end":391,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":210948,"byte_end":210951,"line_start":392,"line_end":392,"column_start":5,"column_end":8}},{"value":"/ Attempt to open a nested transaction will result in a SQLite error.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":210956,"byte_end":211027,"line_start":393,"line_end":393,"column_start":5,"column_end":76}},{"value":"/ `Connection::transaction` prevents this at compile time by taking `&mut","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":211032,"byte_end":211107,"line_start":394,"line_end":394,"column_start":5,"column_end":80}},{"value":"/ self`, but `Connection::unchecked_transaction()` may be used to defer","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":211112,"byte_end":211185,"line_start":395,"line_end":395,"column_start":5,"column_end":78}},{"value":"/ the checking until runtime.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":211190,"byte_end":211221,"line_start":396,"line_end":396,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":211226,"byte_end":211229,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/ See [`Connection::transaction`] and [`Transaction::new_unchecked`]","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":211234,"byte_end":211304,"line_start":398,"line_end":398,"column_start":5,"column_end":75}},{"value":"/ (which can be used if the default transaction behavior is undesirable).","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":211309,"byte_end":211384,"line_start":399,"line_end":399,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":211389,"byte_end":211392,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ ## Example","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":211397,"byte_end":211411,"line_start":401,"line_end":401,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":211416,"byte_end":211419,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":211424,"byte_end":211442,"line_start":403,"line_end":403,"column_start":5,"column_end":23}},{"value":"/ # use rusqlite::{Connection, Result};","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":211447,"byte_end":211488,"line_start":404,"line_end":404,"column_start":5,"column_end":46}},{"value":"/ # use std::rc::Rc;","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":211493,"byte_end":211515,"line_start":405,"line_end":405,"column_start":5,"column_end":27}},{"value":"/ # fn do_queries_part_1(_conn: &Connection) -> Result<()> { Ok(()) }","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":211520,"byte_end":211591,"line_start":406,"line_end":406,"column_start":5,"column_end":76}},{"value":"/ # fn do_queries_part_2(_conn: &Connection) -> Result<()> { Ok(()) }","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":211596,"byte_end":211667,"line_start":407,"line_end":407,"column_start":5,"column_end":76}},{"value":"/ fn perform_queries(conn: Rc<Connection>) -> Result<()> {","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":211672,"byte_end":211732,"line_start":408,"line_end":408,"column_start":5,"column_end":65}},{"value":"/     let tx = conn.unchecked_transaction()?;","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":211737,"byte_end":211784,"line_start":409,"line_end":409,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":211789,"byte_end":211792,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/     do_queries_part_1(&tx)?; // tx causes rollback if this fails","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":211797,"byte_end":211865,"line_start":411,"line_end":411,"column_start":5,"column_end":73}},{"value":"/     do_queries_part_2(&tx)?; // tx causes rollback if this fails","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":211870,"byte_end":211938,"line_start":412,"line_end":412,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":211943,"byte_end":211946,"line_start":413,"line_end":413,"column_start":5,"column_end":8}},{"value":"/     tx.commit()","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":211951,"byte_end":211970,"line_start":414,"line_end":414,"column_start":5,"column_end":24}},{"value":"/ }","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":211975,"byte_end":211980,"line_start":415,"line_end":415,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":211985,"byte_end":211992,"line_start":416,"line_end":416,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":211997,"byte_end":212000,"line_start":417,"line_end":417,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":212005,"byte_end":212018,"line_start":418,"line_end":418,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":212023,"byte_end":212026,"line_start":419,"line_end":419,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if the underlying SQLite call fails. The specific","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":212031,"byte_end":212102,"line_start":420,"line_end":420,"column_start":5,"column_end":76}},{"value":"/ error returned if transactions are nested is currently unspecified.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":212107,"byte_end":212178,"line_start":421,"line_end":421,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":619},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":213270,"byte_end":213279,"line_start":451,"line_end":451,"column_start":12,"column_end":21},"name":"savepoint","qualname":"<Connection>::savepoint","value":"pub fn savepoint(&mut Self) -> Result<Savepoint>","parent":null,"children":[],"decl_id":null,"docs":" Begin a new savepoint with the default behavior (DEFERRED).","sig":null,"attributes":[{"value":"/ Begin a new savepoint with the default behavior (DEFERRED).","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":212331,"byte_end":212394,"line_start":426,"line_end":426,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":212399,"byte_end":212402,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ The savepoint defaults to rolling back when it is dropped. If you want","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":212407,"byte_end":212481,"line_start":428,"line_end":428,"column_start":5,"column_end":79}},{"value":"/ the savepoint to commit, you must call `commit` or","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":212486,"byte_end":212540,"line_start":429,"line_end":429,"column_start":5,"column_end":59}},{"value":"/ `set_drop_behavior(DropBehavior::Commit)`.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":212545,"byte_end":212591,"line_start":430,"line_end":430,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":212596,"byte_end":212599,"line_start":431,"line_end":431,"column_start":5,"column_end":8}},{"value":"/ ## Example","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":212604,"byte_end":212618,"line_start":432,"line_end":432,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":212623,"byte_end":212626,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":212631,"byte_end":212649,"line_start":434,"line_end":434,"column_start":5,"column_end":23}},{"value":"/ # use rusqlite::{Connection, Result};","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":212654,"byte_end":212695,"line_start":435,"line_end":435,"column_start":5,"column_end":46}},{"value":"/ # fn do_queries_part_1(_conn: &Connection) -> Result<()> { Ok(()) }","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":212700,"byte_end":212771,"line_start":436,"line_end":436,"column_start":5,"column_end":76}},{"value":"/ # fn do_queries_part_2(_conn: &Connection) -> Result<()> { Ok(()) }","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":212776,"byte_end":212847,"line_start":437,"line_end":437,"column_start":5,"column_end":76}},{"value":"/ fn perform_queries(conn: &mut Connection) -> Result<()> {","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":212852,"byte_end":212913,"line_start":438,"line_end":438,"column_start":5,"column_end":66}},{"value":"/     let sp = conn.savepoint()?;","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":212918,"byte_end":212953,"line_start":439,"line_end":439,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":212958,"byte_end":212961,"line_start":440,"line_end":440,"column_start":5,"column_end":8}},{"value":"/     do_queries_part_1(&sp)?; // sp causes rollback if this fails","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":212966,"byte_end":213034,"line_start":441,"line_end":441,"column_start":5,"column_end":73}},{"value":"/     do_queries_part_2(&sp)?; // sp causes rollback if this fails","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":213039,"byte_end":213107,"line_start":442,"line_end":442,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":213112,"byte_end":213115,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/     sp.commit()","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":213120,"byte_end":213139,"line_start":444,"line_end":444,"column_start":5,"column_end":24}},{"value":"/ }","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":213144,"byte_end":213149,"line_start":445,"line_end":445,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":213154,"byte_end":213161,"line_start":446,"line_end":446,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":213166,"byte_end":213169,"line_start":447,"line_end":447,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":213174,"byte_end":213187,"line_start":448,"line_end":448,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":213192,"byte_end":213195,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if the underlying SQLite call fails.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":213200,"byte_end":213258,"line_start":450,"line_end":450,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":620},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":213548,"byte_end":213567,"line_start":462,"line_end":462,"column_start":12,"column_end":31},"name":"savepoint_with_name","qualname":"<Connection>::savepoint_with_name","value":"pub fn savepoint_with_name<T: Into<String>>(&mut Self, T) -> Result<Savepoint>","parent":null,"children":[],"decl_id":null,"docs":" Begin a new savepoint with a specified name.","sig":null,"attributes":[{"value":"/ Begin a new savepoint with a specified name.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":213358,"byte_end":213406,"line_start":455,"line_end":455,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":213411,"byte_end":213414,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/ See `savepoint`.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":213419,"byte_end":213439,"line_start":457,"line_end":457,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":213444,"byte_end":213447,"line_start":458,"line_end":458,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":213452,"byte_end":213465,"line_start":459,"line_end":459,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":213470,"byte_end":213473,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if the underlying SQLite call fails.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":213478,"byte_end":213536,"line_start":461,"line_end":461,"column_start":5,"column_end":63}}]},{"kind":"Mod","id":{"krate":0,"index":622},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"types","qualname":"::types","value":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/mod.rs","parent":null,"children":[{"krate":0,"index":623},{"krate":0,"index":624},{"krate":0,"index":625},{"krate":0,"index":626},{"krate":0,"index":627},{"krate":0,"index":628},{"krate":0,"index":629},{"krate":0,"index":630},{"krate":0,"index":631},{"krate":0,"index":632},{"krate":0,"index":633},{"krate":0,"index":676},{"krate":0,"index":721},{"krate":0,"index":745},{"krate":0,"index":1419},{"krate":0,"index":1423},{"krate":0,"index":1421},{"krate":0,"index":1424},{"krate":0,"index":1440},{"krate":0,"index":1438},{"krate":0,"index":1435},{"krate":0,"index":1436},{"krate":0,"index":776}],"decl_id":null,"docs":" Traits dealing with SQLite data types.","sig":null,"attributes":[{"value":"/ Traits dealing with SQLite data types.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/mod.rs","byte_start":220492,"byte_end":220534,"line_start":1,"line_end":1,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/mod.rs","byte_start":220535,"byte_end":220538,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ SQLite uses a [dynamic type system](https://www.sqlite.org/datatype3.html). Implementations of","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/mod.rs","byte_start":220539,"byte_end":220637,"line_start":3,"line_end":3,"column_start":1,"column_end":99}},{"value":"/ the `ToSql` and `FromSql` traits are provided for the basic types that","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/mod.rs","byte_start":220638,"byte_end":220712,"line_start":4,"line_end":4,"column_start":1,"column_end":75}},{"value":"/ SQLite provides methods for:","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/mod.rs","byte_start":220713,"byte_end":220745,"line_start":5,"line_end":5,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/mod.rs","byte_start":220746,"byte_end":220749,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ * Integers (`i32` and `i64`; SQLite uses `i64` internally, so getting an","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/mod.rs","byte_start":220750,"byte_end":220826,"line_start":7,"line_end":7,"column_start":1,"column_end":77}},{"value":"/ `i32` will truncate   if the value is too large or too small).","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/mod.rs","byte_start":220827,"byte_end":220893,"line_start":8,"line_end":8,"column_start":1,"column_end":67}},{"value":"/ * Reals (`f64`)","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/mod.rs","byte_start":220894,"byte_end":220913,"line_start":9,"line_end":9,"column_start":1,"column_end":20}},{"value":"/ * Strings (`String` and `&str`)","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/mod.rs","byte_start":220914,"byte_end":220949,"line_start":10,"line_end":10,"column_start":1,"column_end":36}},{"value":"/ * Blobs (`Vec<u8>` and `&[u8]`)","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/mod.rs","byte_start":220950,"byte_end":220985,"line_start":11,"line_end":11,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/mod.rs","byte_start":220986,"byte_end":220989,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ Additionally, if the `time` feature is enabled, implementations are","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/mod.rs","byte_start":220990,"byte_end":221061,"line_start":13,"line_end":13,"column_start":1,"column_end":72}},{"value":"/ provided for `time::OffsetDateTime` that use the RFC 3339 date/time format,","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/mod.rs","byte_start":221062,"byte_end":221141,"line_start":14,"line_end":14,"column_start":1,"column_end":80}},{"value":"/ `\"%Y-%m-%dT%H:%M:%S.%fZ\"`, to store time values as strings.  These values","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/mod.rs","byte_start":221142,"byte_end":221219,"line_start":15,"line_end":15,"column_start":1,"column_end":78}},{"value":"/ can be parsed by SQLite's builtin","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/mod.rs","byte_start":221220,"byte_end":221257,"line_start":16,"line_end":16,"column_start":1,"column_end":38}},{"value":"/ [datetime](https://www.sqlite.org/lang_datefunc.html) functions.  If you","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/mod.rs","byte_start":221258,"byte_end":221334,"line_start":17,"line_end":17,"column_start":1,"column_end":77}},{"value":"/ want different storage for datetimes, you can use a newtype.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/mod.rs","byte_start":221335,"byte_end":221399,"line_start":18,"line_end":18,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/mod.rs","byte_start":221400,"byte_end":221403,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ `ToSql` and `FromSql` are also implemented for `Option<T>` where `T`","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/mod.rs","byte_start":222076,"byte_end":222148,"line_start":49,"line_end":49,"column_start":1,"column_end":73}},{"value":"/ implements `ToSql` or `FromSql` for the cases where you want to know if a","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/mod.rs","byte_start":222149,"byte_end":222226,"line_start":50,"line_end":50,"column_start":1,"column_end":78}},{"value":"/ value was NULL (which gets translated to `None`).","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/mod.rs","byte_start":222227,"byte_end":222280,"line_start":51,"line_end":51,"column_start":1,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1258},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/from_sql.rs","byte_start":232228,"byte_end":232239,"line_start":11,"line_end":11,"column_start":5,"column_end":16},"name":"InvalidType","qualname":"::types::from_sql::FromSqlError::InvalidType","value":"FromSqlError::InvalidType","parent":{"krate":0,"index":1257},"children":[],"decl_id":null,"docs":" Error when an SQLite value is requested, but the type of the result\n cannot be converted to the requested Rust type.\n","sig":null,"attributes":[{"value":"/ Error when an SQLite value is requested, but the type of the result","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/from_sql.rs","byte_start":232096,"byte_end":232167,"line_start":9,"line_end":9,"column_start":5,"column_end":76}},{"value":"/ cannot be converted to the requested Rust type.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/from_sql.rs","byte_start":232172,"byte_end":232223,"line_start":10,"line_end":10,"column_start":5,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1260},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/from_sql.rs","byte_start":232348,"byte_end":232358,"line_start":15,"line_end":15,"column_start":5,"column_end":15},"name":"OutOfRange","qualname":"::types::from_sql::FromSqlError::OutOfRange","value":"FromSqlError::OutOfRange(i64)","parent":{"krate":0,"index":1257},"children":[],"decl_id":null,"docs":" Error when the i64 value returned by SQLite cannot be stored into the\n requested type.\n","sig":null,"attributes":[{"value":"/ Error when the i64 value returned by SQLite cannot be stored into the","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/from_sql.rs","byte_start":232246,"byte_end":232319,"line_start":13,"line_end":13,"column_start":5,"column_end":78}},{"value":"/ requested type.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/from_sql.rs","byte_start":232324,"byte_end":232343,"line_start":14,"line_end":14,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1263},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/from_sql.rs","byte_start":232907,"byte_end":232912,"line_start":29,"line_end":29,"column_start":5,"column_end":10},"name":"Other","qualname":"::types::from_sql::FromSqlError::Other","value":"FromSqlError::Other(Box<Error + Send + Sync + 'static>)","parent":{"krate":0,"index":1257},"children":[],"decl_id":null,"docs":" An error case available for implementors of the `FromSql` trait.\n","sig":null,"attributes":[{"value":"/ An error case available for implementors of the `FromSql` trait.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/from_sql.rs","byte_start":232834,"byte_end":232902,"line_start":28,"line_end":28,"column_start":5,"column_end":73}}]},{"kind":"Enum","id":{"krate":0,"index":1257},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/from_sql.rs","byte_start":232077,"byte_end":232089,"line_start":8,"line_end":8,"column_start":10,"column_end":22},"name":"FromSqlError","qualname":"::types::from_sql::FromSqlError","value":"pub enum FromSqlError {\n\n    /// Error when an SQLite value is requested, but the type of the result\n    /// cannot be converted to the requested Rust type.\n    InvalidType,\n\n    /// Error when the i64 value returned by SQLite cannot be stored into the\n    /// requested type.\n    OutOfRange(i64),\n\n    /// An error case available for implementors of the `FromSql` trait.\n    Other(Box<Error + Send + Sync + 'static>),\n}","parent":null,"children":[{"krate":0,"index":1258},{"krate":0,"index":1260},{"krate":0,"index":1263}],"decl_id":null,"docs":" Enum listing possible errors from `FromSql` trait.\n","sig":null,"attributes":[{"value":"/ Enum listing possible errors from `FromSql` trait.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/from_sql.rs","byte_start":231978,"byte_end":232032,"line_start":5,"line_end":5,"column_start":1,"column_end":55}},{"value":"non_exhaustive","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/from_sql.rs","byte_start":232050,"byte_end":232067,"line_start":7,"line_end":7,"column_start":1,"column_end":18}}]},{"kind":"Type","id":{"krate":0,"index":645},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/from_sql.rs","byte_start":234539,"byte_end":234552,"line_start":75,"line_end":75,"column_start":10,"column_end":23},"name":"FromSqlResult","qualname":"::types::from_sql::FromSqlResult","value":"Result<T, FromSqlError>","parent":null,"children":[],"decl_id":null,"docs":" Result type for implementors of the `FromSql` trait.\n","sig":null,"attributes":[{"value":"/ Result type for implementors of the `FromSql` trait.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/from_sql.rs","byte_start":234473,"byte_end":234529,"line_start":74,"line_end":74,"column_start":1,"column_end":57}}]},{"kind":"Trait","id":{"krate":0,"index":647},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/from_sql.rs","byte_start":235269,"byte_end":235276,"line_start":88,"line_end":88,"column_start":11,"column_end":18},"name":"FromSql","qualname":"::types::from_sql::FromSql","value":"FromSql: Sized","parent":null,"children":[{"krate":0,"index":648}],"decl_id":null,"docs":" A trait for types that can be created from a SQLite value.","sig":null,"attributes":[{"value":"/ A trait for types that can be created from a SQLite value.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/from_sql.rs","byte_start":234584,"byte_end":234646,"line_start":77,"line_end":77,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/from_sql.rs","byte_start":234647,"byte_end":234650,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ Note that `FromSql` and `ToSql` are defined for most integral types, but","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/from_sql.rs","byte_start":234651,"byte_end":234727,"line_start":79,"line_end":79,"column_start":1,"column_end":77}},{"value":"/ not `u64` or `usize`. This is intentional; SQLite returns integers as","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/from_sql.rs","byte_start":234728,"byte_end":234801,"line_start":80,"line_end":80,"column_start":1,"column_end":74}},{"value":"/ signed 64-bit values, which cannot fully represent the range of these","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/from_sql.rs","byte_start":234802,"byte_end":234875,"line_start":81,"line_end":81,"column_start":1,"column_end":74}},{"value":"/ types. Rusqlite would have to","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/from_sql.rs","byte_start":234876,"byte_end":234909,"line_start":82,"line_end":82,"column_start":1,"column_end":34}},{"value":"/ decide how to handle negative values: return an error or reinterpret as a","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/from_sql.rs","byte_start":234910,"byte_end":234987,"line_start":83,"line_end":83,"column_start":1,"column_end":78}},{"value":"/ very large postive numbers, neither of which","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/from_sql.rs","byte_start":234988,"byte_end":235036,"line_start":84,"line_end":84,"column_start":1,"column_end":49}},{"value":"/ is guaranteed to be correct for everyone. Callers can work around this by","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/from_sql.rs","byte_start":235037,"byte_end":235114,"line_start":85,"line_end":85,"column_start":1,"column_end":78}},{"value":"/ fetching values as i64 and then doing the interpretation themselves or by","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/from_sql.rs","byte_start":235115,"byte_end":235192,"line_start":86,"line_end":86,"column_start":1,"column_end":78}},{"value":"/ defining a newtype and implementing `FromSql`/`ToSql` for it.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/from_sql.rs","byte_start":235193,"byte_end":235258,"line_start":87,"line_end":87,"column_start":1,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":648},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/from_sql.rs","byte_start":235340,"byte_end":235353,"line_start":90,"line_end":90,"column_start":8,"column_end":21},"name":"column_result","qualname":"::types::from_sql::FromSql::column_result","value":"pub fn column_result(ValueRef) -> FromSqlResult<Self>","parent":{"krate":0,"index":647},"children":[],"decl_id":null,"docs":" Converts SQLite value into Rust value.\n","sig":null,"attributes":[{"value":"/ Converts SQLite value into Rust value.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/from_sql.rs","byte_start":235290,"byte_end":235332,"line_start":89,"line_end":89,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1288},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/to_sql.rs","byte_start":240874,"byte_end":240882,"line_start":13,"line_end":13,"column_start":5,"column_end":13},"name":"Borrowed","qualname":"::types::to_sql::ToSqlOutput::Borrowed","value":"ToSqlOutput::Borrowed(ValueRef)","parent":{"krate":0,"index":1286},"children":[],"decl_id":null,"docs":" A borrowed SQLite-representable value.\n","sig":null,"attributes":[{"value":"/ A borrowed SQLite-representable value.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/to_sql.rs","byte_start":240827,"byte_end":240869,"line_start":12,"line_end":12,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1291},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/to_sql.rs","byte_start":240948,"byte_end":240953,"line_start":16,"line_end":16,"column_start":5,"column_end":10},"name":"Owned","qualname":"::types::to_sql::ToSqlOutput::Owned","value":"ToSqlOutput::Owned(Value)","parent":{"krate":0,"index":1286},"children":[],"decl_id":null,"docs":" An owned SQLite-representable value.\n","sig":null,"attributes":[{"value":"/ An owned SQLite-representable value.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/to_sql.rs","byte_start":240903,"byte_end":240943,"line_start":15,"line_end":15,"column_start":5,"column_end":45}}]},{"kind":"Enum","id":{"krate":0,"index":1286},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/to_sql.rs","byte_start":240805,"byte_end":240816,"line_start":11,"line_end":11,"column_start":10,"column_end":21},"name":"ToSqlOutput","qualname":"::types::to_sql::ToSqlOutput","value":"pub enum ToSqlOutput<'a> {\n\n    /// A borrowed SQLite-representable value.\n    Borrowed(ValueRef),\n\n    /// An owned SQLite-representable value.\n    Owned(Value),\n}","parent":null,"children":[{"krate":0,"index":1288},{"krate":0,"index":1291}],"decl_id":null,"docs":" `ToSqlOutput` represents the possible output types for implementors of the\n `ToSql` trait.\n","sig":null,"attributes":[{"value":"/ `ToSqlOutput` represents the possible output types for implementors of the","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/to_sql.rs","byte_start":240645,"byte_end":240723,"line_start":7,"line_end":7,"column_start":1,"column_end":79}},{"value":"/ `ToSql` trait.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/to_sql.rs","byte_start":240724,"byte_end":240742,"line_start":8,"line_end":8,"column_start":1,"column_end":19}},{"value":"non_exhaustive","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/to_sql.rs","byte_start":240778,"byte_end":240795,"line_start":10,"line_end":10,"column_start":1,"column_end":18}}]},{"kind":"Trait","id":{"krate":0,"index":690},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/to_sql.rs","byte_start":243037,"byte_end":243042,"line_start":89,"line_end":89,"column_start":11,"column_end":16},"name":"ToSql","qualname":"::types::to_sql::ToSql","value":"ToSql","parent":null,"children":[{"krate":0,"index":691}],"decl_id":null,"docs":" A trait for types that can be converted into SQLite values.\n","sig":null,"attributes":[{"value":"/ A trait for types that can be converted into SQLite values.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/to_sql.rs","byte_start":242963,"byte_end":243026,"line_start":88,"line_end":88,"column_start":1,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":691},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/to_sql.rs","byte_start":243096,"byte_end":243102,"line_start":91,"line_end":91,"column_start":8,"column_end":14},"name":"to_sql","qualname":"::types::to_sql::ToSql::to_sql","value":"pub fn to_sql(&Self) -> Result<ToSqlOutput>","parent":{"krate":0,"index":690},"children":[],"decl_id":null,"docs":" Converts Rust value to SQLite value\n","sig":null,"attributes":[{"value":"/ Converts Rust value to SQLite value","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/to_sql.rs","byte_start":243049,"byte_end":243088,"line_start":90,"line_end":90,"column_start":5,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1355},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/value.rs","byte_start":250682,"byte_end":250686,"line_start":10,"line_end":10,"column_start":5,"column_end":9},"name":"Null","qualname":"::types::value::Value::Null","value":"Value::Null","parent":{"krate":0,"index":1354},"children":[],"decl_id":null,"docs":" The value is a `NULL` value.\n","sig":null,"attributes":[{"value":"/ The value is a `NULL` value.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/value.rs","byte_start":250645,"byte_end":250677,"line_start":9,"line_end":9,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1357},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/value.rs","byte_start":250731,"byte_end":250738,"line_start":12,"line_end":12,"column_start":5,"column_end":12},"name":"Integer","qualname":"::types::value::Value::Integer","value":"Value::Integer(i64)","parent":{"krate":0,"index":1354},"children":[],"decl_id":null,"docs":" The value is a signed integer.\n","sig":null,"attributes":[{"value":"/ The value is a signed integer.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/value.rs","byte_start":250692,"byte_end":250726,"line_start":11,"line_end":11,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1360},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/value.rs","byte_start":250795,"byte_end":250799,"line_start":14,"line_end":14,"column_start":5,"column_end":9},"name":"Real","qualname":"::types::value::Value::Real","value":"Value::Real(f64)","parent":{"krate":0,"index":1354},"children":[],"decl_id":null,"docs":" The value is a floating point number.\n","sig":null,"attributes":[{"value":"/ The value is a floating point number.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/value.rs","byte_start":250749,"byte_end":250790,"line_start":13,"line_end":13,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1363},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/value.rs","byte_start":250846,"byte_end":250850,"line_start":16,"line_end":16,"column_start":5,"column_end":9},"name":"Text","qualname":"::types::value::Value::Text","value":"Value::Text(String)","parent":{"krate":0,"index":1354},"children":[],"decl_id":null,"docs":" The value is a text string.\n","sig":null,"attributes":[{"value":"/ The value is a text string.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/value.rs","byte_start":250810,"byte_end":250841,"line_start":15,"line_end":15,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1366},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/value.rs","byte_start":250900,"byte_end":250904,"line_start":18,"line_end":18,"column_start":5,"column_end":9},"name":"Blob","qualname":"::types::value::Value::Blob","value":"Value::Blob(Vec<u8>)","parent":{"krate":0,"index":1354},"children":[],"decl_id":null,"docs":" The value is a blob of data\n","sig":null,"attributes":[{"value":"/ The value is a blob of data","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/value.rs","byte_start":250864,"byte_end":250895,"line_start":17,"line_end":17,"column_start":5,"column_end":36}}]},{"kind":"Enum","id":{"krate":0,"index":1354},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/value.rs","byte_start":250633,"byte_end":250638,"line_start":8,"line_end":8,"column_start":10,"column_end":15},"name":"Value","qualname":"::types::value::Value","value":"pub enum Value {\n\n    /// The value is a `NULL` value.\n    Null,\n\n    /// The value is a signed integer.\n    Integer(i64),\n\n    /// The value is a floating point number.\n    Real(f64),\n\n    /// The value is a text string.\n    Text(String),\n\n    /// The value is a blob of data\n    Blob(Vec<u8>),\n}","parent":null,"children":[{"krate":0,"index":1355},{"krate":0,"index":1357},{"krate":0,"index":1360},{"krate":0,"index":1363},{"krate":0,"index":1366}],"decl_id":null,"docs":" Owning [dynamic type value](http://sqlite.org/datatype3.html). Value's type is typically\n dictated by SQLite (not by the caller).","sig":null,"attributes":[{"value":"/ Owning [dynamic type value](http://sqlite.org/datatype3.html). Value's type is typically","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/value.rs","byte_start":250370,"byte_end":250462,"line_start":3,"line_end":3,"column_start":1,"column_end":93}},{"value":"/ dictated by SQLite (not by the caller).","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/value.rs","byte_start":250463,"byte_end":250506,"line_start":4,"line_end":4,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/value.rs","byte_start":250507,"byte_end":250510,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ See [`ValueRef`](enum.ValueRef.html) for a non-owning dynamic type value.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/value.rs","byte_start":250511,"byte_end":250588,"line_start":6,"line_end":6,"column_start":1,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":744},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/value.rs","byte_start":252713,"byte_end":252722,"line_start":113,"line_end":113,"column_start":12,"column_end":21},"name":"data_type","qualname":"<Value>::data_type","value":"pub fn data_type(&Self) -> Type","parent":null,"children":[],"decl_id":null,"docs":" Returns SQLite fundamental datatype.\n","sig":null,"attributes":[{"value":"/ Returns SQLite fundamental datatype.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/value.rs","byte_start":252661,"byte_end":252701,"line_start":112,"line_end":112,"column_start":5,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1391},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/value_ref.rs","byte_start":253386,"byte_end":253390,"line_start":11,"line_end":11,"column_start":5,"column_end":9},"name":"Null","qualname":"::types::value_ref::ValueRef::Null","value":"ValueRef::Null","parent":{"krate":0,"index":1389},"children":[],"decl_id":null,"docs":" The value is a `NULL` value.\n","sig":null,"attributes":[{"value":"/ The value is a `NULL` value.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/value_ref.rs","byte_start":253349,"byte_end":253381,"line_start":10,"line_end":10,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1393},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/value_ref.rs","byte_start":253435,"byte_end":253442,"line_start":13,"line_end":13,"column_start":5,"column_end":12},"name":"Integer","qualname":"::types::value_ref::ValueRef::Integer","value":"ValueRef::Integer(i64)","parent":{"krate":0,"index":1389},"children":[],"decl_id":null,"docs":" The value is a signed integer.\n","sig":null,"attributes":[{"value":"/ The value is a signed integer.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/value_ref.rs","byte_start":253396,"byte_end":253430,"line_start":12,"line_end":12,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1396},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/value_ref.rs","byte_start":253499,"byte_end":253503,"line_start":15,"line_end":15,"column_start":5,"column_end":9},"name":"Real","qualname":"::types::value_ref::ValueRef::Real","value":"ValueRef::Real(f64)","parent":{"krate":0,"index":1389},"children":[],"decl_id":null,"docs":" The value is a floating point number.\n","sig":null,"attributes":[{"value":"/ The value is a floating point number.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/value_ref.rs","byte_start":253453,"byte_end":253494,"line_start":14,"line_end":14,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1399},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/value_ref.rs","byte_start":253550,"byte_end":253554,"line_start":17,"line_end":17,"column_start":5,"column_end":9},"name":"Text","qualname":"::types::value_ref::ValueRef::Text","value":"ValueRef::Text(&'a [u8])","parent":{"krate":0,"index":1389},"children":[],"decl_id":null,"docs":" The value is a text string.\n","sig":null,"attributes":[{"value":"/ The value is a text string.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/value_ref.rs","byte_start":253514,"byte_end":253545,"line_start":16,"line_end":16,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1402},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/value_ref.rs","byte_start":253606,"byte_end":253610,"line_start":19,"line_end":19,"column_start":5,"column_end":9},"name":"Blob","qualname":"::types::value_ref::ValueRef::Blob","value":"ValueRef::Blob(&'a [u8])","parent":{"krate":0,"index":1389},"children":[],"decl_id":null,"docs":" The value is a blob of data\n","sig":null,"attributes":[{"value":"/ The value is a blob of data","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/value_ref.rs","byte_start":253570,"byte_end":253601,"line_start":18,"line_end":18,"column_start":5,"column_end":36}}]},{"kind":"Enum","id":{"krate":0,"index":1389},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/value_ref.rs","byte_start":253330,"byte_end":253338,"line_start":9,"line_end":9,"column_start":10,"column_end":18},"name":"ValueRef","qualname":"::types::value_ref::ValueRef","value":"pub enum ValueRef<'a> {\n\n    /// The value is a `NULL` value.\n    Null,\n\n    /// The value is a signed integer.\n    Integer(i64),\n\n    /// The value is a floating point number.\n    Real(f64),\n\n    /// The value is a text string.\n    Text(&'a [u8]),\n\n    /// The value is a blob of data\n    Blob(&'a [u8]),\n}","parent":null,"children":[{"krate":0,"index":1391},{"krate":0,"index":1393},{"krate":0,"index":1396},{"krate":0,"index":1399},{"krate":0,"index":1402}],"decl_id":null,"docs":" A non-owning [dynamic type value](http://sqlite.org/datatype3.html). Typically the\n memory backing this value is owned by SQLite.","sig":null,"attributes":[{"value":"/ A non-owning [dynamic type value](http://sqlite.org/datatype3.html). Typically the","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/value_ref.rs","byte_start":253070,"byte_end":253156,"line_start":4,"line_end":4,"column_start":1,"column_end":87}},{"value":"/ memory backing this value is owned by SQLite.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/value_ref.rs","byte_start":253157,"byte_end":253206,"line_start":5,"line_end":5,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/value_ref.rs","byte_start":253207,"byte_end":253210,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ See [`Value`](enum.Value.html) for an owning dynamic type value.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/value_ref.rs","byte_start":253211,"byte_end":253279,"line_start":7,"line_end":7,"column_start":1,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":753},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/value_ref.rs","byte_start":253701,"byte_end":253710,"line_start":24,"line_end":24,"column_start":12,"column_end":21},"name":"data_type","qualname":"<ValueRef>::data_type","value":"pub fn data_type(&Self) -> Type","parent":null,"children":[],"decl_id":null,"docs":" Returns SQLite fundamental datatype.\n","sig":null,"attributes":[{"value":"/ Returns SQLite fundamental datatype.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/value_ref.rs","byte_start":253649,"byte_end":253689,"line_start":23,"line_end":23,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":756},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/value_ref.rs","byte_start":254157,"byte_end":254163,"line_start":38,"line_end":38,"column_start":12,"column_end":18},"name":"as_i64","qualname":"<ValueRef>::as_i64","value":"pub fn as_i64(&Self) -> FromSqlResult<i64>","parent":null,"children":[],"decl_id":null,"docs":" If `self` is case `Integer`, returns the integral value. Otherwise,\n returns `Err(Error::InvalidColumnType)`.\n","sig":null,"attributes":[{"value":"/ If `self` is case `Integer`, returns the integral value. Otherwise,","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/value_ref.rs","byte_start":254025,"byte_end":254096,"line_start":36,"line_end":36,"column_start":5,"column_end":76}},{"value":"/ returns `Err(Error::InvalidColumnType)`.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/value_ref.rs","byte_start":254101,"byte_end":254145,"line_start":37,"line_end":37,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":757},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/value_ref.rs","byte_start":254465,"byte_end":254471,"line_start":47,"line_end":47,"column_start":12,"column_end":18},"name":"as_f64","qualname":"<ValueRef>::as_f64","value":"pub fn as_f64(&Self) -> FromSqlResult<f64>","parent":null,"children":[],"decl_id":null,"docs":" If `self` is case `Real`, returns the floating point value. Otherwise,\n returns `Err(Error::InvalidColumnType)`.\n","sig":null,"attributes":[{"value":"/ If `self` is case `Real`, returns the floating point value. Otherwise,","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/value_ref.rs","byte_start":254330,"byte_end":254404,"line_start":45,"line_end":45,"column_start":5,"column_end":79}},{"value":"/ returns `Err(Error::InvalidColumnType)`.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/value_ref.rs","byte_start":254409,"byte_end":254453,"line_start":46,"line_end":46,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":758},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/value_ref.rs","byte_start":254762,"byte_end":254768,"line_start":56,"line_end":56,"column_start":12,"column_end":18},"name":"as_str","qualname":"<ValueRef>::as_str","value":"pub fn as_str(&Self) -> FromSqlResult<&'a str>","parent":null,"children":[],"decl_id":null,"docs":" If `self` is case `Text`, returns the string value. Otherwise, returns\n `Err(Error::InvalidColumnType)`.\n","sig":null,"attributes":[{"value":"/ If `self` is case `Text`, returns the string value. Otherwise, returns","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/value_ref.rs","byte_start":254635,"byte_end":254709,"line_start":54,"line_end":54,"column_start":5,"column_end":79}},{"value":"/ `Err(Error::InvalidColumnType)`.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/value_ref.rs","byte_start":254714,"byte_end":254750,"line_start":55,"line_end":55,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":760},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/value_ref.rs","byte_start":255155,"byte_end":255162,"line_start":67,"line_end":67,"column_start":12,"column_end":19},"name":"as_blob","qualname":"<ValueRef>::as_blob","value":"pub fn as_blob(&Self) -> FromSqlResult<&'a [u8]>","parent":null,"children":[],"decl_id":null,"docs":" If `self` is case `Blob`, returns the byte slice. Otherwise, returns\n `Err(Error::InvalidColumnType)`.\n","sig":null,"attributes":[{"value":"/ If `self` is case `Blob`, returns the byte slice. Otherwise, returns","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/value_ref.rs","byte_start":255030,"byte_end":255102,"line_start":65,"line_end":65,"column_start":5,"column_end":77}},{"value":"/ `Err(Error::InvalidColumnType)`.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/value_ref.rs","byte_start":255107,"byte_end":255143,"line_start":66,"line_end":66,"column_start":5,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":1419},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/mod.rs","byte_start":223048,"byte_end":223052,"line_start":86,"line_end":86,"column_start":12,"column_end":16},"name":"Null","qualname":"::types::Null","value":"","parent":null,"children":[],"decl_id":null,"docs":" Empty struct that can be used to fill in a query parameter as `NULL`.","sig":null,"attributes":[{"value":"/ Empty struct that can be used to fill in a query parameter as `NULL`.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/mod.rs","byte_start":222676,"byte_end":222749,"line_start":73,"line_end":73,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/mod.rs","byte_start":222750,"byte_end":222753,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ ## Example","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/mod.rs","byte_start":222754,"byte_end":222768,"line_start":75,"line_end":75,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/mod.rs","byte_start":222769,"byte_end":222772,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/mod.rs","byte_start":222773,"byte_end":222791,"line_start":77,"line_end":77,"column_start":1,"column_end":19}},{"value":"/ # use rusqlite::{Connection, Result};","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/mod.rs","byte_start":222792,"byte_end":222833,"line_start":78,"line_end":78,"column_start":1,"column_end":42}},{"value":"/ # use rusqlite::types::{Null};","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/mod.rs","byte_start":222834,"byte_end":222868,"line_start":79,"line_end":79,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/mod.rs","byte_start":222869,"byte_end":222872,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ fn insert_null(conn: &Connection) -> Result<usize> {","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/mod.rs","byte_start":222873,"byte_end":222929,"line_start":81,"line_end":81,"column_start":1,"column_end":57}},{"value":"/     conn.execute(\"INSERT INTO people (name) VALUES (?)\", &[Null])","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/mod.rs","byte_start":222930,"byte_end":222999,"line_start":82,"line_end":82,"column_start":1,"column_end":70}},{"value":"/ }","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/mod.rs","byte_start":223000,"byte_end":223005,"line_start":83,"line_end":83,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/mod.rs","byte_start":223006,"byte_end":223013,"line_start":84,"line_end":84,"column_start":1,"column_end":8}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1425},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/mod.rs","byte_start":223217,"byte_end":223221,"line_start":93,"line_end":93,"column_start":5,"column_end":9},"name":"Null","qualname":"::types::Type::Null","value":"Type::Null","parent":{"krate":0,"index":1424},"children":[],"decl_id":null,"docs":" NULL\n","sig":null,"attributes":[{"value":"/ NULL","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/mod.rs","byte_start":223204,"byte_end":223212,"line_start":92,"line_end":92,"column_start":5,"column_end":13}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1427},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/mod.rs","byte_start":223257,"byte_end":223264,"line_start":95,"line_end":95,"column_start":5,"column_end":12},"name":"Integer","qualname":"::types::Type::Integer","value":"Type::Integer","parent":{"krate":0,"index":1424},"children":[],"decl_id":null,"docs":" 64-bit signed integer\n","sig":null,"attributes":[{"value":"/ 64-bit signed integer","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/mod.rs","byte_start":223227,"byte_end":223252,"line_start":94,"line_end":94,"column_start":5,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1429},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/mod.rs","byte_start":223312,"byte_end":223316,"line_start":97,"line_end":97,"column_start":5,"column_end":9},"name":"Real","qualname":"::types::Type::Real","value":"Type::Real","parent":{"krate":0,"index":1424},"children":[],"decl_id":null,"docs":" 64-bit IEEE floating point number\n","sig":null,"attributes":[{"value":"/ 64-bit IEEE floating point number","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/mod.rs","byte_start":223270,"byte_end":223307,"line_start":96,"line_end":96,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1431},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/mod.rs","byte_start":223337,"byte_end":223341,"line_start":99,"line_end":99,"column_start":5,"column_end":9},"name":"Text","qualname":"::types::Type::Text","value":"Type::Text","parent":{"krate":0,"index":1424},"children":[],"decl_id":null,"docs":" String\n","sig":null,"attributes":[{"value":"/ String","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/mod.rs","byte_start":223322,"byte_end":223332,"line_start":98,"line_end":98,"column_start":5,"column_end":15}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1433},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/mod.rs","byte_start":223360,"byte_end":223364,"line_start":101,"line_end":101,"column_start":5,"column_end":9},"name":"Blob","qualname":"::types::Type::Blob","value":"Type::Blob","parent":{"krate":0,"index":1424},"children":[],"decl_id":null,"docs":" BLOB\n","sig":null,"attributes":[{"value":"/ BLOB","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/mod.rs","byte_start":223347,"byte_end":223355,"line_start":100,"line_end":100,"column_start":5,"column_end":13}}]},{"kind":"Enum","id":{"krate":0,"index":1424},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/mod.rs","byte_start":223193,"byte_end":223197,"line_start":91,"line_end":91,"column_start":10,"column_end":14},"name":"Type","qualname":"::types::Type","value":"pub enum Type {\n\n    /// NULL\n    Null,\n\n    /// 64-bit signed integer\n    Integer,\n\n    /// 64-bit IEEE floating point number\n    Real,\n\n    /// String\n    Text,\n\n    /// BLOB\n    Blob,\n}","parent":null,"children":[{"krate":0,"index":1425},{"krate":0,"index":1427},{"krate":0,"index":1429},{"krate":0,"index":1431},{"krate":0,"index":1433}],"decl_id":null,"docs":" SQLite data types.\n See [Fundamental Datatypes](https://sqlite.org/c3ref/c_blob.html).\n","sig":null,"attributes":[{"value":"/ SQLite data types.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/mod.rs","byte_start":223055,"byte_end":223077,"line_start":88,"line_end":88,"column_start":1,"column_end":23}},{"value":"/ See [Fundamental Datatypes](https://sqlite.org/c3ref/c_blob.html).","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/mod.rs","byte_start":223078,"byte_end":223148,"line_start":89,"line_end":89,"column_start":1,"column_end":71}}]},{"kind":"Function","id":{"krate":0,"index":786},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/version.rs","byte_start":263251,"byte_end":263265,"line_start":8,"line_end":8,"column_start":8,"column_end":22},"name":"version_number","qualname":"::version::version_number","value":"pub fn version_number() -> i32","parent":null,"children":[],"decl_id":null,"docs":" Returns the SQLite version as an integer; e.g., `3016002` for version\n 3.16.2.","sig":null,"attributes":[{"value":"/ Returns the SQLite version as an integer; e.g., `3016002` for version","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/version.rs","byte_start":263067,"byte_end":263140,"line_start":4,"line_end":4,"column_start":1,"column_end":74}},{"value":"/ 3.16.2.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/version.rs","byte_start":263141,"byte_end":263152,"line_start":5,"line_end":5,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/version.rs","byte_start":263153,"byte_end":263156,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ See [`sqlite3_libversion_number()`](https://www.sqlite.org/c3ref/libversion.html).","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/version.rs","byte_start":263157,"byte_end":263243,"line_start":7,"line_end":7,"column_start":1,"column_end":87}}]},{"kind":"Function","id":{"krate":0,"index":787},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/version.rs","byte_start":263500,"byte_end":263507,"line_start":15,"line_end":15,"column_start":8,"column_end":15},"name":"version","qualname":"::version::version","value":"pub fn version() -> &'static str","parent":null,"children":[],"decl_id":null,"docs":" Returns the SQLite version as a string; e.g., `\"3.16.2\"` for version 3.16.2.","sig":null,"attributes":[{"value":"/ Returns the SQLite version as a string; e.g., `\"3.16.2\"` for version 3.16.2.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/version.rs","byte_start":263328,"byte_end":263408,"line_start":12,"line_end":12,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/version.rs","byte_start":263409,"byte_end":263412,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ See [`sqlite3_libversion()`](https://www.sqlite.org/c3ref/libversion.html).","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/version.rs","byte_start":263413,"byte_end":263492,"line_start":14,"line_end":14,"column_start":1,"column_end":80}}]},{"kind":"Const","id":{"krate":0,"index":831},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":3466,"byte_end":3475,"line_start":131,"line_end":131,"column_start":11,"column_end":20},"name":"NO_PARAMS","qualname":"::NO_PARAMS","value":"&[&ToSql]","parent":null,"children":[],"decl_id":null,"docs":" To be used when your statement has no [parameter](https://sqlite.org/lang_expr.html#varparam).\n","sig":null,"attributes":[{"value":"/ To be used when your statement has no [parameter](https://sqlite.org/lang_expr.html#varparam).","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":3357,"byte_end":3455,"line_start":130,"line_end":130,"column_start":1,"column_end":99}}]},{"kind":"Type","id":{"krate":0,"index":834},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":5400,"byte_end":5406,"line_start":204,"line_end":204,"column_start":10,"column_end":16},"name":"Result","qualname":"::Result","value":"result::Result<T, E>","parent":null,"children":[],"decl_id":null,"docs":" A typedef of the result returned by many methods.\n","sig":null,"attributes":[{"value":"/ A typedef of the result returned by many methods.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":5337,"byte_end":5390,"line_start":203,"line_end":203,"column_start":1,"column_end":54}}]},{"kind":"Trait","id":{"krate":0,"index":837},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":5512,"byte_end":5529,"line_start":207,"line_end":207,"column_start":11,"column_end":28},"name":"OptionalExtension","qualname":"::OptionalExtension","value":"OptionalExtension<T>","parent":null,"children":[{"krate":0,"index":839}],"decl_id":null,"docs":" See the [method documentation](#tymethod.optional).\n","sig":null,"attributes":[{"value":"/ See the [method documentation](#tymethod.optional).","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":5446,"byte_end":5501,"line_start":206,"line_end":206,"column_start":1,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":839},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":5820,"byte_end":5828,"line_start":213,"line_end":213,"column_start":8,"column_end":16},"name":"optional","qualname":"::OptionalExtension::optional","value":"pub fn optional(Self) -> Result<Option<T>>","parent":{"krate":0,"index":837},"children":[],"decl_id":null,"docs":" Converts a `Result<T>` into a `Result<Option<T>>`.","sig":null,"attributes":[{"value":"/ Converts a `Result<T>` into a `Result<Option<T>>`.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":5539,"byte_end":5593,"line_start":208,"line_end":208,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":5598,"byte_end":5601,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ By default, Rusqlite treats 0 rows being returned from a query that is","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":5606,"byte_end":5680,"line_start":210,"line_end":210,"column_start":5,"column_end":79}},{"value":"/ expected to return 1 row as an error. This method will","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":5685,"byte_end":5743,"line_start":211,"line_end":211,"column_start":5,"column_end":63}},{"value":"/ handle that error, and give you back an `Option<T>` instead.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":5748,"byte_end":5812,"line_start":212,"line_end":212,"column_start":5,"column_end":69}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1475},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":7891,"byte_end":7895,"line_start":281,"line_end":281,"column_start":5,"column_end":9},"name":"Main","qualname":"::DatabaseName::Main","value":"DatabaseName::Main","parent":{"krate":0,"index":1473},"children":[],"decl_id":null,"docs":" The main database.\n","sig":null,"attributes":[{"value":"/ The main database.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":7864,"byte_end":7886,"line_start":280,"line_end":280,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1477},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":7978,"byte_end":7982,"line_start":284,"line_end":284,"column_start":5,"column_end":9},"name":"Temp","qualname":"::DatabaseName::Temp","value":"DatabaseName::Temp","parent":{"krate":0,"index":1473},"children":[],"decl_id":null,"docs":" The temporary database (e.g., any \"CREATE TEMPORARY TABLE\" tables).\n","sig":null,"attributes":[{"value":"/ The temporary database (e.g., any \"CREATE TEMPORARY TABLE\" tables).","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":7902,"byte_end":7973,"line_start":283,"line_end":283,"column_start":5,"column_end":76}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1479},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":8058,"byte_end":8066,"line_start":287,"line_end":287,"column_start":5,"column_end":13},"name":"Attached","qualname":"::DatabaseName::Attached","value":"DatabaseName::Attached(&'a str)","parent":{"krate":0,"index":1473},"children":[],"decl_id":null,"docs":" A database that has been attached via \"ATTACH DATABASE ...\".\n","sig":null,"attributes":[{"value":"/ A database that has been attached via \"ATTACH DATABASE ...\".","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":7989,"byte_end":8053,"line_start":286,"line_end":286,"column_start":5,"column_end":69}}]},{"kind":"Enum","id":{"krate":0,"index":1473},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":7841,"byte_end":7853,"line_start":279,"line_end":279,"column_start":10,"column_end":22},"name":"DatabaseName","qualname":"::DatabaseName","value":"pub enum DatabaseName<'a> {\n\n    /// The main database.\n    Main,\n\n    /// The temporary database (e.g., any \"CREATE TEMPORARY TABLE\" tables).\n    Temp,\n\n    /// A database that has been attached via \"ATTACH DATABASE ...\".\n    Attached(&'a str),\n}","parent":null,"children":[{"krate":0,"index":1475},{"krate":0,"index":1477},{"krate":0,"index":1479}],"decl_id":null,"docs":" Name for a database within a SQLite connection.\n","sig":null,"attributes":[{"value":"/ Name for a database within a SQLite connection.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":7757,"byte_end":7808,"line_start":277,"line_end":277,"column_start":1,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":849},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":8686,"byte_end":8696,"line_start":310,"line_end":310,"column_start":12,"column_end":22},"name":"Connection","qualname":"::Connection","value":"Connection {  }","parent":null,"children":[{"krate":0,"index":850},{"krate":0,"index":851},{"krate":0,"index":852}],"decl_id":null,"docs":" A connection to a SQLite database.\n","sig":null,"attributes":[{"value":"/ A connection to a SQLite database.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":8636,"byte_end":8674,"line_start":309,"line_end":309,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":857},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":9660,"byte_end":9664,"line_start":346,"line_end":346,"column_start":12,"column_end":16},"name":"open","qualname":"<Connection>::open","value":"pub fn open<P: AsRef<Path>>(P) -> Result<Connection>","parent":null,"children":[],"decl_id":null,"docs":" Open a new connection to a SQLite database.","sig":null,"attributes":[{"value":"/ Open a new connection to a SQLite database.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":8956,"byte_end":9003,"line_start":325,"line_end":325,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":9008,"byte_end":9011,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ `Connection::open(path)` is equivalent to","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":9016,"byte_end":9061,"line_start":327,"line_end":327,"column_start":5,"column_end":50}},{"value":"/ `Connection::open_with_flags(path,","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":9066,"byte_end":9104,"line_start":328,"line_end":328,"column_start":5,"column_end":43}},{"value":"/ OpenFlags::SQLITE_OPEN_READ_WRITE |","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":9109,"byte_end":9148,"line_start":329,"line_end":329,"column_start":5,"column_end":44}},{"value":"/ OpenFlags::SQLITE_OPEN_CREATE)`.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":9153,"byte_end":9189,"line_start":330,"line_end":330,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":9194,"byte_end":9197,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":9202,"byte_end":9220,"line_start":332,"line_end":332,"column_start":5,"column_end":23}},{"value":"/ # use rusqlite::{Connection, Result};","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":9225,"byte_end":9266,"line_start":333,"line_end":333,"column_start":5,"column_end":46}},{"value":"/ fn open_my_db() -> Result<()> {","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":9271,"byte_end":9306,"line_start":334,"line_end":334,"column_start":5,"column_end":40}},{"value":"/     let path = \"./my_db.db3\";","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":9311,"byte_end":9344,"line_start":335,"line_end":335,"column_start":5,"column_end":38}},{"value":"/     let db = Connection::open(&path)?;","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":9349,"byte_end":9391,"line_start":336,"line_end":336,"column_start":5,"column_end":47}},{"value":"/     println!(\"{}\", db.is_autocommit());","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":9396,"byte_end":9439,"line_start":337,"line_end":337,"column_start":5,"column_end":48}},{"value":"/     Ok(())","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":9444,"byte_end":9458,"line_start":338,"line_end":338,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":9463,"byte_end":9468,"line_start":339,"line_end":339,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":9473,"byte_end":9480,"line_start":340,"line_end":340,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":9485,"byte_end":9488,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":9493,"byte_end":9506,"line_start":342,"line_end":342,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":9511,"byte_end":9514,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if `path` cannot be converted to a C-compatible","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":9519,"byte_end":9588,"line_start":344,"line_end":344,"column_start":5,"column_end":74}},{"value":"/ string or if the underlying SQLite open call fails.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":9593,"byte_end":9648,"line_start":345,"line_end":345,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":859},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":9988,"byte_end":10002,"line_start":356,"line_end":356,"column_start":12,"column_end":26},"name":"open_in_memory","qualname":"<Connection>::open_in_memory","value":"pub fn open_in_memory() -> Result<Connection>","parent":null,"children":[],"decl_id":null,"docs":" Open a new connection to an in-memory SQLite database.","sig":null,"attributes":[{"value":"/ Open a new connection to an in-memory SQLite database.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":9816,"byte_end":9874,"line_start":351,"line_end":351,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":9879,"byte_end":9882,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":9887,"byte_end":9900,"line_start":353,"line_end":353,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":9905,"byte_end":9908,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if the underlying SQLite open call fails.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":9913,"byte_end":9976,"line_start":355,"line_end":355,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":860},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":10493,"byte_end":10508,"line_start":370,"line_end":370,"column_start":12,"column_end":27},"name":"open_with_flags","qualname":"<Connection>::open_with_flags","value":"pub fn open_with_flags<P: AsRef<Path>>(P, OpenFlags) -> Result<Connection>","parent":null,"children":[],"decl_id":null,"docs":" Open a new connection to a SQLite database.","sig":null,"attributes":[{"value":"/ Open a new connection to a SQLite database.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":10135,"byte_end":10182,"line_start":361,"line_end":361,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":10187,"byte_end":10190,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ [Database Connection](http://www.sqlite.org/c3ref/open.html) for a description of valid","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":10195,"byte_end":10286,"line_start":363,"line_end":363,"column_start":5,"column_end":96}},{"value":"/ flag combinations.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":10291,"byte_end":10313,"line_start":364,"line_end":364,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":10318,"byte_end":10321,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":10326,"byte_end":10339,"line_start":366,"line_end":366,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":10344,"byte_end":10347,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if `path` cannot be converted to a C-compatible","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":10352,"byte_end":10421,"line_start":368,"line_end":368,"column_start":5,"column_end":74}},{"value":"/ string or if the underlying SQLite open call fails.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":10426,"byte_end":10481,"line_start":369,"line_end":369,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":863},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":11328,"byte_end":11351,"line_start":389,"line_end":389,"column_start":12,"column_end":35},"name":"open_with_flags_and_vfs","qualname":"<Connection>::open_with_flags_and_vfs","value":"pub fn open_with_flags_and_vfs<P: AsRef<Path>>(P, OpenFlags, &str)\n-> Result<Connection>","parent":null,"children":[],"decl_id":null,"docs":" Open a new connection to a SQLite database using the specific flags and\n vfs name.","sig":null,"attributes":[{"value":"/ Open a new connection to a SQLite database using the specific flags and","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":10908,"byte_end":10983,"line_start":379,"line_end":379,"column_start":5,"column_end":80}},{"value":"/ vfs name.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":10988,"byte_end":11001,"line_start":380,"line_end":380,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":11006,"byte_end":11009,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ [Database Connection](http://www.sqlite.org/c3ref/open.html) for a description of valid","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":11014,"byte_end":11105,"line_start":382,"line_end":382,"column_start":5,"column_end":96}},{"value":"/ flag combinations.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":11110,"byte_end":11132,"line_start":383,"line_end":383,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":11137,"byte_end":11140,"line_start":384,"line_end":384,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":11145,"byte_end":11158,"line_start":385,"line_end":385,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":11163,"byte_end":11166,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if either `path` or `vfs` cannot be converted to a","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":11171,"byte_end":11243,"line_start":387,"line_end":387,"column_start":5,"column_end":77}},{"value":"/ C-compatible string or if the underlying SQLite open call fails.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":11248,"byte_end":11316,"line_start":388,"line_end":388,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":866},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":12146,"byte_end":12171,"line_start":411,"line_end":411,"column_start":12,"column_end":37},"name":"open_in_memory_with_flags","qualname":"<Connection>::open_in_memory_with_flags","value":"pub fn open_in_memory_with_flags(OpenFlags) -> Result<Connection>","parent":null,"children":[],"decl_id":null,"docs":" Open a new connection to an in-memory SQLite database.","sig":null,"attributes":[{"value":"/ Open a new connection to an in-memory SQLite database.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":11843,"byte_end":11901,"line_start":403,"line_end":403,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":11906,"byte_end":11909,"line_start":404,"line_end":404,"column_start":5,"column_end":8}},{"value":"/ [Database Connection](http://www.sqlite.org/c3ref/open.html) for a description of valid","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":11914,"byte_end":12005,"line_start":405,"line_end":405,"column_start":5,"column_end":96}},{"value":"/ flag combinations.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":12010,"byte_end":12032,"line_start":406,"line_end":406,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":12037,"byte_end":12040,"line_start":407,"line_end":407,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":12045,"byte_end":12058,"line_start":408,"line_end":408,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":12063,"byte_end":12066,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if the underlying SQLite open call fails.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":12071,"byte_end":12134,"line_start":410,"line_end":410,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":867},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":12693,"byte_end":12726,"line_start":425,"line_end":425,"column_start":12,"column_end":45},"name":"open_in_memory_with_flags_and_vfs","qualname":"<Connection>::open_in_memory_with_flags_and_vfs","value":"pub fn open_in_memory_with_flags_and_vfs(OpenFlags, &str)\n-> Result<Connection>","parent":null,"children":[],"decl_id":null,"docs":" Open a new connection to an in-memory SQLite database using the specific\n flags and vfs name.","sig":null,"attributes":[{"value":"/ Open a new connection to an in-memory SQLite database using the specific","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":12280,"byte_end":12356,"line_start":415,"line_end":415,"column_start":5,"column_end":81}},{"value":"/ flags and vfs name.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":12361,"byte_end":12384,"line_start":416,"line_end":416,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":12389,"byte_end":12392,"line_start":417,"line_end":417,"column_start":5,"column_end":8}},{"value":"/ [Database Connection](http://www.sqlite.org/c3ref/open.html) for a description of valid","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":12397,"byte_end":12488,"line_start":418,"line_end":418,"column_start":5,"column_end":96}},{"value":"/ flag combinations.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":12493,"byte_end":12515,"line_start":419,"line_end":419,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":12520,"byte_end":12523,"line_start":420,"line_end":420,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":12528,"byte_end":12541,"line_start":421,"line_end":421,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":12546,"byte_end":12549,"line_start":422,"line_end":422,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if vfs` cannot be converted to a C-compatible","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":12554,"byte_end":12621,"line_start":423,"line_end":423,"column_start":5,"column_end":72}},{"value":"/ string or if the underlying SQLite open call fails.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":12626,"byte_end":12681,"line_start":424,"line_end":424,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":868},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":13546,"byte_end":13559,"line_start":450,"line_end":450,"column_start":12,"column_end":25},"name":"execute_batch","qualname":"<Connection>::execute_batch","value":"pub fn execute_batch(&Self, &str) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Convenience method to run multiple SQL statements (that cannot take any\n parameters).","sig":null,"attributes":[{"value":"/ Convenience method to run multiple SQL statements (that cannot take any","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":12859,"byte_end":12934,"line_start":429,"line_end":429,"column_start":5,"column_end":80}},{"value":"/ parameters).","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":12939,"byte_end":12955,"line_start":430,"line_end":430,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":12960,"byte_end":12963,"line_start":431,"line_end":431,"column_start":5,"column_end":8}},{"value":"/ ## Example","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":12968,"byte_end":12982,"line_start":432,"line_end":432,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":12987,"byte_end":12990,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":12995,"byte_end":13013,"line_start":434,"line_end":434,"column_start":5,"column_end":23}},{"value":"/ # use rusqlite::{Connection, Result};","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":13018,"byte_end":13059,"line_start":435,"line_end":435,"column_start":5,"column_end":46}},{"value":"/ fn create_tables(conn: &Connection) -> Result<()> {","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":13064,"byte_end":13119,"line_start":436,"line_end":436,"column_start":5,"column_end":60}},{"value":"/     conn.execute_batch(","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":13124,"byte_end":13151,"line_start":437,"line_end":437,"column_start":5,"column_end":32}},{"value":"/         \"BEGIN;","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":13156,"byte_end":13175,"line_start":438,"line_end":438,"column_start":5,"column_end":24}},{"value":"/                         CREATE TABLE foo(x INTEGER);","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":13180,"byte_end":13236,"line_start":439,"line_end":439,"column_start":5,"column_end":61}},{"value":"/                         CREATE TABLE bar(y TEXT);","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":13241,"byte_end":13294,"line_start":440,"line_end":440,"column_start":5,"column_end":58}},{"value":"/                         COMMIT;\",","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":13299,"byte_end":13336,"line_start":441,"line_end":441,"column_start":5,"column_end":42}},{"value":"/     )","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":13341,"byte_end":13350,"line_start":442,"line_end":442,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":13355,"byte_end":13360,"line_start":443,"line_end":443,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":13365,"byte_end":13372,"line_start":444,"line_end":444,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":13377,"byte_end":13380,"line_start":445,"line_end":445,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":13385,"byte_end":13398,"line_start":446,"line_end":446,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":13403,"byte_end":13406,"line_start":447,"line_end":447,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if `sql` cannot be converted to a C-compatible string","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":13411,"byte_end":13486,"line_start":448,"line_end":448,"column_start":5,"column_end":80}},{"value":"/ or if the underlying SQLite call fails.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":13491,"byte_end":13534,"line_start":449,"line_end":449,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":869},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":14869,"byte_end":14876,"line_start":488,"line_end":488,"column_start":12,"column_end":19},"name":"execute","qualname":"<Connection>::execute","value":"pub fn execute<P>(&Self, &str, P) -> Result<usize> where P: IntoIterator,\nP::Item: ToSql","parent":null,"children":[],"decl_id":null,"docs":" Convenience method to prepare and execute a single SQL statement.","sig":null,"attributes":[{"value":"/ Convenience method to prepare and execute a single SQL statement.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":14097,"byte_end":14166,"line_start":467,"line_end":467,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":14171,"byte_end":14174,"line_start":468,"line_end":468,"column_start":5,"column_end":8}},{"value":"/ On success, returns the number of rows that were changed or inserted or","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":14179,"byte_end":14254,"line_start":469,"line_end":469,"column_start":5,"column_end":80}},{"value":"/ deleted (via `sqlite3_changes`).","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":14259,"byte_end":14295,"line_start":470,"line_end":470,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":14300,"byte_end":14303,"line_start":471,"line_end":471,"column_start":5,"column_end":8}},{"value":"/ ## Example","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":14308,"byte_end":14322,"line_start":472,"line_end":472,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":14327,"byte_end":14330,"line_start":473,"line_end":473,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":14335,"byte_end":14353,"line_start":474,"line_end":474,"column_start":5,"column_end":23}},{"value":"/ # use rusqlite::{Connection};","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":14358,"byte_end":14391,"line_start":475,"line_end":475,"column_start":5,"column_end":38}},{"value":"/ fn update_rows(conn: &Connection) {","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":14396,"byte_end":14435,"line_start":476,"line_end":476,"column_start":5,"column_end":44}},{"value":"/     match conn.execute(\"UPDATE foo SET bar = 'baz' WHERE qux = ?\", &[1i32]) {","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":14440,"byte_end":14521,"line_start":477,"line_end":477,"column_start":5,"column_end":86}},{"value":"/         Ok(updated) => println!(\"{} rows were updated\", updated),","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":14526,"byte_end":14595,"line_start":478,"line_end":478,"column_start":5,"column_end":74}},{"value":"/         Err(err) => println!(\"update failed: {}\", err),","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":14600,"byte_end":14659,"line_start":479,"line_end":479,"column_start":5,"column_end":64}},{"value":"/     }","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":14664,"byte_end":14673,"line_start":480,"line_end":480,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":14678,"byte_end":14683,"line_start":481,"line_end":481,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":14688,"byte_end":14695,"line_start":482,"line_end":482,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":14700,"byte_end":14703,"line_start":483,"line_end":483,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":14708,"byte_end":14721,"line_start":484,"line_end":484,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":14726,"byte_end":14729,"line_start":485,"line_end":485,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if `sql` cannot be converted to a C-compatible string","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":14734,"byte_end":14809,"line_start":486,"line_end":486,"column_start":5,"column_end":80}},{"value":"/ or if the underlying SQLite call fails.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":14814,"byte_end":14857,"line_start":487,"line_end":487,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":873},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":15846,"byte_end":15859,"line_start":519,"line_end":519,"column_start":12,"column_end":25},"name":"execute_named","qualname":"<Connection>::execute_named","value":"pub fn execute_named(&Self, &str, &[(&str, &ToSql)]) -> Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Convenience method to prepare and execute a single SQL statement with\n named parameter(s).","sig":null,"attributes":[{"value":"/ Convenience method to prepare and execute a single SQL statement with","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":15118,"byte_end":15191,"line_start":497,"line_end":497,"column_start":5,"column_end":78}},{"value":"/ named parameter(s).","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":15196,"byte_end":15219,"line_start":498,"line_end":498,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":15224,"byte_end":15227,"line_start":499,"line_end":499,"column_start":5,"column_end":8}},{"value":"/ On success, returns the number of rows that were changed or inserted or","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":15232,"byte_end":15307,"line_start":500,"line_end":500,"column_start":5,"column_end":80}},{"value":"/ deleted (via `sqlite3_changes`).","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":15312,"byte_end":15348,"line_start":501,"line_end":501,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":15353,"byte_end":15356,"line_start":502,"line_end":502,"column_start":5,"column_end":8}},{"value":"/ ## Example","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":15361,"byte_end":15375,"line_start":503,"line_end":503,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":15380,"byte_end":15383,"line_start":504,"line_end":504,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":15388,"byte_end":15406,"line_start":505,"line_end":505,"column_start":5,"column_end":23}},{"value":"/ # use rusqlite::{Connection, Result};","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":15411,"byte_end":15452,"line_start":506,"line_end":506,"column_start":5,"column_end":46}},{"value":"/ fn insert(conn: &Connection) -> Result<usize> {","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":15457,"byte_end":15508,"line_start":507,"line_end":507,"column_start":5,"column_end":56}},{"value":"/     conn.execute_named(","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":15513,"byte_end":15540,"line_start":508,"line_end":508,"column_start":5,"column_end":32}},{"value":"/         \"INSERT INTO test (name) VALUES (:name)\",","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":15545,"byte_end":15598,"line_start":509,"line_end":509,"column_start":5,"column_end":58}},{"value":"/         &[(\":name\", &\"one\")],","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":15603,"byte_end":15636,"line_start":510,"line_end":510,"column_start":5,"column_end":38}},{"value":"/     )","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":15641,"byte_end":15650,"line_start":511,"line_end":511,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":15655,"byte_end":15660,"line_start":512,"line_end":512,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":15665,"byte_end":15672,"line_start":513,"line_end":513,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":15677,"byte_end":15680,"line_start":514,"line_end":514,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":15685,"byte_end":15698,"line_start":515,"line_end":515,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":15703,"byte_end":15706,"line_start":516,"line_end":516,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if `sql` cannot be converted to a C-compatible string","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":15711,"byte_end":15786,"line_start":517,"line_end":517,"column_start":5,"column_end":80}},{"value":"/ or if the underlying SQLite call fails.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":15791,"byte_end":15834,"line_start":518,"line_end":518,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":876},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":16289,"byte_end":16306,"line_start":530,"line_end":530,"column_start":12,"column_end":29},"name":"last_insert_rowid","qualname":"<Connection>::last_insert_rowid","value":"pub fn last_insert_rowid(&Self) -> i64","parent":null,"children":[],"decl_id":null,"docs":" Get the SQLite rowid of the most recent successful INSERT.","sig":null,"attributes":[{"value":"/ Get the SQLite rowid of the most recent successful INSERT.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":16089,"byte_end":16151,"line_start":526,"line_end":526,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":16156,"byte_end":16159,"line_start":527,"line_end":527,"column_start":5,"column_end":8}},{"value":"/ Uses [sqlite3_last_insert_rowid](https://www.sqlite.org/c3ref/last_insert_rowid.html) under","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":16164,"byte_end":16259,"line_start":528,"line_end":528,"column_start":5,"column_end":100}},{"value":"/ the hood.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":16264,"byte_end":16277,"line_start":529,"line_end":529,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":877},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":17331,"byte_end":17340,"line_start":561,"line_end":561,"column_start":12,"column_end":21},"name":"query_row","qualname":"<Connection>::query_row","value":"pub fn query_row<T, P, F>(&Self, &str, P, F) -> Result<T> where\nP: IntoIterator, P::Item: ToSql, F: FnOnce(&Row) -> Result<T>","parent":null,"children":[],"decl_id":null,"docs":" Convenience method to execute a query that is expected to return a\n single row.","sig":null,"attributes":[{"value":"/ Convenience method to execute a query that is expected to return a","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":16383,"byte_end":16453,"line_start":534,"line_end":534,"column_start":5,"column_end":75}},{"value":"/ single row.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":16458,"byte_end":16473,"line_start":535,"line_end":535,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":16478,"byte_end":16481,"line_start":536,"line_end":536,"column_start":5,"column_end":8}},{"value":"/ ## Example","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":16486,"byte_end":16500,"line_start":537,"line_end":537,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":16505,"byte_end":16508,"line_start":538,"line_end":538,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":16513,"byte_end":16531,"line_start":539,"line_end":539,"column_start":5,"column_end":23}},{"value":"/ # use rusqlite::{Result,Connection, NO_PARAMS};","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":16536,"byte_end":16587,"line_start":540,"line_end":540,"column_start":5,"column_end":56}},{"value":"/ fn preferred_locale(conn: &Connection) -> Result<String> {","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":16592,"byte_end":16654,"line_start":541,"line_end":541,"column_start":5,"column_end":67}},{"value":"/     conn.query_row(","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":16659,"byte_end":16682,"line_start":542,"line_end":542,"column_start":5,"column_end":28}},{"value":"/         \"SELECT value FROM preferences WHERE name='locale'\",","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":16687,"byte_end":16751,"line_start":543,"line_end":543,"column_start":5,"column_end":69}},{"value":"/         NO_PARAMS,","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":16756,"byte_end":16778,"line_start":544,"line_end":544,"column_start":5,"column_end":27}},{"value":"/         |row| row.get(0),","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":16783,"byte_end":16812,"line_start":545,"line_end":545,"column_start":5,"column_end":34}},{"value":"/     )","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":16817,"byte_end":16826,"line_start":546,"line_end":546,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":16831,"byte_end":16836,"line_start":547,"line_end":547,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":16841,"byte_end":16848,"line_start":548,"line_end":548,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":16853,"byte_end":16856,"line_start":549,"line_end":549,"column_start":5,"column_end":8}},{"value":"/ If the query returns more than one row, all rows except the first are","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":16861,"byte_end":16934,"line_start":550,"line_end":550,"column_start":5,"column_end":78}},{"value":"/ ignored.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":16939,"byte_end":16951,"line_start":551,"line_end":551,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":16956,"byte_end":16959,"line_start":552,"line_end":552,"column_start":5,"column_end":8}},{"value":"/ Returns `Err(QueryReturnedNoRows)` if no results are returned. If the","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":16964,"byte_end":17037,"line_start":553,"line_end":553,"column_start":5,"column_end":78}},{"value":"/ query truly is optional, you can call `.optional()` on the result of","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":17042,"byte_end":17114,"line_start":554,"line_end":554,"column_start":5,"column_end":77}},{"value":"/ this to get a `Result<Option<T>>`.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":17119,"byte_end":17157,"line_start":555,"line_end":555,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":17162,"byte_end":17165,"line_start":556,"line_end":556,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":17170,"byte_end":17183,"line_start":557,"line_end":557,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":17188,"byte_end":17191,"line_start":558,"line_end":558,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if `sql` cannot be converted to a C-compatible string","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":17196,"byte_end":17271,"line_start":559,"line_end":559,"column_start":5,"column_end":80}},{"value":"/ or if the underlying SQLite call fails.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":17276,"byte_end":17319,"line_start":560,"line_end":560,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":881},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":18221,"byte_end":18236,"line_start":586,"line_end":586,"column_start":12,"column_end":27},"name":"query_row_named","qualname":"<Connection>::query_row_named","value":"pub fn query_row_named<T, F>(&Self, &str, &[(&str, &ToSql)], F) -> Result<T>\nwhere F: FnOnce(&Row) -> Result<T>","parent":null,"children":[],"decl_id":null,"docs":" Convenience method to execute a query with named parameter(s) that is\n expected to return a single row.","sig":null,"attributes":[{"value":"/ Convenience method to execute a query with named parameter(s) that is","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":17624,"byte_end":17697,"line_start":572,"line_end":572,"column_start":5,"column_end":78}},{"value":"/ expected to return a single row.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":17702,"byte_end":17738,"line_start":573,"line_end":573,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":17743,"byte_end":17746,"line_start":574,"line_end":574,"column_start":5,"column_end":8}},{"value":"/ If the query returns more than one row, all rows except the first are","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":17751,"byte_end":17824,"line_start":575,"line_end":575,"column_start":5,"column_end":78}},{"value":"/ ignored.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":17829,"byte_end":17841,"line_start":576,"line_end":576,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":17846,"byte_end":17849,"line_start":577,"line_end":577,"column_start":5,"column_end":8}},{"value":"/ Returns `Err(QueryReturnedNoRows)` if no results are returned. If the","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":17854,"byte_end":17927,"line_start":578,"line_end":578,"column_start":5,"column_end":78}},{"value":"/ query truly is optional, you can call `.optional()` on the result of","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":17932,"byte_end":18004,"line_start":579,"line_end":579,"column_start":5,"column_end":77}},{"value":"/ this to get a `Result<Option<T>>`.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":18009,"byte_end":18047,"line_start":580,"line_end":580,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":18052,"byte_end":18055,"line_start":581,"line_end":581,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":18060,"byte_end":18073,"line_start":582,"line_end":582,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":18078,"byte_end":18081,"line_start":583,"line_end":583,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if `sql` cannot be converted to a C-compatible string","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":18086,"byte_end":18161,"line_start":584,"line_end":584,"column_start":5,"column_end":80}},{"value":"/ or if the underlying SQLite call fails.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":18166,"byte_end":18209,"line_start":585,"line_end":585,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":884},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":19414,"byte_end":19432,"line_start":620,"line_end":620,"column_start":12,"column_end":30},"name":"query_row_and_then","qualname":"<Connection>::query_row_and_then","value":"pub fn query_row_and_then<T, E, P, F>(&Self, &str, P, F) -> Result<T, E> where\nP: IntoIterator, P::Item: ToSql, F: FnOnce(&Row) -> Result<T, E>,\nE: convert::From<Error>","parent":null,"children":[],"decl_id":null,"docs":" Convenience method to execute a query that is expected to return a\n single row, and execute a mapping via `f` on that returned row with\n the possibility of failure. The `Result` type of `f` must implement\n `std::convert::From<Error>`.","sig":null,"attributes":[{"value":"/ Convenience method to execute a query that is expected to return a","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":18494,"byte_end":18564,"line_start":595,"line_end":595,"column_start":5,"column_end":75}},{"value":"/ single row, and execute a mapping via `f` on that returned row with","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":18569,"byte_end":18640,"line_start":596,"line_end":596,"column_start":5,"column_end":76}},{"value":"/ the possibility of failure. The `Result` type of `f` must implement","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":18645,"byte_end":18716,"line_start":597,"line_end":597,"column_start":5,"column_end":76}},{"value":"/ `std::convert::From<Error>`.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":18721,"byte_end":18753,"line_start":598,"line_end":598,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":18758,"byte_end":18761,"line_start":599,"line_end":599,"column_start":5,"column_end":8}},{"value":"/ ## Example","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":18766,"byte_end":18780,"line_start":600,"line_end":600,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":18785,"byte_end":18788,"line_start":601,"line_end":601,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":18793,"byte_end":18811,"line_start":602,"line_end":602,"column_start":5,"column_end":23}},{"value":"/ # use rusqlite::{Result,Connection, NO_PARAMS};","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":18816,"byte_end":18867,"line_start":603,"line_end":603,"column_start":5,"column_end":56}},{"value":"/ fn preferred_locale(conn: &Connection) -> Result<String> {","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":18872,"byte_end":18934,"line_start":604,"line_end":604,"column_start":5,"column_end":67}},{"value":"/     conn.query_row_and_then(","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":18939,"byte_end":18971,"line_start":605,"line_end":605,"column_start":5,"column_end":37}},{"value":"/         \"SELECT value FROM preferences WHERE name='locale'\",","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":18976,"byte_end":19040,"line_start":606,"line_end":606,"column_start":5,"column_end":69}},{"value":"/         NO_PARAMS,","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":19045,"byte_end":19067,"line_start":607,"line_end":607,"column_start":5,"column_end":27}},{"value":"/         |row| row.get(0),","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":19072,"byte_end":19101,"line_start":608,"line_end":608,"column_start":5,"column_end":34}},{"value":"/     )","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":19106,"byte_end":19115,"line_start":609,"line_end":609,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":19120,"byte_end":19125,"line_start":610,"line_end":610,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":19130,"byte_end":19137,"line_start":611,"line_end":611,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":19142,"byte_end":19145,"line_start":612,"line_end":612,"column_start":5,"column_end":8}},{"value":"/ If the query returns more than one row, all rows except the first are","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":19150,"byte_end":19223,"line_start":613,"line_end":613,"column_start":5,"column_end":78}},{"value":"/ ignored.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":19228,"byte_end":19240,"line_start":614,"line_end":614,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":19245,"byte_end":19248,"line_start":615,"line_end":615,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":19253,"byte_end":19266,"line_start":616,"line_end":616,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":19271,"byte_end":19274,"line_start":617,"line_end":617,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if `sql` cannot be converted to a C-compatible string","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":19279,"byte_end":19354,"line_start":618,"line_end":618,"column_start":5,"column_end":80}},{"value":"/ or if the underlying SQLite call fails.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":19359,"byte_end":19402,"line_start":619,"line_end":619,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":890},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":20431,"byte_end":20438,"line_start":652,"line_end":652,"column_start":12,"column_end":19},"name":"prepare","qualname":"<Connection>::prepare","value":"pub fn prepare(&Self, &str) -> Result<Statement>","parent":null,"children":[],"decl_id":null,"docs":" Prepare a SQL statement for execution.","sig":null,"attributes":[{"value":"/ Prepare a SQL statement for execution.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":19838,"byte_end":19880,"line_start":634,"line_end":634,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":19885,"byte_end":19888,"line_start":635,"line_end":635,"column_start":5,"column_end":8}},{"value":"/ ## Example","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":19893,"byte_end":19907,"line_start":636,"line_end":636,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":19912,"byte_end":19915,"line_start":637,"line_end":637,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":19920,"byte_end":19938,"line_start":638,"line_end":638,"column_start":5,"column_end":23}},{"value":"/ # use rusqlite::{Connection, Result};","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":19943,"byte_end":19984,"line_start":639,"line_end":639,"column_start":5,"column_end":46}},{"value":"/ fn insert_new_people(conn: &Connection) -> Result<()> {","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":19989,"byte_end":20048,"line_start":640,"line_end":640,"column_start":5,"column_end":64}},{"value":"/     let mut stmt = conn.prepare(\"INSERT INTO People (name) VALUES (?)\")?;","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":20053,"byte_end":20130,"line_start":641,"line_end":641,"column_start":5,"column_end":82}},{"value":"/     stmt.execute(&[\"Joe Smith\"])?;","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":20135,"byte_end":20173,"line_start":642,"line_end":642,"column_start":5,"column_end":43}},{"value":"/     stmt.execute(&[\"Bob Jones\"])?;","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":20178,"byte_end":20216,"line_start":643,"line_end":643,"column_start":5,"column_end":43}},{"value":"/     Ok(())","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":20221,"byte_end":20235,"line_start":644,"line_end":644,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":20240,"byte_end":20245,"line_start":645,"line_end":645,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":20250,"byte_end":20257,"line_start":646,"line_end":646,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":20262,"byte_end":20265,"line_start":647,"line_end":647,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":20270,"byte_end":20283,"line_start":648,"line_end":648,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":20288,"byte_end":20291,"line_start":649,"line_end":649,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if `sql` cannot be converted to a C-compatible string","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":20296,"byte_end":20371,"line_start":650,"line_end":650,"column_start":5,"column_end":80}},{"value":"/ or if the underlying SQLite call fails.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":20376,"byte_end":20419,"line_start":651,"line_end":651,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":891},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":20912,"byte_end":20917,"line_start":665,"line_end":665,"column_start":12,"column_end":17},"name":"close","qualname":"<Connection>::close","value":"pub fn close(Self) -> Result<(), (Connection, Error)>","parent":null,"children":[],"decl_id":null,"docs":" Close the SQLite connection.","sig":null,"attributes":[{"value":"/ Close the SQLite connection.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":20543,"byte_end":20575,"line_start":656,"line_end":656,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":20580,"byte_end":20583,"line_start":657,"line_end":657,"column_start":5,"column_end":8}},{"value":"/ This is functionally equivalent to the `Drop` implementation for","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":20588,"byte_end":20656,"line_start":658,"line_end":658,"column_start":5,"column_end":73}},{"value":"/ `Connection` except that on failure, it returns an error and the","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":20661,"byte_end":20729,"line_start":659,"line_end":659,"column_start":5,"column_end":73}},{"value":"/ connection itself (presumably so closing can be attempted again).","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":20734,"byte_end":20803,"line_start":660,"line_end":660,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":20808,"byte_end":20811,"line_start":661,"line_end":661,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":20816,"byte_end":20829,"line_start":662,"line_end":662,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":20834,"byte_end":20837,"line_start":663,"line_end":663,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if the underlying SQLite call fails.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":20842,"byte_end":20900,"line_start":664,"line_end":664,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":893},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":24008,"byte_end":24014,"line_start":753,"line_end":753,"column_start":19,"column_end":25},"name":"handle","qualname":"<Connection>::handle","value":"pub unsafe fn handle(&Self) -> *mut ffi::sqlite3","parent":null,"children":[],"decl_id":null,"docs":" Get access to the underlying SQLite database connection handle.","sig":null,"attributes":[{"value":"/ Get access to the underlying SQLite database connection handle.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":23471,"byte_end":23538,"line_start":740,"line_end":740,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":23543,"byte_end":23546,"line_start":741,"line_end":741,"column_start":5,"column_end":8}},{"value":"/ # Warning","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":23551,"byte_end":23564,"line_start":742,"line_end":742,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":23569,"byte_end":23572,"line_start":743,"line_end":743,"column_start":5,"column_end":8}},{"value":"/ You should not need to use this function. If you do need to, please","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":23577,"byte_end":23648,"line_start":744,"line_end":744,"column_start":5,"column_end":76}},{"value":"/ [open an issue on the rusqlite repository](https://github.com/rusqlite/rusqlite/issues) and describe","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":23653,"byte_end":23757,"line_start":745,"line_end":745,"column_start":5,"column_end":109}},{"value":"/ your use case.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":23762,"byte_end":23780,"line_start":746,"line_end":746,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":23785,"byte_end":23788,"line_start":747,"line_end":747,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":23793,"byte_end":23805,"line_start":748,"line_end":748,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":23810,"byte_end":23813,"line_start":749,"line_end":749,"column_start":5,"column_end":8}},{"value":"/ This function is unsafe because it gives you raw access","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":23818,"byte_end":23877,"line_start":750,"line_end":750,"column_start":5,"column_end":64}},{"value":"/ to the SQLite connection, and what you do with it could impact the","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":23882,"byte_end":23952,"line_start":751,"line_end":751,"column_start":5,"column_end":75}},{"value":"/ safety of this `Connection`.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":23957,"byte_end":23989,"line_start":752,"line_end":752,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":894},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":24402,"byte_end":24413,"line_start":765,"line_end":765,"column_start":19,"column_end":30},"name":"from_handle","qualname":"<Connection>::from_handle","value":"pub unsafe fn from_handle(*mut ffi::sqlite3) -> Result<Connection>","parent":null,"children":[],"decl_id":null,"docs":" Create a `Connection` from a raw handle.","sig":null,"attributes":[{"value":"/ Create a `Connection` from a raw handle.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":24086,"byte_end":24130,"line_start":757,"line_end":757,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":24135,"byte_end":24138,"line_start":758,"line_end":758,"column_start":5,"column_end":8}},{"value":"/ The underlying SQLite database connection handle will not be closed when","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":24143,"byte_end":24219,"line_start":759,"line_end":759,"column_start":5,"column_end":81}},{"value":"/ the returned connection is dropped/closed.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":24224,"byte_end":24270,"line_start":760,"line_end":760,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":24275,"byte_end":24278,"line_start":761,"line_end":761,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":24283,"byte_end":24295,"line_start":762,"line_end":762,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":24300,"byte_end":24303,"line_start":763,"line_end":763,"column_start":5,"column_end":8}},{"value":"/ This function is unsafe because improper use may impact the Connection.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":24308,"byte_end":24383,"line_start":764,"line_end":764,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":895},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":24859,"byte_end":24879,"line_start":777,"line_end":777,"column_start":12,"column_end":32},"name":"get_interrupt_handle","qualname":"<Connection>::get_interrupt_handle","value":"pub fn get_interrupt_handle(&Self) -> InterruptHandle","parent":null,"children":[],"decl_id":null,"docs":" Get access to a handle that can be used to interrupt long running\n queries from another thread.\n","sig":null,"attributes":[{"value":"/ Get access to a handle that can be used to interrupt long running","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":24741,"byte_end":24810,"line_start":775,"line_end":775,"column_start":5,"column_end":74}},{"value":"/ queries from another thread.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":24815,"byte_end":24847,"line_start":776,"line_end":776,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":898},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":25417,"byte_end":25430,"line_start":794,"line_end":794,"column_start":12,"column_end":25},"name":"is_autocommit","qualname":"<Connection>::is_autocommit","value":"pub fn is_autocommit(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Test for auto-commit mode.\n Autocommit mode is on by default.\n","sig":null,"attributes":[{"value":"/ Test for auto-commit mode.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":25333,"byte_end":25363,"line_start":792,"line_end":792,"column_start":5,"column_end":35}},{"value":"/ Autocommit mode is on by default.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":25368,"byte_end":25405,"line_start":793,"line_end":793,"column_start":5,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":1487},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":26088,"byte_end":26097,"line_start":817,"line_end":817,"column_start":16,"column_end":25},"name":"OpenFlags","qualname":"::OpenFlags","value":"OpenFlags {  }","parent":null,"children":[{"krate":0,"index":1488}],"decl_id":null,"docs":" Flags for opening SQLite database connections.\n See [sqlite3_open_v2](http://www.sqlite.org/c3ref/open.html) for details.\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-1.2.1/src/lib.rs","byte_start":10375313,"byte_end":10375322,"line_start":405,"line_end":405,"column_start":11,"column_end":20}}]},{"kind":"Const","id":{"krate":0,"index":1533},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":26265,"byte_end":26286,"line_start":820,"line_end":820,"column_start":15,"column_end":36},"name":"SQLITE_OPEN_READ_ONLY","qualname":"::OpenFlags::SQLITE_OPEN_READ_ONLY","value":"OpenFlags","parent":{"krate":0,"index":1532},"children":[],"decl_id":null,"docs":" The database is opened in read-only mode.\n If the database does not already exist, an error is returned.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1534},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":26582,"byte_end":26604,"line_start":824,"line_end":824,"column_start":15,"column_end":37},"name":"SQLITE_OPEN_READ_WRITE","qualname":"::OpenFlags::SQLITE_OPEN_READ_WRITE","value":"OpenFlags","parent":{"krate":0,"index":1532},"children":[],"decl_id":null,"docs":" The database is opened for reading and writing if possible,\n or reading only if the file is write protected by the operating system.\n In either case the database must already exist, otherwise an error is returned.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1535},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":26717,"byte_end":26735,"line_start":826,"line_end":826,"column_start":15,"column_end":33},"name":"SQLITE_OPEN_CREATE","qualname":"::OpenFlags::SQLITE_OPEN_CREATE","value":"OpenFlags","parent":{"krate":0,"index":1532},"children":[],"decl_id":null,"docs":" The database is created if it does not already exist\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1536},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":26858,"byte_end":26873,"line_start":828,"line_end":828,"column_start":15,"column_end":30},"name":"SQLITE_OPEN_URI","qualname":"::OpenFlags::SQLITE_OPEN_URI","value":"OpenFlags","parent":{"krate":0,"index":1532},"children":[],"decl_id":null,"docs":" The filename can be interpreted as a URI if this flag is set.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1537},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":26979,"byte_end":26997,"line_start":830,"line_end":830,"column_start":15,"column_end":33},"name":"SQLITE_OPEN_MEMORY","qualname":"::OpenFlags::SQLITE_OPEN_MEMORY","value":"OpenFlags","parent":{"krate":0,"index":1532},"children":[],"decl_id":null,"docs":" The database will be opened as an in-memory database.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1538},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":27118,"byte_end":27138,"line_start":832,"line_end":832,"column_start":15,"column_end":35},"name":"SQLITE_OPEN_NO_MUTEX","qualname":"::OpenFlags::SQLITE_OPEN_NO_MUTEX","value":"OpenFlags","parent":{"krate":0,"index":1532},"children":[],"decl_id":null,"docs":" The new database connection will use the \"multi-thread\" threading mode.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1539},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":27268,"byte_end":27290,"line_start":834,"line_end":834,"column_start":15,"column_end":37},"name":"SQLITE_OPEN_FULL_MUTEX","qualname":"::OpenFlags::SQLITE_OPEN_FULL_MUTEX","value":"OpenFlags","parent":{"krate":0,"index":1532},"children":[],"decl_id":null,"docs":" The new database connection will use the \"serialized\" threading mode.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1540},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":27395,"byte_end":27419,"line_start":836,"line_end":836,"column_start":15,"column_end":39},"name":"SQLITE_OPEN_SHARED_CACHE","qualname":"::OpenFlags::SQLITE_OPEN_SHARED_CACHE","value":"OpenFlags","parent":{"krate":0,"index":1532},"children":[],"decl_id":null,"docs":" The database is opened shared cache enabled.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1541},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":27508,"byte_end":27533,"line_start":838,"line_end":838,"column_start":15,"column_end":40},"name":"SQLITE_OPEN_PRIVATE_CACHE","qualname":"::OpenFlags::SQLITE_OPEN_PRIVATE_CACHE","value":"OpenFlags","parent":{"krate":0,"index":1532},"children":[],"decl_id":null,"docs":" The database is opened shared cache disabled.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1542},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":27635,"byte_end":27655,"line_start":840,"line_end":840,"column_start":15,"column_end":35},"name":"SQLITE_OPEN_NOFOLLOW","qualname":"::OpenFlags::SQLITE_OPEN_NOFOLLOW","value":"OpenFlags","parent":{"krate":0,"index":1532},"children":[],"decl_id":null,"docs":" The database filename is not allowed to be a symbolic link.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":903},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":28931,"byte_end":28959,"line_start":872,"line_end":872,"column_start":15,"column_end":43},"name":"bypass_sqlite_initialization","qualname":"::bypass_sqlite_initialization","value":"pub unsafe fn bypass_sqlite_initialization()","parent":null,"children":[],"decl_id":null,"docs":" rusqlite's check for a safe SQLite threading mode requires SQLite 3.7.0 or\n later. If you are running against a SQLite older than that, rusqlite\n attempts to ensure safety by performing configuration and initialization of\n SQLite itself the first time you\n attempt to open a connection. By default, rusqlite panics if that\n initialization fails, since that could mean SQLite has been initialized in\n single-thread mode.","sig":null,"attributes":[{"value":"/ rusqlite's check for a safe SQLite threading mode requires SQLite 3.7.0 or","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":27923,"byte_end":28001,"line_start":853,"line_end":853,"column_start":1,"column_end":79}},{"value":"/ later. If you are running against a SQLite older than that, rusqlite","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":28002,"byte_end":28074,"line_start":854,"line_end":854,"column_start":1,"column_end":73}},{"value":"/ attempts to ensure safety by performing configuration and initialization of","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":28075,"byte_end":28154,"line_start":855,"line_end":855,"column_start":1,"column_end":80}},{"value":"/ SQLite itself the first time you","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":28155,"byte_end":28191,"line_start":856,"line_end":856,"column_start":1,"column_end":37}},{"value":"/ attempt to open a connection. By default, rusqlite panics if that","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":28192,"byte_end":28261,"line_start":857,"line_end":857,"column_start":1,"column_end":70}},{"value":"/ initialization fails, since that could mean SQLite has been initialized in","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":28262,"byte_end":28340,"line_start":858,"line_end":858,"column_start":1,"column_end":79}},{"value":"/ single-thread mode.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":28341,"byte_end":28364,"line_start":859,"line_end":859,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":28365,"byte_end":28368,"line_start":860,"line_end":860,"column_start":1,"column_end":4}},{"value":"/ If you are encountering that panic _and_ can ensure that SQLite has been","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":28369,"byte_end":28445,"line_start":861,"line_end":861,"column_start":1,"column_end":77}},{"value":"/ initialized in either multi-thread or serialized mode, call this function","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":28446,"byte_end":28523,"line_start":862,"line_end":862,"column_start":1,"column_end":78}},{"value":"/ prior to attempting to open a connection and rusqlite's initialization","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":28524,"byte_end":28598,"line_start":863,"line_end":863,"column_start":1,"column_end":75}},{"value":"/ process will by skipped.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":28599,"byte_end":28627,"line_start":864,"line_end":864,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":28628,"byte_end":28631,"line_start":865,"line_end":865,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":28632,"byte_end":28644,"line_start":866,"line_end":866,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":28645,"byte_end":28648,"line_start":867,"line_end":867,"column_start":1,"column_end":4}},{"value":"/ This function is unsafe because if you call it and SQLite has actually been","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":28649,"byte_end":28728,"line_start":868,"line_end":868,"column_start":1,"column_end":80}},{"value":"/ configured to run in single-thread mode,","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":28729,"byte_end":28773,"line_start":869,"line_end":869,"column_start":1,"column_end":45}},{"value":"/ you may enounter memory errors or data corruption or any number of terrible","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":28774,"byte_end":28853,"line_start":870,"line_end":870,"column_start":1,"column_end":80}},{"value":"/ things that should not be possible when you're using Rust.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":28854,"byte_end":28916,"line_start":871,"line_end":871,"column_start":1,"column_end":63}}]},{"kind":"Function","id":{"krate":0,"index":904},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":29537,"byte_end":29564,"line_start":886,"line_end":886,"column_start":15,"column_end":42},"name":"bypass_sqlite_version_check","qualname":"::bypass_sqlite_version_check","value":"pub unsafe fn bypass_sqlite_version_check()","parent":null,"children":[],"decl_id":null,"docs":" rusqlite performs a one-time check that the runtime SQLite version is at\n least as new as the version of SQLite found when rusqlite was built.\n Bypassing this check may be dangerous; e.g., if you use features of SQLite\n that are not present in the runtime version.","sig":null,"attributes":[{"value":"/ rusqlite performs a one-time check that the runtime SQLite version is at","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":29022,"byte_end":29098,"line_start":876,"line_end":876,"column_start":1,"column_end":77}},{"value":"/ least as new as the version of SQLite found when rusqlite was built.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":29099,"byte_end":29171,"line_start":877,"line_end":877,"column_start":1,"column_end":73}},{"value":"/ Bypassing this check may be dangerous; e.g., if you use features of SQLite","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":29172,"byte_end":29250,"line_start":878,"line_end":878,"column_start":1,"column_end":79}},{"value":"/ that are not present in the runtime version.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":29251,"byte_end":29299,"line_start":879,"line_end":879,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":29300,"byte_end":29303,"line_start":880,"line_end":880,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":29304,"byte_end":29316,"line_start":881,"line_end":881,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":29317,"byte_end":29320,"line_start":882,"line_end":882,"column_start":1,"column_end":4}},{"value":"/ If you are sure the runtime version is compatible with the","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":29321,"byte_end":29383,"line_start":883,"line_end":883,"column_start":1,"column_end":63}},{"value":"/ build-time version for your usage, you can bypass the version check by","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":29384,"byte_end":29458,"line_start":884,"line_end":884,"column_start":1,"column_end":75}},{"value":"/ calling this function before your first connection attempt.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":29459,"byte_end":29522,"line_start":885,"line_end":885,"column_start":1,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":905},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":29747,"byte_end":29762,"line_start":892,"line_end":892,"column_start":12,"column_end":27},"name":"InterruptHandle","qualname":"::InterruptHandle","value":"InterruptHandle {  }","parent":null,"children":[{"krate":0,"index":906}],"decl_id":null,"docs":" Allows interrupting a long-running computation.\n","sig":null,"attributes":[{"value":"/ Allows interrupting a long-running computation.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":29684,"byte_end":29735,"line_start":891,"line_end":891,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":910},"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":30071,"byte_end":30080,"line_start":902,"line_end":902,"column_start":12,"column_end":21},"name":"interrupt","qualname":"<InterruptHandle>::interrupt","value":"pub fn interrupt(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Interrupt the query currently executing on another thread. This will\n cause that query to fail with a `SQLITE3_INTERRUPT` error.\n","sig":null,"attributes":[{"value":"/ Interrupt the query currently executing on another thread. This will","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":29920,"byte_end":29992,"line_start":900,"line_end":900,"column_start":5,"column_end":77}},{"value":"/ cause that query to fail with a `SQLITE3_INTERRUPT` error.","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":29997,"byte_end":30059,"line_start":901,"line_end":901,"column_start":5,"column_end":67}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/error.rs","byte_start":65118,"byte_end":65123,"line_start":120,"line_end":120,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":62}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/error.rs","byte_start":67568,"byte_end":67573,"line_start":167,"line_end":167,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":64}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/error.rs","byte_start":67695,"byte_end":67700,"line_start":173,"line_end":173,"column_start":37,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":66}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/error.rs","byte_start":68009,"byte_end":68014,"line_start":183,"line_end":183,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":69}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/error.rs","byte_start":68951,"byte_end":68956,"line_start":205,"line_end":205,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":71}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/error.rs","byte_start":72416,"byte_end":72421,"line_start":280,"line_end":280,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":73}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/busy.rs","byte_start":74974,"byte_end":74984,"line_start":12,"line_end":12,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":92},{"krate":0,"index":95}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/busy.rs","byte_start":77654,"byte_end":77669,"line_start":71,"line_end":71,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":99}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/cache.rs","byte_start":81349,"byte_end":81359,"line_start":10,"line_end":10,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":113},{"krate":0,"index":114},{"krate":0,"index":115}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/cache.rs","byte_start":83639,"byte_end":83654,"line_start":69,"line_end":69,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":125},{"krate":0,"index":126}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/cache.rs","byte_start":83814,"byte_end":83829,"line_start":77,"line_end":77,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":129}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/cache.rs","byte_start":83953,"byte_end":83968,"line_start":83,"line_end":83,"column_start":15,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":131}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/cache.rs","byte_start":84164,"byte_end":84179,"line_start":92,"line_end":92,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":133},{"krate":0,"index":135}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/cache.rs","byte_start":84577,"byte_end":84591,"line_start":107,"line_end":107,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":137},{"krate":0,"index":138},{"krate":0,"index":139},{"krate":0,"index":142},{"krate":0,"index":143}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/column.rs","byte_start":91850,"byte_end":91856,"line_start":12,"line_end":12,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":153},{"krate":0,"index":154}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/column.rs","byte_start":92108,"byte_end":92117,"line_start":24,"line_end":24,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":156},{"krate":0,"index":157},{"krate":0,"index":158},{"krate":0,"index":159},{"krate":0,"index":161}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/column.rs","byte_start":95013,"byte_end":95017,"line_start":105,"line_end":105,"column_start":13,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":164},{"krate":0,"index":165},{"krate":0,"index":166},{"krate":0,"index":168}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/column.rs","byte_start":95862,"byte_end":95865,"line_start":133,"line_end":133,"column_start":13,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":172},{"krate":0,"index":173},{"krate":0,"index":174},{"krate":0,"index":175}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/config.rs","byte_start":101431,"byte_end":101441,"line_start":62,"line_end":62,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":205},{"krate":0,"index":206}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/inner_connection.rs","byte_start":106135,"byte_end":106150,"line_start":37,"line_end":37,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":240},{"krate":0,"index":241},{"krate":0,"index":242},{"krate":0,"index":243},{"krate":0,"index":244},{"krate":0,"index":245},{"krate":0,"index":246},{"krate":0,"index":247},{"krate":0,"index":248},{"krate":0,"index":250},{"krate":0,"index":251},{"krate":0,"index":252}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/inner_connection.rs","byte_start":114823,"byte_end":114838,"line_start":293,"line_end":293,"column_start":15,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":254}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/pragma.rs","byte_start":120434,"byte_end":120437,"line_start":14,"line_end":14,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":283},{"krate":0,"index":284},{"krate":0,"index":285},{"krate":0,"index":286},{"krate":0,"index":287},{"krate":0,"index":288},{"krate":0,"index":289},{"krate":0,"index":290},{"krate":0,"index":291},{"krate":0,"index":292},{"krate":0,"index":293},{"krate":0,"index":294},{"krate":0,"index":295},{"krate":0,"index":296},{"krate":0,"index":297},{"krate":0,"index":298}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/pragma.rs","byte_start":124269,"byte_end":124272,"line_start":152,"line_end":152,"column_start":16,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":300},{"krate":0,"index":301}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/pragma.rs","byte_start":124365,"byte_end":124375,"line_start":160,"line_end":160,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":303},{"krate":0,"index":306},{"krate":0,"index":308},{"krate":0,"index":310},{"krate":0,"index":311}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/raw_statement.rs","byte_start":134068,"byte_end":134080,"line_start":31,"line_end":31,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":326},{"krate":0,"index":327},{"krate":0,"index":328},{"krate":0,"index":330},{"krate":0,"index":331},{"krate":0,"index":332},{"krate":0,"index":333},{"krate":0,"index":334},{"krate":0,"index":335},{"krate":0,"index":336},{"krate":0,"index":337},{"krate":0,"index":338},{"krate":0,"index":340},{"krate":0,"index":341},{"krate":0,"index":342},{"krate":0,"index":343},{"krate":0,"index":344},{"krate":0,"index":345}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/raw_statement.rs","byte_start":138552,"byte_end":138564,"line_start":181,"line_end":181,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":347}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/row.rs","byte_start":139077,"byte_end":139081,"line_start":15,"line_end":15,"column_start":13,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":366},{"krate":0,"index":367},{"krate":0,"index":368},{"krate":0,"index":371},{"krate":0,"index":374}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/row.rs","byte_start":141237,"byte_end":141241,"line_start":77,"line_end":77,"column_start":13,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":380},{"krate":0,"index":381}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/row.rs","byte_start":141626,"byte_end":141630,"line_start":93,"line_end":93,"column_start":15,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":383}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/row.rs","byte_start":141935,"byte_end":141938,"line_start":106,"line_end":106,"column_start":33,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":392},{"krate":0,"index":393},{"krate":0,"index":394}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/row.rs","byte_start":142511,"byte_end":142521,"line_start":130,"line_end":130,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":404}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/row.rs","byte_start":142719,"byte_end":142729,"line_start":139,"line_end":139,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":408},{"krate":0,"index":409}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/row.rs","byte_start":143294,"byte_end":143305,"line_start":162,"line_end":162,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":422}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/row.rs","byte_start":143511,"byte_end":143522,"line_start":171,"line_end":171,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":427},{"krate":0,"index":428}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/row.rs","byte_start":144583,"byte_end":144587,"line_start":205,"line_end":205,"column_start":43,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":433},{"krate":0,"index":434},{"krate":0,"index":435},{"krate":0,"index":436}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/row.rs","byte_start":145508,"byte_end":145511,"line_start":244,"line_end":244,"column_start":13,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":442},{"krate":0,"index":445},{"krate":0,"index":449},{"krate":0,"index":451}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Inherent","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":156793,"byte_end":156802,"line_start":23,"line_end":23,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":495},{"krate":0,"index":497},{"krate":0,"index":498},{"krate":0,"index":500},{"krate":0,"index":502},{"krate":0,"index":503},{"krate":0,"index":507},{"krate":0,"index":510},{"krate":0,"index":515},{"krate":0,"index":519},{"krate":0,"index":521},{"krate":0,"index":526},{"krate":0,"index":530},{"krate":0,"index":531},{"krate":0,"index":532},{"krate":0,"index":534},{"krate":0,"index":535},{"krate":0,"index":536},{"krate":0,"index":538},{"krate":0,"index":539},{"krate":0,"index":540},{"krate":0,"index":541},{"krate":0,"index":542},{"krate":0,"index":543},{"krate":0,"index":544},{"krate":0,"index":545},{"krate":0,"index":546},{"krate":0,"index":547},{"krate":0,"index":548}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":180753,"byte_end":180762,"line_start":716,"line_end":716,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":550}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":181176,"byte_end":181185,"line_start":731,"line_end":731,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":552}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Inherent","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":181287,"byte_end":181296,"line_start":738,"line_end":738,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":554},{"krate":0,"index":555},{"krate":0,"index":556},{"krate":0,"index":557}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Inherent","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":201496,"byte_end":201507,"line_start":98,"line_end":98,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":571},{"krate":0,"index":572},{"krate":0,"index":574},{"krate":0,"index":575},{"krate":0,"index":577},{"krate":0,"index":578},{"krate":0,"index":579},{"krate":0,"index":580},{"krate":0,"index":581},{"krate":0,"index":582},{"krate":0,"index":583},{"krate":0,"index":584}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":205689,"byte_end":205700,"line_start":219,"line_end":219,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":587},{"krate":0,"index":588}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":205842,"byte_end":205853,"line_start":228,"line_end":228,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":590}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Inherent","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":205923,"byte_end":205932,"line_start":234,"line_end":234,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":592},{"krate":0,"index":595},{"krate":0,"index":596},{"krate":0,"index":597},{"krate":0,"index":599},{"krate":0,"index":600},{"krate":0,"index":602},{"krate":0,"index":603},{"krate":0,"index":604},{"krate":0,"index":605},{"krate":0,"index":606},{"krate":0,"index":607},{"krate":0,"index":608}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":209189,"byte_end":209198,"line_start":332,"line_end":332,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":611},{"krate":0,"index":612}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":209340,"byte_end":209349,"line_start":341,"line_end":341,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":614}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Inherent","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":209419,"byte_end":209429,"line_start":347,"line_end":347,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":616},{"krate":0,"index":617},{"krate":0,"index":618},{"krate":0,"index":619},{"krate":0,"index":620}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/from_sql.rs","byte_start":232976,"byte_end":232988,"line_start":32,"line_end":32,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":640}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/from_sql.rs","byte_start":233571,"byte_end":233583,"line_start":46,"line_end":46,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":642}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/from_sql.rs","byte_start":234270,"byte_end":234282,"line_start":64,"line_end":64,"column_start":16,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":644}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/from_sql.rs","byte_start":236976,"byte_end":236982,"line_start":150,"line_end":150,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":661}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/from_sql.rs","byte_start":237126,"byte_end":237129,"line_start":156,"line_end":156,"column_start":18,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":663}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/from_sql.rs","byte_start":237278,"byte_end":237280,"line_start":162,"line_end":162,"column_start":27,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":665}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/from_sql.rs","byte_start":237431,"byte_end":237434,"line_start":168,"line_end":168,"column_start":29,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":667}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/from_sql.rs","byte_start":237574,"byte_end":237577,"line_start":174,"line_end":174,"column_start":18,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":669}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/from_sql.rs","byte_start":238553,"byte_end":238559,"line_start":208,"line_end":208,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":673}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/from_sql.rs","byte_start":238788,"byte_end":238793,"line_start":217,"line_end":217,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":675}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/to_sql.rs","byte_start":241332,"byte_end":241343,"line_start":30,"line_end":30,"column_start":37,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":686}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/to_sql.rs","byte_start":242487,"byte_end":242498,"line_start":74,"line_end":74,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":689}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/to_sql.rs","byte_start":243185,"byte_end":243188,"line_start":94,"line_end":94,"column_start":45,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":694}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/to_sql.rs","byte_start":243322,"byte_end":243325,"line_start":100,"line_end":100,"column_start":35,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":697}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/to_sql.rs","byte_start":243464,"byte_end":243466,"line_start":106,"line_end":106,"column_start":44,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":700}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/to_sql.rs","byte_start":243607,"byte_end":243610,"line_start":112,"line_end":112,"column_start":46,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":703}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/to_sql.rs","byte_start":244786,"byte_end":244792,"line_start":167,"line_end":167,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":709}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/to_sql.rs","byte_start":245030,"byte_end":245033,"line_start":179,"line_end":179,"column_start":16,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":713}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/to_sql.rs","byte_start":245278,"byte_end":245283,"line_start":191,"line_end":191,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":717}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/to_sql.rs","byte_start":245406,"byte_end":245412,"line_start":197,"line_end":197,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":720}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/value.rs","byte_start":250938,"byte_end":250943,"line_start":21,"line_end":21,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":726}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/value.rs","byte_start":251027,"byte_end":251032,"line_start":27,"line_end":27,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":728}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/value.rs","byte_start":251130,"byte_end":251135,"line_start":33,"line_end":33,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":730}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/value.rs","byte_start":252084,"byte_end":252089,"line_start":75,"line_end":75,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":733}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/value.rs","byte_start":252177,"byte_end":252182,"line_start":81,"line_end":81,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":735}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/value.rs","byte_start":252270,"byte_end":252275,"line_start":87,"line_end":87,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":737}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/value.rs","byte_start":252367,"byte_end":252372,"line_start":93,"line_end":93,"column_start":24,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":739}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/value.rs","byte_start":252470,"byte_end":252475,"line_start":99,"line_end":99,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":742}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Inherent","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/value.rs","byte_start":252649,"byte_end":252654,"line_start":111,"line_end":111,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":744}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Inherent","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/value_ref.rs","byte_start":253630,"byte_end":253638,"line_start":22,"line_end":22,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":753}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Inherent","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/value_ref.rs","byte_start":254006,"byte_end":254014,"line_start":35,"line_end":35,"column_start":10,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":756},{"krate":0,"index":757},{"krate":0,"index":758},{"krate":0,"index":760}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/value_ref.rs","byte_start":255357,"byte_end":255362,"line_start":75,"line_end":75,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":762}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/value_ref.rs","byte_start":255852,"byte_end":255860,"line_start":90,"line_end":90,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":765}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/value_ref.rs","byte_start":255980,"byte_end":255988,"line_start":96,"line_end":96,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":768}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/value_ref.rs","byte_start":256099,"byte_end":256107,"line_start":102,"line_end":102,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":771}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/value_ref.rs","byte_start":256500,"byte_end":256508,"line_start":114,"line_end":114,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":775}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/mod.rs","byte_start":223391,"byte_end":223395,"line_start":104,"line_end":104,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":777}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Inherent","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/util/param_cache.rs","byte_start":264425,"byte_end":264440,"line_start":11,"line_end":11,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":794}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Inherent","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/util/small_cstr.rs","byte_start":266407,"byte_end":266419,"line_start":10,"line_end":10,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":805},{"krate":0,"index":806},{"krate":0,"index":807},{"krate":0,"index":808},{"krate":0,"index":809},{"krate":0,"index":810},{"krate":0,"index":811},{"krate":0,"index":812},{"krate":0,"index":813}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/util/small_cstr.rs","byte_start":268650,"byte_end":268662,"line_start":88,"line_end":88,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":815}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/util/small_cstr.rs","byte_start":268767,"byte_end":268779,"line_start":95,"line_end":95,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":817}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/util/small_cstr.rs","byte_start":268958,"byte_end":268970,"line_start":101,"line_end":101,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":819},{"krate":0,"index":820}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/util/small_cstr.rs","byte_start":269257,"byte_end":269269,"line_start":116,"line_end":116,"column_start":25,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":824}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/util/small_cstr.rs","byte_start":269417,"byte_end":269429,"line_start":123,"line_end":123,"column_start":35,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":826}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":5893,"byte_end":5899,"line_start":216,"line_end":216,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":842}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":8811,"byte_end":8821,"line_start":316,"line_end":316,"column_start":22,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":8840,"byte_end":8850,"line_start":318,"line_end":318,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":855}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Inherent","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":8939,"byte_end":8949,"line_start":324,"line_end":324,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":857},{"krate":0,"index":859},{"krate":0,"index":860},{"krate":0,"index":863},{"krate":0,"index":866},{"krate":0,"index":867},{"krate":0,"index":868},{"krate":0,"index":869},{"krate":0,"index":873},{"krate":0,"index":876},{"krate":0,"index":877},{"krate":0,"index":881},{"krate":0,"index":884},{"krate":0,"index":890},{"krate":0,"index":891},{"krate":0,"index":893},{"krate":0,"index":894},{"krate":0,"index":895},{"krate":0,"index":896},{"krate":0,"index":897},{"krate":0,"index":898}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":25716,"byte_end":25726,"line_start":805,"line_end":805,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":900}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":27697,"byte_end":27706,"line_start":844,"line_end":844,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":902}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":29833,"byte_end":29848,"line_start":896,"line_end":896,"column_start":22,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":29873,"byte_end":29888,"line_start":897,"line_end":897,"column_start":22,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Inherent","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":29898,"byte_end":29913,"line_start":899,"line_end":899,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":910}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":2659,"byte_end":2665,"line_start":98,"line_end":98,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":176}},{"kind":"Mod","span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":3111,"byte_end":3116,"line_start":119,"line_end":119,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":622}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/error.rs","byte_start":65118,"byte_end":65123,"line_start":120,"line_end":120,"column_start":20,"column_end":25},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":912},"to":{"krate":2,"index":1790}},{"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/error.rs","byte_start":67568,"byte_end":67573,"line_start":167,"line_end":167,"column_start":31,"column_end":36},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":912},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/error.rs","byte_start":67695,"byte_end":67700,"line_start":173,"line_end":173,"column_start":37,"column_end":42},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":912},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/error.rs","byte_start":68009,"byte_end":68014,"line_start":183,"line_end":183,"column_start":29,"column_end":34},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":912},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/error.rs","byte_start":68951,"byte_end":68956,"line_start":205,"line_end":205,"column_start":23,"column_end":28},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":912},"to":{"krate":2,"index":6836}},{"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/error.rs","byte_start":72416,"byte_end":72421,"line_start":280,"line_end":280,"column_start":23,"column_end":28},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":912},"to":{"krate":1,"index":1724}},{"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/busy.rs","byte_start":74974,"byte_end":74984,"line_start":12,"line_end":12,"column_start":6,"column_end":16},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":849},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/busy.rs","byte_start":77654,"byte_end":77669,"line_start":71,"line_end":71,"column_start":6,"column_end":21},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":235},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/cache.rs","byte_start":81349,"byte_end":81359,"line_start":10,"line_end":10,"column_start":6,"column_end":16},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":849},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/cache.rs","byte_start":83639,"byte_end":83654,"line_start":69,"line_end":69,"column_start":23,"column_end":38},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":119},"to":{"krate":2,"index":2271}},{"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/cache.rs","byte_start":83814,"byte_end":83829,"line_start":77,"line_end":77,"column_start":26,"column_end":41},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":119},"to":{"krate":2,"index":2284}},{"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/cache.rs","byte_start":83953,"byte_end":83968,"line_start":83,"line_end":83,"column_start":15,"column_end":30},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":119},"to":{"krate":2,"index":2295}},{"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/cache.rs","byte_start":84164,"byte_end":84179,"line_start":92,"line_end":92,"column_start":6,"column_end":21},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":119},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/cache.rs","byte_start":84577,"byte_end":84591,"line_start":107,"line_end":107,"column_start":6,"column_end":20},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":116},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/column.rs","byte_start":91850,"byte_end":91856,"line_start":12,"line_end":12,"column_start":6,"column_end":12},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":971},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/column.rs","byte_start":92108,"byte_end":92117,"line_start":24,"line_end":24,"column_start":6,"column_end":15},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":490},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/column.rs","byte_start":95013,"byte_end":95017,"line_start":105,"line_end":105,"column_start":13,"column_end":17},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":360},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/column.rs","byte_start":95862,"byte_end":95865,"line_start":133,"line_end":133,"column_start":13,"column_end":16},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":437},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/config.rs","byte_start":101431,"byte_end":101441,"line_start":62,"line_end":62,"column_start":6,"column_end":16},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":849},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/inner_connection.rs","byte_start":106135,"byte_end":106150,"line_start":37,"line_end":37,"column_start":6,"column_end":21},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":235},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/inner_connection.rs","byte_start":114823,"byte_end":114838,"line_start":293,"line_end":293,"column_start":15,"column_end":30},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":235},"to":{"krate":2,"index":2295}},{"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/pragma.rs","byte_start":120434,"byte_end":120437,"line_start":14,"line_end":14,"column_start":6,"column_end":9},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":280},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/pragma.rs","byte_start":124269,"byte_end":124272,"line_start":152,"line_end":152,"column_start":16,"column_end":19},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":280},"to":{"krate":2,"index":2271}},{"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/pragma.rs","byte_start":124365,"byte_end":124375,"line_start":160,"line_end":160,"column_start":6,"column_end":16},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":849},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/raw_statement.rs","byte_start":134068,"byte_end":134080,"line_start":31,"line_end":31,"column_start":6,"column_end":18},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":978},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/raw_statement.rs","byte_start":138552,"byte_end":138564,"line_start":181,"line_end":181,"column_start":15,"column_end":27},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":978},"to":{"krate":2,"index":2295}},{"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/row.rs","byte_start":139077,"byte_end":139081,"line_start":15,"line_end":15,"column_start":13,"column_end":17},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":360},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/row.rs","byte_start":141237,"byte_end":141241,"line_start":77,"line_end":77,"column_start":13,"column_end":17},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":360},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/row.rs","byte_start":141626,"byte_end":141630,"line_start":93,"line_end":93,"column_start":15,"column_end":19},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":360},"to":{"krate":2,"index":2295}},{"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/row.rs","byte_start":141935,"byte_end":141938,"line_start":106,"line_end":106,"column_start":33,"column_end":36},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":384},"to":{"krate":20,"index":41}},{"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/row.rs","byte_start":142511,"byte_end":142521,"line_start":130,"line_end":130,"column_start":19,"column_end":29},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":395},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/row.rs","byte_start":142719,"byte_end":142729,"line_start":139,"line_end":139,"column_start":25,"column_end":35},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":395},"to":{"krate":2,"index":5536}},{"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/row.rs","byte_start":143294,"byte_end":143305,"line_start":162,"line_end":162,"column_start":22,"column_end":33},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":412},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/row.rs","byte_start":143511,"byte_end":143522,"line_start":171,"line_end":171,"column_start":28,"column_end":39},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":412},"to":{"krate":2,"index":5536}},{"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/row.rs","byte_start":144583,"byte_end":144587,"line_start":205,"line_end":205,"column_start":43,"column_end":47},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":360},"to":{"krate":21,"index":6}},{"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/row.rs","byte_start":145508,"byte_end":145511,"line_start":244,"line_end":244,"column_start":13,"column_end":16},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":437},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":156793,"byte_end":156802,"line_start":23,"line_end":23,"column_start":6,"column_end":15},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":490},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":180753,"byte_end":180762,"line_start":716,"line_end":716,"column_start":21,"column_end":30},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":490},"to":{"krate":2,"index":6831}},{"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":181176,"byte_end":181185,"line_start":731,"line_end":731,"column_start":15,"column_end":24},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":490},"to":{"krate":2,"index":2295}},{"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/statement.rs","byte_start":181287,"byte_end":181296,"line_start":738,"line_end":738,"column_start":6,"column_end":15},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":490},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":201496,"byte_end":201507,"line_start":98,"line_end":98,"column_start":6,"column_end":17},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":1250},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":205689,"byte_end":205700,"line_start":219,"line_end":219,"column_start":16,"column_end":27},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":1250},"to":{"krate":2,"index":2271}},{"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":205842,"byte_end":205853,"line_start":228,"line_end":228,"column_start":15,"column_end":26},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":1250},"to":{"krate":2,"index":2295}},{"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":205923,"byte_end":205932,"line_start":234,"line_end":234,"column_start":6,"column_end":15},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":563},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":209189,"byte_end":209198,"line_start":332,"line_end":332,"column_start":16,"column_end":25},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":563},"to":{"krate":2,"index":2271}},{"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":209340,"byte_end":209349,"line_start":341,"line_end":341,"column_start":15,"column_end":24},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":563},"to":{"krate":2,"index":2295}},{"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/transaction.rs","byte_start":209419,"byte_end":209429,"line_start":347,"line_end":347,"column_start":6,"column_end":16},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":849},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/from_sql.rs","byte_start":232976,"byte_end":232988,"line_start":32,"line_end":32,"column_start":20,"column_end":32},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":1257},"to":{"krate":2,"index":1790}},{"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/from_sql.rs","byte_start":233571,"byte_end":233583,"line_start":46,"line_end":46,"column_start":23,"column_end":35},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":1257},"to":{"krate":2,"index":6836}},{"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/from_sql.rs","byte_start":234270,"byte_end":234282,"line_start":64,"line_end":64,"column_start":16,"column_end":28},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":1257},"to":{"krate":1,"index":1724}},{"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/from_sql.rs","byte_start":235278,"byte_end":235283,"line_start":88,"line_end":88,"column_start":20,"column_end":25},"kind":"SuperTrait","from":{"krate":2,"index":2076},"to":{"krate":0,"index":647}},{"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/from_sql.rs","byte_start":236976,"byte_end":236982,"line_start":150,"line_end":150,"column_start":18,"column_end":24},"kind":{"Impl":{"id":55}},"from":{"krate":5,"index":5687},"to":{"krate":0,"index":647}},{"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/from_sql.rs","byte_start":237126,"byte_end":237129,"line_start":156,"line_end":156,"column_start":18,"column_end":21},"kind":{"Impl":{"id":56}},"from":{"krate":5,"index":93},"to":{"krate":0,"index":647}},{"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/from_sql.rs","byte_start":237278,"byte_end":237280,"line_start":162,"line_end":162,"column_start":27,"column_end":29},"kind":{"Impl":{"id":57}},"from":{"krate":5,"index":3577},"to":{"krate":0,"index":647}},{"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/from_sql.rs","byte_start":237431,"byte_end":237434,"line_start":168,"line_end":168,"column_start":29,"column_end":32},"kind":{"Impl":{"id":58}},"from":{"krate":5,"index":4499},"to":{"krate":0,"index":647}},{"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/from_sql.rs","byte_start":237574,"byte_end":237577,"line_start":174,"line_end":174,"column_start":18,"column_end":21},"kind":{"Impl":{"id":59}},"from":{"krate":5,"index":4841},"to":{"krate":0,"index":647}},{"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/from_sql.rs","byte_start":238553,"byte_end":238559,"line_start":208,"line_end":208,"column_start":30,"column_end":36},"kind":{"Impl":{"id":60}},"from":{"krate":2,"index":34376},"to":{"krate":0,"index":647}},{"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/from_sql.rs","byte_start":238788,"byte_end":238793,"line_start":217,"line_end":217,"column_start":18,"column_end":23},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":1354},"to":{"krate":0,"index":647}},{"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/to_sql.rs","byte_start":241332,"byte_end":241343,"line_start":30,"line_end":30,"column_start":37,"column_end":48},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":1286},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/to_sql.rs","byte_start":242487,"byte_end":242498,"line_start":74,"line_end":74,"column_start":16,"column_end":27},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":1286},"to":{"krate":0,"index":690}},{"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/to_sql.rs","byte_start":243185,"byte_end":243188,"line_start":94,"line_end":94,"column_start":45,"column_end":48},"kind":{"Impl":{"id":64}},"from":{"krate":5,"index":406},"to":{"krate":0,"index":690}},{"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/to_sql.rs","byte_start":243322,"byte_end":243325,"line_start":100,"line_end":100,"column_start":35,"column_end":38},"kind":{"Impl":{"id":65}},"from":{"krate":5,"index":93},"to":{"krate":0,"index":690}},{"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/to_sql.rs","byte_start":243464,"byte_end":243466,"line_start":106,"line_end":106,"column_start":44,"column_end":46},"kind":{"Impl":{"id":66}},"from":{"krate":5,"index":3577},"to":{"krate":0,"index":690}},{"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/to_sql.rs","byte_start":243607,"byte_end":243610,"line_start":112,"line_end":112,"column_start":46,"column_end":49},"kind":{"Impl":{"id":67}},"from":{"krate":5,"index":4499},"to":{"krate":0,"index":690}},{"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/to_sql.rs","byte_start":244786,"byte_end":244792,"line_start":167,"line_end":167,"column_start":16,"column_end":22},"kind":{"Impl":{"id":79}},"from":{"krate":5,"index":5687},"to":{"krate":0,"index":690}},{"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/to_sql.rs","byte_start":245030,"byte_end":245033,"line_start":179,"line_end":179,"column_start":16,"column_end":19},"kind":{"Impl":{"id":81}},"from":{"krate":5,"index":4841},"to":{"krate":0,"index":690}},{"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/to_sql.rs","byte_start":245278,"byte_end":245283,"line_start":191,"line_end":191,"column_start":16,"column_end":21},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":1354},"to":{"krate":0,"index":690}},{"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/to_sql.rs","byte_start":245406,"byte_end":245412,"line_start":197,"line_end":197,"column_start":26,"column_end":32},"kind":{"Impl":{"id":83}},"from":{"krate":2,"index":34376},"to":{"krate":0,"index":690}},{"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/value.rs","byte_start":250938,"byte_end":250943,"line_start":21,"line_end":21,"column_start":21,"column_end":26},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":1354},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/value.rs","byte_start":251027,"byte_end":251032,"line_start":27,"line_end":27,"column_start":21,"column_end":26},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":1354},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/value.rs","byte_start":251130,"byte_end":251135,"line_start":33,"line_end":33,"column_start":22,"column_end":27},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":1354},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/value.rs","byte_start":252084,"byte_end":252089,"line_start":75,"line_end":75,"column_start":20,"column_end":25},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":1354},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/value.rs","byte_start":252177,"byte_end":252182,"line_start":81,"line_end":81,"column_start":20,"column_end":25},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":1354},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/value.rs","byte_start":252270,"byte_end":252275,"line_start":87,"line_end":87,"column_start":23,"column_end":28},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":1354},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/value.rs","byte_start":252367,"byte_end":252372,"line_start":93,"line_end":93,"column_start":24,"column_end":29},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":1354},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/value.rs","byte_start":252470,"byte_end":252475,"line_start":99,"line_end":99,"column_start":29,"column_end":34},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":1354},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/value.rs","byte_start":252649,"byte_end":252654,"line_start":111,"line_end":111,"column_start":6,"column_end":11},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":1354},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/value_ref.rs","byte_start":253630,"byte_end":253638,"line_start":22,"line_end":22,"column_start":6,"column_end":14},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":1389},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/value_ref.rs","byte_start":254006,"byte_end":254014,"line_start":35,"line_end":35,"column_start":10,"column_end":18},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":1389},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/value_ref.rs","byte_start":255357,"byte_end":255362,"line_start":75,"line_end":75,"column_start":29,"column_end":34},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":1354},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/value_ref.rs","byte_start":255852,"byte_end":255860,"line_start":90,"line_end":90,"column_start":28,"column_end":36},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":1389},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/value_ref.rs","byte_start":255980,"byte_end":255988,"line_start":96,"line_end":96,"column_start":29,"column_end":37},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":1389},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/value_ref.rs","byte_start":256099,"byte_end":256107,"line_start":102,"line_end":102,"column_start":30,"column_end":38},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":1389},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/value_ref.rs","byte_start":256500,"byte_end":256508,"line_start":114,"line_end":114,"column_start":33,"column_end":41},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":1389},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/types/mod.rs","byte_start":223391,"byte_end":223395,"line_start":104,"line_end":104,"column_start":23,"column_end":27},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":1424},"to":{"krate":2,"index":6836}},{"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/util/param_cache.rs","byte_start":264425,"byte_end":264440,"line_start":11,"line_end":11,"column_start":6,"column_end":21},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":1442},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/util/small_cstr.rs","byte_start":266407,"byte_end":266419,"line_start":10,"line_end":10,"column_start":6,"column_end":18},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":1451},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/util/small_cstr.rs","byte_start":268650,"byte_end":268662,"line_start":88,"line_end":88,"column_start":18,"column_end":30},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":1451},"to":{"krate":2,"index":2059}},{"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/util/small_cstr.rs","byte_start":268767,"byte_end":268779,"line_start":95,"line_end":95,"column_start":26,"column_end":38},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":1451},"to":{"krate":2,"index":6831}},{"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/util/small_cstr.rs","byte_start":268958,"byte_end":268970,"line_start":101,"line_end":101,"column_start":26,"column_end":38},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":1451},"to":{"krate":2,"index":2271}},{"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/util/small_cstr.rs","byte_start":269257,"byte_end":269269,"line_start":116,"line_end":116,"column_start":25,"column_end":37},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":1451},"to":{"krate":2,"index":1790}},{"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/util/small_cstr.rs","byte_start":269417,"byte_end":269429,"line_start":123,"line_end":123,"column_start":35,"column_end":47},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":1451},"to":{"krate":2,"index":1740}},{"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":5893,"byte_end":5899,"line_start":216,"line_end":216,"column_start":34,"column_end":40},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":834},"to":{"krate":0,"index":837}},{"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":8811,"byte_end":8821,"line_start":316,"line_end":316,"column_start":22,"column_end":32},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":849},"to":{"krate":2,"index":2071}},{"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":8840,"byte_end":8850,"line_start":318,"line_end":318,"column_start":15,"column_end":25},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":849},"to":{"krate":2,"index":2295}},{"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":8939,"byte_end":8949,"line_start":324,"line_end":324,"column_start":6,"column_end":16},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":849},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":25716,"byte_end":25726,"line_start":805,"line_end":805,"column_start":21,"column_end":31},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":849},"to":{"krate":2,"index":6831}},{"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":27697,"byte_end":27706,"line_start":844,"line_end":844,"column_start":18,"column_end":27},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":1487},"to":{"krate":2,"index":2059}},{"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":29833,"byte_end":29848,"line_start":896,"line_end":896,"column_start":22,"column_end":37},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":905},"to":{"krate":2,"index":2071}},{"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":29873,"byte_end":29888,"line_start":897,"line_end":897,"column_start":22,"column_end":37},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":905},"to":{"krate":2,"index":2083}},{"span":{"file_name":"/Users/oishikdas/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.24.2/src/lib.rs","byte_start":29898,"byte_end":29913,"line_start":899,"line_end":899,"column_start":6,"column_end":21},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":905},"to":{"krate":4294967295,"index":4294967295}}]}